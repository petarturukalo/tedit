!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/usr/local/src/mine/text-editor/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210110.0/
ACMD_H	src/cmd/acmd.h	/^#define ACMD_H$/;"	d
ACS_BBSS	/usr/include/curses.h	/^#define ACS_BBSS	/;"	d
ACS_BLOCK	/usr/include/curses.h	/^#define ACS_BLOCK	/;"	d
ACS_BOARD	/usr/include/curses.h	/^#define ACS_BOARD	/;"	d
ACS_BSBS	/usr/include/curses.h	/^#define ACS_BSBS	/;"	d
ACS_BSSB	/usr/include/curses.h	/^#define ACS_BSSB	/;"	d
ACS_BSSS	/usr/include/curses.h	/^#define ACS_BSSS	/;"	d
ACS_BTEE	/usr/include/curses.h	/^#define ACS_BTEE	/;"	d
ACS_BULLET	/usr/include/curses.h	/^#define ACS_BULLET	/;"	d
ACS_CKBOARD	/usr/include/curses.h	/^#define ACS_CKBOARD	/;"	d
ACS_DARROW	/usr/include/curses.h	/^#define ACS_DARROW	/;"	d
ACS_DEGREE	/usr/include/curses.h	/^#define ACS_DEGREE	/;"	d
ACS_DIAMOND	/usr/include/curses.h	/^#define ACS_DIAMOND	/;"	d
ACS_GEQUAL	/usr/include/curses.h	/^#define ACS_GEQUAL	/;"	d
ACS_HLINE	/usr/include/curses.h	/^#define ACS_HLINE	/;"	d
ACS_LANTERN	/usr/include/curses.h	/^#define ACS_LANTERN	/;"	d
ACS_LARROW	/usr/include/curses.h	/^#define ACS_LARROW	/;"	d
ACS_LEQUAL	/usr/include/curses.h	/^#define ACS_LEQUAL	/;"	d
ACS_LLCORNER	/usr/include/curses.h	/^#define ACS_LLCORNER	/;"	d
ACS_LRCORNER	/usr/include/curses.h	/^#define ACS_LRCORNER	/;"	d
ACS_LTEE	/usr/include/curses.h	/^#define ACS_LTEE	/;"	d
ACS_NEQUAL	/usr/include/curses.h	/^#define ACS_NEQUAL	/;"	d
ACS_PI	/usr/include/curses.h	/^#define ACS_PI	/;"	d
ACS_PLMINUS	/usr/include/curses.h	/^#define ACS_PLMINUS	/;"	d
ACS_PLUS	/usr/include/curses.h	/^#define ACS_PLUS	/;"	d
ACS_RARROW	/usr/include/curses.h	/^#define ACS_RARROW	/;"	d
ACS_RTEE	/usr/include/curses.h	/^#define ACS_RTEE	/;"	d
ACS_S1	/usr/include/curses.h	/^#define ACS_S1	/;"	d
ACS_S3	/usr/include/curses.h	/^#define ACS_S3	/;"	d
ACS_S7	/usr/include/curses.h	/^#define ACS_S7	/;"	d
ACS_S9	/usr/include/curses.h	/^#define ACS_S9	/;"	d
ACS_SBBS	/usr/include/curses.h	/^#define ACS_SBBS	/;"	d
ACS_SBSB	/usr/include/curses.h	/^#define ACS_SBSB	/;"	d
ACS_SBSS	/usr/include/curses.h	/^#define ACS_SBSS	/;"	d
ACS_SSBB	/usr/include/curses.h	/^#define ACS_SSBB	/;"	d
ACS_SSBS	/usr/include/curses.h	/^#define ACS_SSBS	/;"	d
ACS_SSSB	/usr/include/curses.h	/^#define ACS_SSSB	/;"	d
ACS_SSSS	/usr/include/curses.h	/^#define ACS_SSSS	/;"	d
ACS_STERLING	/usr/include/curses.h	/^#define ACS_STERLING	/;"	d
ACS_TTEE	/usr/include/curses.h	/^#define ACS_TTEE	/;"	d
ACS_UARROW	/usr/include/curses.h	/^#define ACS_UARROW	/;"	d
ACS_ULCORNER	/usr/include/curses.h	/^#define ACS_ULCORNER	/;"	d
ACS_URCORNER	/usr/include/curses.h	/^#define ACS_URCORNER	/;"	d
ACS_VLINE	/usr/include/curses.h	/^#define ACS_VLINE	/;"	d
ACTION	/usr/include/search.h	/^ACTION;$/;"	t	typeref:enum:__anon6a76e5fc0103
ALL_MOUSE_EVENTS	/usr/include/curses.h	/^#define	ALL_MOUSE_EVENTS	/;"	d
AOBJS	test/Makefile	/^AOBJS=build\/test-assert.o$/;"	m
ASCII_BS	src/getch.h	/^#define ASCII_BS /;"	d
ASCII_ENTER	src/getch.h	/^#define ASCII_ENTER /;"	d
ASCII_ESC	src/getch.h	/^#define ASCII_ESC /;"	d
A_ALTCHARSET	/usr/include/curses.h	/^#define A_ALTCHARSET	/;"	d
A_ATTRIBUTES	/usr/include/curses.h	/^#define A_ATTRIBUTES	/;"	d
A_BLINK	/usr/include/curses.h	/^#define A_BLINK	/;"	d
A_BOLD	/usr/include/curses.h	/^#define A_BOLD	/;"	d
A_CHARTEXT	/usr/include/curses.h	/^#define A_CHARTEXT	/;"	d
A_COLOR	/usr/include/curses.h	/^#define A_COLOR	/;"	d
A_DIM	/usr/include/curses.h	/^#define A_DIM	/;"	d
A_HORIZONTAL	/usr/include/curses.h	/^#define A_HORIZONTAL	/;"	d
A_INVIS	/usr/include/curses.h	/^#define A_INVIS	/;"	d
A_ITALIC	/usr/include/curses.h	/^#define A_ITALIC	/;"	d
A_LEFT	/usr/include/curses.h	/^#define A_LEFT	/;"	d
A_LOW	/usr/include/curses.h	/^#define A_LOW	/;"	d
A_NORMAL	/usr/include/curses.h	/^#define A_NORMAL	/;"	d
A_PROTECT	/usr/include/curses.h	/^#define A_PROTECT	/;"	d
A_REVERSE	/usr/include/curses.h	/^#define A_REVERSE	/;"	d
A_RIGHT	/usr/include/curses.h	/^#define A_RIGHT	/;"	d
A_STANDOUT	/usr/include/curses.h	/^#define A_STANDOUT	/;"	d
A_TOP	/usr/include/curses.h	/^#define A_TOP	/;"	d
A_UNDERLINE	/usr/include/curses.h	/^#define A_UNDERLINE	/;"	d
A_VERTICAL	/usr/include/curses.h	/^#define A_VERTICAL	/;"	d
BUFS_H	src/fbuf/bufs.h	/^#define BUFS_H$/;"	d
BUTTON1_CLICKED	/usr/include/curses.h	/^#define	BUTTON1_CLICKED	/;"	d
BUTTON1_DOUBLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON1_DOUBLE_CLICKED	/;"	d
BUTTON1_PRESSED	/usr/include/curses.h	/^#define	BUTTON1_PRESSED	/;"	d
BUTTON1_RELEASED	/usr/include/curses.h	/^#define	BUTTON1_RELEASED	/;"	d
BUTTON1_RESERVED_EVENT	/usr/include/curses.h	/^#define	BUTTON1_RESERVED_EVENT	/;"	d
BUTTON1_TRIPLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON1_TRIPLE_CLICKED	/;"	d
BUTTON2_CLICKED	/usr/include/curses.h	/^#define	BUTTON2_CLICKED	/;"	d
BUTTON2_DOUBLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON2_DOUBLE_CLICKED	/;"	d
BUTTON2_PRESSED	/usr/include/curses.h	/^#define	BUTTON2_PRESSED	/;"	d
BUTTON2_RELEASED	/usr/include/curses.h	/^#define	BUTTON2_RELEASED	/;"	d
BUTTON2_RESERVED_EVENT	/usr/include/curses.h	/^#define	BUTTON2_RESERVED_EVENT	/;"	d
BUTTON2_TRIPLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON2_TRIPLE_CLICKED	/;"	d
BUTTON3_CLICKED	/usr/include/curses.h	/^#define	BUTTON3_CLICKED	/;"	d
BUTTON3_DOUBLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON3_DOUBLE_CLICKED	/;"	d
BUTTON3_PRESSED	/usr/include/curses.h	/^#define	BUTTON3_PRESSED	/;"	d
BUTTON3_RELEASED	/usr/include/curses.h	/^#define	BUTTON3_RELEASED	/;"	d
BUTTON3_RESERVED_EVENT	/usr/include/curses.h	/^#define	BUTTON3_RESERVED_EVENT	/;"	d
BUTTON3_TRIPLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON3_TRIPLE_CLICKED	/;"	d
BUTTON4_CLICKED	/usr/include/curses.h	/^#define	BUTTON4_CLICKED	/;"	d
BUTTON4_DOUBLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON4_DOUBLE_CLICKED	/;"	d
BUTTON4_PRESSED	/usr/include/curses.h	/^#define	BUTTON4_PRESSED	/;"	d
BUTTON4_RELEASED	/usr/include/curses.h	/^#define	BUTTON4_RELEASED	/;"	d
BUTTON4_RESERVED_EVENT	/usr/include/curses.h	/^#define	BUTTON4_RESERVED_EVENT	/;"	d
BUTTON4_TRIPLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON4_TRIPLE_CLICKED	/;"	d
BUTTON5_CLICKED	/usr/include/curses.h	/^#define	BUTTON5_CLICKED	/;"	d
BUTTON5_DOUBLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON5_DOUBLE_CLICKED	/;"	d
BUTTON5_PRESSED	/usr/include/curses.h	/^#define	BUTTON5_PRESSED	/;"	d
BUTTON5_RELEASED	/usr/include/curses.h	/^#define	BUTTON5_RELEASED	/;"	d
BUTTON5_TRIPLE_CLICKED	/usr/include/curses.h	/^#define	BUTTON5_TRIPLE_CLICKED	/;"	d
BUTTON_ALT	/usr/include/curses.h	/^#define	BUTTON_ALT	/;"	d
BUTTON_CLICK	/usr/include/curses.h	/^#define	BUTTON_CLICK(/;"	d
BUTTON_CTRL	/usr/include/curses.h	/^#define	BUTTON_CTRL	/;"	d
BUTTON_DOUBLE_CLICK	/usr/include/curses.h	/^#define	BUTTON_DOUBLE_CLICK(/;"	d
BUTTON_PRESS	/usr/include/curses.h	/^#define	BUTTON_PRESS(/;"	d
BUTTON_RELEASE	/usr/include/curses.h	/^#define	BUTTON_RELEASE(/;"	d
BUTTON_RESERVED_EVENT	/usr/include/curses.h	/^#define	BUTTON_RESERVED_EVENT(/;"	d
BUTTON_SHIFT	/usr/include/curses.h	/^#define	BUTTON_SHIFT	/;"	d
BUTTON_TRIPLE_CLICK	/usr/include/curses.h	/^#define	BUTTON_TRIPLE_CLICK(/;"	d
CC	Makefile	/^CC=gcc$/;"	m
CC	test/Makefile	/^CC=mygcc$/;"	m
CCHARW_MAX	/usr/include/curses.h	/^#define CCHARW_MAX	/;"	d
CFLAGS	Makefile	/^CFLAGS=-c$/;"	m
CFLAGS	test/Makefile	/^CFLAGS=-c -g$/;"	m
CHRP_H	src/chrp.h	/^#define CHRP_H$/;"	d
CMDS_H	src/cmd/cmds.h	/^#define CMDS_H$/;"	d
CMD_FUNCS	src/cmd/cmds.c	/^cmd_t *(*CMD_FUNCS[])(void) = {$/;"	v	typeref:typename:cmd_t * (* [])(void)
CMD_H	src/cmd/cmd.h	/^#define CMD_H$/;"	d
COLORS	/usr/include/curses.h	/^#define COLORS /;"	d
COLOR_BLACK	/usr/include/curses.h	/^#define COLOR_BLACK	/;"	d
COLOR_BLUE	/usr/include/curses.h	/^#define COLOR_BLUE	/;"	d
COLOR_CYAN	/usr/include/curses.h	/^#define COLOR_CYAN	/;"	d
COLOR_GREEN	/usr/include/curses.h	/^#define COLOR_GREEN	/;"	d
COLOR_MAGENTA	/usr/include/curses.h	/^#define COLOR_MAGENTA	/;"	d
COLOR_PAIR	/usr/include/curses.h	/^#define COLOR_PAIR(/;"	d
COLOR_PAIR	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) COLOR_PAIR (int);				\/* generated *\/$/;"	p	typeref:typename:int
COLOR_PAIRS	/usr/include/curses.h	/^#define COLOR_PAIRS /;"	d
COLOR_RED	/usr/include/curses.h	/^#define COLOR_RED	/;"	d
COLOR_WHITE	/usr/include/curses.h	/^#define COLOR_WHITE	/;"	d
COLOR_YELLOW	/usr/include/curses.h	/^#define COLOR_YELLOW	/;"	d
COLS	/usr/include/curses.h	/^#define COLS /;"	d
CPARSE_H	src/cmd/cparse.h	/^#define CPARSE_H$/;"	d
CURSES	/usr/include/curses.h	/^#define CURSES /;"	d
CURSES_H	/usr/include/curses.h	/^#define CURSES_H /;"	d
CURSOR_H	src/cursor.h	/^#define CURSOR_H$/;"	d
DISPLAY_H	src/display.h	/^#define DISPLAY_H$/;"	d
DLIST_H	src/ds/dlist.h	/^#define DLIST_H$/;"	d
DLIST_MIN_CAP	src/ds/dlist.h	/^#define DLIST_MIN_CAP /;"	d
ELBUF_H	src/fbuf/elbuf.h	/^#define ELBUF_H$/;"	d
ELINP_H	src/fbuf/elinp.h	/^#define ELINP_H$/;"	d
ENTER	/usr/include/search.h	/^    ENTER$/;"	e	enum:__anon6a76e5fc0103
ENTRY	/usr/include/search.h	/^ENTRY;$/;"	t	typeref:struct:entry
ERR	/usr/include/curses.h	/^#define ERR /;"	d
ESCDELAY	/usr/include/curses.h	/^#define ESCDELAY /;"	d
ESC_SEQ_MAX_LEN	src/getch.c	/^#define ESC_SEQ_MAX_LEN /;"	d	file:
FALSE	/usr/include/curses.h	/^#define FALSE /;"	d
FBAUX_H	src/fbuf/fbaux.h	/^#define FBAUX_H$/;"	d
FBINP_H	src/fbuf/fbinp.h	/^#define FBINP_H$/;"	d
FBIO_H	src/fbuf/fbio.h	/^#define FBIO_H$/;"	d
FBUF_H	src/fbuf/fbuf.h	/^#define FBUF_H$/;"	d
FCMD_H	src/cmd/fcmd.h	/^#define FCMD_H$/;"	d
FIND	/usr/include/search.h	/^    FIND,$/;"	e	enum:__anon6a76e5fc0103
GCC_DEPRECATED	/usr/include/curses.h	/^#define GCC_DEPRECATED(/;"	d
GCC_NORETURN	/usr/include/curses.h	/^#define	GCC_NORETURN /;"	d
GCC_PRINTFLIKE	/usr/include/curses.h	/^#define GCC_PRINTFLIKE(/;"	d
GCC_SCANFLIKE	/usr/include/curses.h	/^#define GCC_SCANFLIKE(/;"	d
GCC_UNUSED	/usr/include/curses.h	/^#define	GCC_UNUSED /;"	d
GETCH_H	src/getch.h	/^#define GETCH_H$/;"	d
INPUT_H	src/input.h	/^#define INPUT_H$/;"	d
KEY_A1	/usr/include/curses.h	/^#define KEY_A1	/;"	d
KEY_A3	/usr/include/curses.h	/^#define KEY_A3	/;"	d
KEY_B2	/usr/include/curses.h	/^#define KEY_B2	/;"	d
KEY_BACKSPACE	/usr/include/curses.h	/^#define KEY_BACKSPACE	/;"	d
KEY_BEG	/usr/include/curses.h	/^#define KEY_BEG	/;"	d
KEY_BREAK	/usr/include/curses.h	/^#define KEY_BREAK	/;"	d
KEY_BTAB	/usr/include/curses.h	/^#define KEY_BTAB	/;"	d
KEY_C1	/usr/include/curses.h	/^#define KEY_C1	/;"	d
KEY_C3	/usr/include/curses.h	/^#define KEY_C3	/;"	d
KEY_CANCEL	/usr/include/curses.h	/^#define KEY_CANCEL	/;"	d
KEY_CATAB	/usr/include/curses.h	/^#define KEY_CATAB	/;"	d
KEY_CLEAR	/usr/include/curses.h	/^#define KEY_CLEAR	/;"	d
KEY_CLOSE	/usr/include/curses.h	/^#define KEY_CLOSE	/;"	d
KEY_CODE_YES	/usr/include/curses.h	/^#define KEY_CODE_YES	/;"	d
KEY_COMMAND	/usr/include/curses.h	/^#define KEY_COMMAND	/;"	d
KEY_COPY	/usr/include/curses.h	/^#define KEY_COPY	/;"	d
KEY_CREATE	/usr/include/curses.h	/^#define KEY_CREATE	/;"	d
KEY_CTAB	/usr/include/curses.h	/^#define KEY_CTAB	/;"	d
KEY_DC	/usr/include/curses.h	/^#define KEY_DC	/;"	d
KEY_DL	/usr/include/curses.h	/^#define KEY_DL	/;"	d
KEY_DOWN	/usr/include/curses.h	/^#define KEY_DOWN	/;"	d
KEY_EIC	/usr/include/curses.h	/^#define KEY_EIC	/;"	d
KEY_END	/usr/include/curses.h	/^#define KEY_END	/;"	d
KEY_ENTER	/usr/include/curses.h	/^#define KEY_ENTER	/;"	d
KEY_EOL	/usr/include/curses.h	/^#define KEY_EOL	/;"	d
KEY_EOS	/usr/include/curses.h	/^#define KEY_EOS	/;"	d
KEY_EVENT	/usr/include/curses.h	/^#define KEY_EVENT	/;"	d
KEY_EXIT	/usr/include/curses.h	/^#define KEY_EXIT	/;"	d
KEY_F	/usr/include/curses.h	/^#define KEY_F(/;"	d
KEY_F0	/usr/include/curses.h	/^#define KEY_F0	/;"	d
KEY_FIND	/usr/include/curses.h	/^#define KEY_FIND	/;"	d
KEY_HELP	/usr/include/curses.h	/^#define KEY_HELP	/;"	d
KEY_HOME	/usr/include/curses.h	/^#define KEY_HOME	/;"	d
KEY_IC	/usr/include/curses.h	/^#define KEY_IC	/;"	d
KEY_IL	/usr/include/curses.h	/^#define KEY_IL	/;"	d
KEY_LEFT	/usr/include/curses.h	/^#define KEY_LEFT	/;"	d
KEY_LL	/usr/include/curses.h	/^#define KEY_LL	/;"	d
KEY_MARK	/usr/include/curses.h	/^#define KEY_MARK	/;"	d
KEY_MAX	/usr/include/curses.h	/^#define KEY_MAX	/;"	d
KEY_MESSAGE	/usr/include/curses.h	/^#define KEY_MESSAGE	/;"	d
KEY_MIN	/usr/include/curses.h	/^#define KEY_MIN	/;"	d
KEY_MOUSE	/usr/include/curses.h	/^#define KEY_MOUSE	/;"	d
KEY_MOVE	/usr/include/curses.h	/^#define KEY_MOVE	/;"	d
KEY_NEXT	/usr/include/curses.h	/^#define KEY_NEXT	/;"	d
KEY_NPAGE	/usr/include/curses.h	/^#define KEY_NPAGE	/;"	d
KEY_OPEN	/usr/include/curses.h	/^#define KEY_OPEN	/;"	d
KEY_OPTIONS	/usr/include/curses.h	/^#define KEY_OPTIONS	/;"	d
KEY_PPAGE	/usr/include/curses.h	/^#define KEY_PPAGE	/;"	d
KEY_PREVIOUS	/usr/include/curses.h	/^#define KEY_PREVIOUS	/;"	d
KEY_PRINT	/usr/include/curses.h	/^#define KEY_PRINT	/;"	d
KEY_REDO	/usr/include/curses.h	/^#define KEY_REDO	/;"	d
KEY_REFERENCE	/usr/include/curses.h	/^#define KEY_REFERENCE	/;"	d
KEY_REFRESH	/usr/include/curses.h	/^#define KEY_REFRESH	/;"	d
KEY_REPLACE	/usr/include/curses.h	/^#define KEY_REPLACE	/;"	d
KEY_RESET	/usr/include/curses.h	/^#define KEY_RESET	/;"	d
KEY_RESIZE	/usr/include/curses.h	/^#define KEY_RESIZE	/;"	d
KEY_RESTART	/usr/include/curses.h	/^#define KEY_RESTART	/;"	d
KEY_RESUME	/usr/include/curses.h	/^#define KEY_RESUME	/;"	d
KEY_RIGHT	/usr/include/curses.h	/^#define KEY_RIGHT	/;"	d
KEY_SAVE	/usr/include/curses.h	/^#define KEY_SAVE	/;"	d
KEY_SBEG	/usr/include/curses.h	/^#define KEY_SBEG	/;"	d
KEY_SCANCEL	/usr/include/curses.h	/^#define KEY_SCANCEL	/;"	d
KEY_SCOMMAND	/usr/include/curses.h	/^#define KEY_SCOMMAND	/;"	d
KEY_SCOPY	/usr/include/curses.h	/^#define KEY_SCOPY	/;"	d
KEY_SCREATE	/usr/include/curses.h	/^#define KEY_SCREATE	/;"	d
KEY_SDC	/usr/include/curses.h	/^#define KEY_SDC	/;"	d
KEY_SDL	/usr/include/curses.h	/^#define KEY_SDL	/;"	d
KEY_SELECT	/usr/include/curses.h	/^#define KEY_SELECT	/;"	d
KEY_SEND	/usr/include/curses.h	/^#define KEY_SEND	/;"	d
KEY_SEOL	/usr/include/curses.h	/^#define KEY_SEOL	/;"	d
KEY_SEXIT	/usr/include/curses.h	/^#define KEY_SEXIT	/;"	d
KEY_SF	/usr/include/curses.h	/^#define KEY_SF	/;"	d
KEY_SFIND	/usr/include/curses.h	/^#define KEY_SFIND	/;"	d
KEY_SHELP	/usr/include/curses.h	/^#define KEY_SHELP	/;"	d
KEY_SHOME	/usr/include/curses.h	/^#define KEY_SHOME	/;"	d
KEY_SIC	/usr/include/curses.h	/^#define KEY_SIC	/;"	d
KEY_SLEFT	/usr/include/curses.h	/^#define KEY_SLEFT	/;"	d
KEY_SMESSAGE	/usr/include/curses.h	/^#define KEY_SMESSAGE	/;"	d
KEY_SMOVE	/usr/include/curses.h	/^#define KEY_SMOVE	/;"	d
KEY_SNEXT	/usr/include/curses.h	/^#define KEY_SNEXT	/;"	d
KEY_SOPTIONS	/usr/include/curses.h	/^#define KEY_SOPTIONS	/;"	d
KEY_SPREVIOUS	/usr/include/curses.h	/^#define KEY_SPREVIOUS	/;"	d
KEY_SPRINT	/usr/include/curses.h	/^#define KEY_SPRINT	/;"	d
KEY_SR	/usr/include/curses.h	/^#define KEY_SR	/;"	d
KEY_SREDO	/usr/include/curses.h	/^#define KEY_SREDO	/;"	d
KEY_SREPLACE	/usr/include/curses.h	/^#define KEY_SREPLACE	/;"	d
KEY_SRESET	/usr/include/curses.h	/^#define KEY_SRESET	/;"	d
KEY_SRIGHT	/usr/include/curses.h	/^#define KEY_SRIGHT	/;"	d
KEY_SRSUME	/usr/include/curses.h	/^#define KEY_SRSUME	/;"	d
KEY_SSAVE	/usr/include/curses.h	/^#define KEY_SSAVE	/;"	d
KEY_SSUSPEND	/usr/include/curses.h	/^#define KEY_SSUSPEND	/;"	d
KEY_STAB	/usr/include/curses.h	/^#define KEY_STAB	/;"	d
KEY_SUNDO	/usr/include/curses.h	/^#define KEY_SUNDO	/;"	d
KEY_SUSPEND	/usr/include/curses.h	/^#define KEY_SUSPEND	/;"	d
KEY_UNDO	/usr/include/curses.h	/^#define KEY_UNDO	/;"	d
KEY_UP	/usr/include/curses.h	/^#define KEY_UP	/;"	d
LFLAGS	Makefile	/^LFLAGS=-lm -lcurses -lpthread$/;"	m
LFLAGS	test/Makefile	/^LFLAGS=-lm -lpthread$/;"	m
LINES	/usr/include/curses.h	/^#define LINES /;"	d
LINES_H	src/lines.h	/^#define LINES_H$/;"	d
LINE_H	src/line.h	/^#define LINE_H$/;"	d
LINSERT_H	src/linsert.h	/^#define LINSERT_H$/;"	d
MATH_H	src/math.h	/^#define MATH_H$/;"	d
MEVENT	/usr/include/curses.h	/^MEVENT;$/;"	t	typeref:struct:__anon9db876bb0608
MOBJS	test/Makefile	/^MOBJS=build\/test-mem.o$/;"	m
MOVE_H	src/move.h	/^#define MOVE_H$/;"	d
NCMDS	src/cmd/cmds.h	/^#define NCMDS /;"	d
NCURSES_ACS	/usr/include/curses.h	/^#define NCURSES_ACS(/;"	d
NCURSES_ATTR_SHIFT	/usr/include/curses.h	/^#define NCURSES_ATTR_SHIFT /;"	d
NCURSES_ATTR_T	/usr/include/curses.h	/^#define NCURSES_ATTR_T /;"	d
NCURSES_BITS	/usr/include/curses.h	/^#define NCURSES_BITS(/;"	d
NCURSES_BOOL	/usr/include/curses.h	/^#define NCURSES_BOOL /;"	d
NCURSES_BOOL	/usr/include/curses.h	/^typedef unsigned char NCURSES_BOOL;$/;"	t	typeref:typename:unsigned char
NCURSES_BUTTON_CLICKED	/usr/include/curses.h	/^#define	NCURSES_BUTTON_CLICKED	/;"	d
NCURSES_BUTTON_PRESSED	/usr/include/curses.h	/^#define	NCURSES_BUTTON_PRESSED	/;"	d
NCURSES_BUTTON_RELEASED	/usr/include/curses.h	/^#define	NCURSES_BUTTON_RELEASED	/;"	d
NCURSES_CAST	/usr/include/curses.h	/^#define NCURSES_CAST(/;"	d
NCURSES_CH_T	/usr/include/curses.h	/^#define NCURSES_CH_T /;"	d
NCURSES_COLOR_T	/usr/include/curses.h	/^#define	NCURSES_COLOR_T /;"	d
NCURSES_CONST	/usr/include/curses.h	/^#define NCURSES_CONST /;"	d
NCURSES_DOUBLE_CLICKED	/usr/include/curses.h	/^#define	NCURSES_DOUBLE_CLICKED	/;"	d
NCURSES_ENABLE_STDBOOL_H	/usr/include/curses.h	/^#define NCURSES_ENABLE_STDBOOL_H /;"	d
NCURSES_EVENT_VERSION	/usr/include/curses.h	/^#  define NCURSES_EVENT_VERSION	/;"	d
NCURSES_EXPORT_VAR	/usr/include/curses.h	/^extern NCURSES_EXPORT_VAR(char) ttytype[];$/;"	p
NCURSES_EXPORT_VAR	/usr/include/curses.h	/^extern NCURSES_EXPORT_VAR(chtype) acs_map[];$/;"	p
NCURSES_EXT_COLORS	/usr/include/curses.h	/^#define NCURSES_EXT_COLORS /;"	d
NCURSES_EXT_FUNCS	/usr/include/curses.h	/^#define NCURSES_EXT_FUNCS /;"	d
NCURSES_INLINE	/usr/include/curses.h	/^#define NCURSES_INLINE /;"	d
NCURSES_INTEROP_FUNCS	/usr/include/curses.h	/^#define	NCURSES_INTEROP_FUNCS /;"	d
NCURSES_MOUSE_MASK	/usr/include/curses.h	/^#define NCURSES_MOUSE_MASK(/;"	d
NCURSES_MOUSE_VERSION	/usr/include/curses.h	/^#define NCURSES_MOUSE_VERSION /;"	d
NCURSES_OK_ADDR	/usr/include/curses.h	/^#define NCURSES_OK_ADDR(/;"	d
NCURSES_OPAQUE	/usr/include/curses.h	/^#define NCURSES_OPAQUE /;"	d
NCURSES_OPAQUE_FORM	/usr/include/curses.h	/^#define NCURSES_OPAQUE_FORM /;"	d
NCURSES_OPAQUE_MENU	/usr/include/curses.h	/^#define NCURSES_OPAQUE_MENU /;"	d
NCURSES_OPAQUE_PANEL	/usr/include/curses.h	/^#define NCURSES_OPAQUE_PANEL /;"	d
NCURSES_OUTC	/usr/include/curses.h	/^typedef int (*NCURSES_OUTC)(int);$/;"	t	typeref:typename:int (*)(int)
NCURSES_PAIRS_T	/usr/include/curses.h	/^#define	NCURSES_PAIRS_T /;"	d
NCURSES_REENTRANT	/usr/include/curses.h	/^#define NCURSES_REENTRANT /;"	d
NCURSES_RESERVED_EVENT	/usr/include/curses.h	/^#define	NCURSES_RESERVED_EVENT	/;"	d
NCURSES_SCREEN_CB	/usr/include/curses.h	/^typedef int (*NCURSES_SCREEN_CB)(SCREEN *, void *);$/;"	t	typeref:typename:int (*)(SCREEN *,void *)
NCURSES_SIZE_T	/usr/include/curses.h	/^#define	NCURSES_SIZE_T /;"	d
NCURSES_SP_FUNCS	/usr/include/curses.h	/^#define NCURSES_SP_FUNCS /;"	d
NCURSES_SP_NAME	/usr/include/curses.h	/^#define NCURSES_SP_NAME(/;"	d
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(NCURSES_CONST char *) NCURSES_SP_NAME(keyname) (SCREEN*, int); \/* impleme/;"	p	typeref:typename:NCURSES_CONST char *
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(SCREEN *) NCURSES_SP_NAME(newterm) (SCREEN*, const char *, FILE *, FILE *)/;"	p	typeref:typename:SCREEN *
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(WINDOW *) NCURSES_SP_NAME(getwin) (SCREEN*, FILE *);			\/* implemented:SP_/;"	p	typeref:typename:WINDOW *
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(WINDOW *) NCURSES_SP_NAME(newpad) (SCREEN*, int, int); \/* implemented:SP_/;"	p	typeref:typename:WINDOW *
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(WINDOW *) NCURSES_SP_NAME(newwin) (SCREEN*, int, int, int, int); \/* imple/;"	p	typeref:typename:WINDOW *
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(attr_t) NCURSES_SP_NAME(slk_attr) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:attr_t
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(attr_t) NCURSES_SP_NAME(term_attrs) (SCREEN*);		\/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:attr_t
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool)    NCURSES_SP_NAME(has_mouse) (SCREEN*);$/;"	p	typeref:typename:bool
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) NCURSES_SP_NAME(can_change_color) (SCREEN*); \/* implemented:SP_FUNC/;"	p	typeref:typename:bool
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) NCURSES_SP_NAME(has_colors) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:bool
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) NCURSES_SP_NAME(has_ic) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:bool
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) NCURSES_SP_NAME(has_il) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:bool
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) NCURSES_SP_NAME(is_term_resized) (SCREEN*, int, int);	\/* implemente/;"	p	typeref:typename:bool
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) NCURSES_SP_NAME(isendwin) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:bool
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) NCURSES_SP_NAME(keybound) (SCREEN*, int, int);	\/* implemented:EXT/;"	p	typeref:typename:char *
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) NCURSES_SP_NAME(longname) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:char *
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) NCURSES_SP_NAME(slk_label) (SCREEN*, int); \/* implemented:SP_FUNC/;"	p	typeref:typename:char *
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) NCURSES_SP_NAME(termname) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:char *
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(char) NCURSES_SP_NAME(erasechar) (SCREEN*);\/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:char
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(char) NCURSES_SP_NAME(killchar) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:char
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(chtype) NCURSES_SP_NAME(termattrs) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:chtype
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int)     NCURSES_SP_NAME(getmouse) (SCREEN*, MEVENT *);$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int)     NCURSES_SP_NAME(mouseinterval) (SCREEN*, int);$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int)     NCURSES_SP_NAME(ungetmouse) (SCREEN*,MEVENT *);$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(alloc_pair) (SCREEN*, int, int); \/* implemented:EXT_/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(assume_default_colors) (SCREEN*, int, int);	\/* imple/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(baudrate) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(beep) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(cbreak) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(color_content) (SCREEN*, NCURSES_PAIRS_T, NCURSES_COL/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(curs_set) (SCREEN*, int); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(def_prog_mode) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(def_shell_mode) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(define_key) (SCREEN*, const char *, int);	\/* impleme/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(delay_output) (SCREEN*, int); \/* implemented:SP_FUNC/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(doupdate) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(echo) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(endwin) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(extended_color_content) (SCREEN*, int, int *, int *, /;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(extended_pair_content) (SCREEN*, int, int *, int *);	/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(extended_slk_color) (SCREEN*, int);	\/* implemented:E/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(find_pair) (SCREEN*, int, int); \/* implemented:EXT_S/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(flash) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(flushinp) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(free_pair) (SCREEN*, int); \/* implemented:EXT_SP_FUN/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(get_escdelay) (SCREEN*);	\/* implemented:EXT_SP_FUNC /;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(halfdelay) (SCREEN*, int); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(has_key) (SCREEN*, int);    \/* do we have given key?/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(init_color) (SCREEN*, NCURSES_COLOR_T, NCURSES_COLOR_/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(init_extended_color) (SCREEN*, int, int, int, int);	\//;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(init_extended_pair) (SCREEN*, int, int, int);	\/* imp/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(init_pair) (SCREEN*, NCURSES_PAIRS_T, NCURSES_COLOR_T/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(intrflush) (SCREEN*, WINDOW*, bool);	\/* implemented:/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(key_defined) (SCREEN*, const char *);	\/* implemented/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(keyok) (SCREEN*, int, bool);	\/* implemented:EXT_SP_F/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(mcprint) (SCREEN*, char *, int);	\/* direct data to p/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(mvcur) (SCREEN*, int, int, int, int); \/* implemented/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(napms) (SCREEN*, int); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(nl) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(nocbreak) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(noecho) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(nonl) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(noraw) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(pair_content) (SCREEN*, NCURSES_PAIRS_T, NCURSES_COLO/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(raw) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(reset_prog_mode) (SCREEN*); \/* implemented:SP_FUNC */;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(reset_shell_mode) (SCREEN*); \/* implemented:SP_FUNC /;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(resetty) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(resize_term) (SCREEN*, int, int);	\/* implemented:EXT/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(resizeterm) (SCREEN*, int, int);	\/* implemented:EXT_/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(ripoffline) (SCREEN*, int, int (*)(WINDOW *, int));	\//;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(savetty) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(scr_init) (SCREEN*, const char *); \/* implemented:SP/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(scr_restore) (SCREEN*, const char *); \/* implemented/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(scr_set) (SCREEN*, const char *); \/* implemented:SP_/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(set_escdelay) (SCREEN*, int);	\/* implemented:EXT_SP_/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(set_tabsize) (SCREEN*, int);	\/* implemented:EXT_SP_F/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(slk_attr_set) (SCREEN*, const attr_t, NCURSES_PAIRS_T/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(slk_attroff) (SCREEN*, const chtype); \/* implemented/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(slk_attron) (SCREEN*, const chtype); \/* implemented:/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(slk_attrset) (SCREEN*, const chtype); \/* implemented/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(slk_clear) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(slk_color) (SCREEN*, NCURSES_PAIRS_T); \/* implemente/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(slk_init) (SCREEN*, int); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(slk_noutrefresh) (SCREEN*); \/* implemented:SP_FUNC */;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(slk_refresh) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(slk_restore) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(slk_set) (SCREEN*, int, const char *, int); \/* imple/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(slk_touch) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(start_color) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(typeahead) (SCREEN*, int); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(unget_wch) (SCREEN*, const wchar_t);	\/* implemented:/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(ungetch) (SCREEN*, int); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(use_default_colors) (SCREEN*);	\/* implemented:EXT_SP/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(use_legacy_coding) (SCREEN*, int);	\/* implemented:EX/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(vid_attr) (SCREEN*, attr_t, NCURSES_PAIRS_T, void *);/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(vid_puts) (SCREEN*, attr_t, NCURSES_PAIRS_T, void *, /;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(vidattr) (SCREEN*, chtype);	\/* implemented:SP_FUNC */;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) NCURSES_SP_NAME(vidputs) (SCREEN*, chtype, NCURSES_SP_OUTC); \/* impl/;"	p	typeref:typename:int
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(mmask_t) NCURSES_SP_NAME(mousemask) (SCREEN*, mmask_t, mmask_t *);$/;"	p	typeref:typename:mmask_t
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) NCURSES_SP_NAME(filter) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:void
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) NCURSES_SP_NAME(nofilter) (SCREEN*); \/* implemented *\/	\/* impleme/;"	p	typeref:typename:void
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) NCURSES_SP_NAME(noqiflush) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:void
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) NCURSES_SP_NAME(qiflush) (SCREEN*); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:void
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) NCURSES_SP_NAME(reset_color_pairs) (SCREEN*); \/* implemented:EXT_SP/;"	p	typeref:typename:void
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) NCURSES_SP_NAME(use_env) (SCREEN*, bool); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:void
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) NCURSES_SP_NAME(use_tioctl) (SCREEN*, bool); \/* implemented:SP_FUNC/;"	p	typeref:typename:void
NCURSES_SP_NAME	/usr/include/curses.h	/^extern NCURSES_EXPORT(wchar_t*) NCURSES_SP_NAME(wunctrl) (SCREEN*, cchar_t *);	\/* implemented:S/;"	p	typeref:typename:wchar_t *
NCURSES_SP_OUTC	/usr/include/curses.h	/^#define NCURSES_SP_OUTC /;"	d
NCURSES_SP_OUTC	/usr/include/curses.h	/^typedef int (*NCURSES_SP_OUTC)(SCREEN*, int);$/;"	t	typeref:typename:int (*)(SCREEN *,int)
NCURSES_TPARM_ARG	/usr/include/curses.h	/^#define NCURSES_TPARM_ARG /;"	d
NCURSES_TPARM_VARARGS	/usr/include/curses.h	/^#define NCURSES_TPARM_VARARGS /;"	d
NCURSES_TRIPLE_CLICKED	/usr/include/curses.h	/^#define	NCURSES_TRIPLE_CLICKED	/;"	d
NCURSES_VERSION	/usr/include/curses.h	/^#define NCURSES_VERSION /;"	d
NCURSES_VERSION_MAJOR	/usr/include/curses.h	/^#define NCURSES_VERSION_MAJOR /;"	d
NCURSES_VERSION_MINOR	/usr/include/curses.h	/^#define NCURSES_VERSION_MINOR /;"	d
NCURSES_VERSION_PATCH	/usr/include/curses.h	/^#define NCURSES_VERSION_PATCH /;"	d
NCURSES_WACS	/usr/include/curses.h	/^#define NCURSES_WACS(/;"	d
NCURSES_WATTR_MACROS	/usr/include/curses.h	/^#define NCURSES_WATTR_MACROS /;"	d
NCURSES_WCWIDTH_GRAPHICS	/usr/include/curses.h	/^#define NCURSES_WCWIDTH_GRAPHICS /;"	d
NCURSES_WIDECHAR	/usr/include/curses.h	/^#define NCURSES_WIDECHAR /;"	d
NCURSES_WINDOW_CB	/usr/include/curses.h	/^typedef int (*NCURSES_WINDOW_CB)(WINDOW *, void *);$/;"	t	typeref:typename:int (*)(WINDOW *,void *)
NCURSES_WRAPPED_VAR	/usr/include/curses.h	/^NCURSES_WRAPPED_VAR(WINDOW *, curscr);$/;"	p
NCURSES_WRAPPED_VAR	/usr/include/curses.h	/^NCURSES_WRAPPED_VAR(WINDOW *, newscr);$/;"	p
NCURSES_WRAPPED_VAR	/usr/include/curses.h	/^NCURSES_WRAPPED_VAR(WINDOW *, stdscr);$/;"	p
NCURSES_WRAPPED_VAR	/usr/include/curses.h	/^NCURSES_WRAPPED_VAR(char *, ttytype);$/;"	p
NCURSES_WRAPPED_VAR	/usr/include/curses.h	/^NCURSES_WRAPPED_VAR(int, COLORS);$/;"	p
NCURSES_WRAPPED_VAR	/usr/include/curses.h	/^NCURSES_WRAPPED_VAR(int, COLOR_PAIRS);$/;"	p
NCURSES_WRAPPED_VAR	/usr/include/curses.h	/^NCURSES_WRAPPED_VAR(int, COLS);$/;"	p
NCURSES_WRAPPED_VAR	/usr/include/curses.h	/^NCURSES_WRAPPED_VAR(int, ESCDELAY);$/;"	p
NCURSES_WRAPPED_VAR	/usr/include/curses.h	/^NCURSES_WRAPPED_VAR(int, LINES);$/;"	p
NCURSES_WRAPPED_VAR	/usr/include/curses.h	/^NCURSES_WRAPPED_VAR(int, TABSIZE);$/;"	p
OBJS	Makefile	/^OBJS=build\/lines.o build\/tedit.o build\/fbuf\/fbuf.o build\/fbuf\/fbaux.o build\/tedata.o buil/;"	m
OK	/usr/include/curses.h	/^#define OK /;"	d
OPTIMIZE_ALL	/usr/include/curses.h	/^#define OPTIMIZE_ALL	/;"	d
OPTIMIZE_HASHMAP	/usr/include/curses.h	/^#define OPTIMIZE_HASHMAP	/;"	d
OPTIMIZE_MVCUR	/usr/include/curses.h	/^#define OPTIMIZE_MVCUR	/;"	d
OPTIMIZE_SCROLL	/usr/include/curses.h	/^#define OPTIMIZE_SCROLL	/;"	d
PAIR_NUMBER	/usr/include/curses.h	/^#define PAIR_NUMBER(/;"	d
PAIR_NUMBER	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) PAIR_NUMBER (int);				\/* generated *\/$/;"	p	typeref:typename:int
REFRESH_RATE_120_HZ_USEC	src/display.c	/^#define REFRESH_RATE_120_HZ_USEC /;"	d	file:
REFRESH_RATE_60_HZ_USEC	src/display.c	/^#define REFRESH_RATE_60_HZ_USEC /;"	d	file:
REFRESH_RATE_MAX_USEC	src/display.c	/^#define REFRESH_RATE_MAX_USEC /;"	d	file:
REPORT_MOUSE_POSITION	/usr/include/curses.h	/^#define	REPORT_MOUSE_POSITION	/;"	d
SCREEN	/usr/include/curses.h	/^typedef struct screen  SCREEN;$/;"	t	typeref:struct:screen
SIG_H	src/sig.h	/^#define SIG_H$/;"	d
SLIST_H	src/ds/slist.h	/^#define SLIST_H$/;"	d
STR_H	src/ds/str.h	/^#define STR_H$/;"	d
STR_MIN_CAP	src/ds/str.h	/^#define STR_MIN_CAP /;"	d
TABSIZE	/usr/include/curses.h	/^#define TABSIZE /;"	d
TABSZ	src/tab.h	/^#define TABSZ /;"	d
TAB_CONT	src/tab.h	/^#define TAB_CONT /;"	d
TAB_H	src/tab.h	/^#define TAB_H$/;"	d
TAB_START	src/tab.h	/^#define TAB_START /;"	d
TEAOBJS	test/Makefile	/^TEAOBJS=$/;"	m
TEDATA_H	src/tedata.h	/^#define TEDATA_H$/;"	d
TEDIT_H	src/tedit.h	/^#define TEDIT_H$/;"	d
TEMOBJS	test/Makefile	/^TEMOBJS=..\/build\/tedata.o ..\/build\/fbuf\/elbuf.o ..\/build\/fbuf\/bufs.o ..\/build\/cmd\/cmd/;"	m
TRACE_ATTRS	/usr/include/curses.h	/^#define TRACE_ATTRS	/;"	d
TRACE_BITS	/usr/include/curses.h	/^#define TRACE_BITS	/;"	d
TRACE_CALLS	/usr/include/curses.h	/^#define TRACE_CALLS	/;"	d
TRACE_CCALLS	/usr/include/curses.h	/^#define TRACE_CCALLS	/;"	d
TRACE_CHARPUT	/usr/include/curses.h	/^#define TRACE_CHARPUT	/;"	d
TRACE_DATABASE	/usr/include/curses.h	/^#define TRACE_DATABASE	/;"	d
TRACE_DISABLE	/usr/include/curses.h	/^#define TRACE_DISABLE	/;"	d
TRACE_ICALLS	/usr/include/curses.h	/^#define TRACE_ICALLS	/;"	d
TRACE_IEVENT	/usr/include/curses.h	/^#define TRACE_IEVENT	/;"	d
TRACE_MAXIMUM	/usr/include/curses.h	/^#define TRACE_MAXIMUM	/;"	d
TRACE_MOVE	/usr/include/curses.h	/^#define TRACE_MOVE	/;"	d
TRACE_ORDINARY	/usr/include/curses.h	/^#define TRACE_ORDINARY	/;"	d
TRACE_SHIFT	/usr/include/curses.h	/^#define TRACE_SHIFT	/;"	d
TRACE_TIMES	/usr/include/curses.h	/^#define TRACE_TIMES	/;"	d
TRACE_TPUTS	/usr/include/curses.h	/^#define TRACE_TPUTS	/;"	d
TRACE_UPDATE	/usr/include/curses.h	/^#define TRACE_UPDATE	/;"	d
TRACE_VIRTPUT	/usr/include/curses.h	/^#define TRACE_VIRTPUT	/;"	d
TRUE	/usr/include/curses.h	/^#define TRUE /;"	d
UIO_MAXIOV	/usr/include/sys/uio.h	/^# define UIO_MAXIOV /;"	d
VIEW_H	src/view.h	/^#define VIEW_H$/;"	d
VISIT	/usr/include/search.h	/^VISIT;$/;"	t	typeref:enum:__anon6a76e5fc0203
VTE_END	src/getch.c	/^#define VTE_END /;"	d	file:
VTE_HOME	src/getch.c	/^#define VTE_HOME /;"	d	file:
WACS_BBDD	/usr/include/curses.h	/^#define WACS_BBDD	/;"	d
WACS_BBSS	/usr/include/curses.h	/^#define WACS_BBSS	/;"	d
WACS_BBTT	/usr/include/curses.h	/^#define WACS_BBTT	/;"	d
WACS_BDBD	/usr/include/curses.h	/^#define WACS_BDBD	/;"	d
WACS_BDDB	/usr/include/curses.h	/^#define WACS_BDDB	/;"	d
WACS_BDDD	/usr/include/curses.h	/^#define WACS_BDDD	/;"	d
WACS_BLOCK	/usr/include/curses.h	/^#define WACS_BLOCK	/;"	d
WACS_BOARD	/usr/include/curses.h	/^#define WACS_BOARD	/;"	d
WACS_BSBS	/usr/include/curses.h	/^#define WACS_BSBS	/;"	d
WACS_BSSB	/usr/include/curses.h	/^#define WACS_BSSB	/;"	d
WACS_BSSS	/usr/include/curses.h	/^#define WACS_BSSS	/;"	d
WACS_BTBT	/usr/include/curses.h	/^#define WACS_BTBT	/;"	d
WACS_BTEE	/usr/include/curses.h	/^#define WACS_BTEE	/;"	d
WACS_BTTB	/usr/include/curses.h	/^#define WACS_BTTB	/;"	d
WACS_BTTT	/usr/include/curses.h	/^#define WACS_BTTT	/;"	d
WACS_BULLET	/usr/include/curses.h	/^#define WACS_BULLET	/;"	d
WACS_CKBOARD	/usr/include/curses.h	/^#define WACS_CKBOARD	/;"	d
WACS_DARROW	/usr/include/curses.h	/^#define WACS_DARROW	/;"	d
WACS_DBBD	/usr/include/curses.h	/^#define WACS_DBBD	/;"	d
WACS_DBDB	/usr/include/curses.h	/^#define WACS_DBDB	/;"	d
WACS_DBDD	/usr/include/curses.h	/^#define WACS_DBDD	/;"	d
WACS_DDBB	/usr/include/curses.h	/^#define WACS_DDBB	/;"	d
WACS_DDBD	/usr/include/curses.h	/^#define WACS_DDBD	/;"	d
WACS_DDDB	/usr/include/curses.h	/^#define WACS_DDDB	/;"	d
WACS_DDDD	/usr/include/curses.h	/^#define WACS_DDDD	/;"	d
WACS_DEGREE	/usr/include/curses.h	/^#define WACS_DEGREE	/;"	d
WACS_DIAMOND	/usr/include/curses.h	/^#define WACS_DIAMOND	/;"	d
WACS_D_BTEE	/usr/include/curses.h	/^#define WACS_D_BTEE	/;"	d
WACS_D_HLINE	/usr/include/curses.h	/^#define WACS_D_HLINE	/;"	d
WACS_D_LLCORNER	/usr/include/curses.h	/^#define WACS_D_LLCORNER	/;"	d
WACS_D_LRCORNER	/usr/include/curses.h	/^#define WACS_D_LRCORNER	/;"	d
WACS_D_LTEE	/usr/include/curses.h	/^#define WACS_D_LTEE	/;"	d
WACS_D_PLUS	/usr/include/curses.h	/^#define WACS_D_PLUS	/;"	d
WACS_D_RTEE	/usr/include/curses.h	/^#define WACS_D_RTEE	/;"	d
WACS_D_TTEE	/usr/include/curses.h	/^#define WACS_D_TTEE	/;"	d
WACS_D_ULCORNER	/usr/include/curses.h	/^#define WACS_D_ULCORNER	/;"	d
WACS_D_URCORNER	/usr/include/curses.h	/^#define WACS_D_URCORNER	/;"	d
WACS_D_VLINE	/usr/include/curses.h	/^#define WACS_D_VLINE	/;"	d
WACS_GEQUAL	/usr/include/curses.h	/^#define WACS_GEQUAL	/;"	d
WACS_HLINE	/usr/include/curses.h	/^#define WACS_HLINE	/;"	d
WACS_LANTERN	/usr/include/curses.h	/^#define WACS_LANTERN	/;"	d
WACS_LARROW	/usr/include/curses.h	/^#define WACS_LARROW	/;"	d
WACS_LEQUAL	/usr/include/curses.h	/^#define WACS_LEQUAL	/;"	d
WACS_LLCORNER	/usr/include/curses.h	/^#define WACS_LLCORNER	/;"	d
WACS_LRCORNER	/usr/include/curses.h	/^#define WACS_LRCORNER	/;"	d
WACS_LTEE	/usr/include/curses.h	/^#define WACS_LTEE	/;"	d
WACS_NEQUAL	/usr/include/curses.h	/^#define WACS_NEQUAL	/;"	d
WACS_PI	/usr/include/curses.h	/^#define WACS_PI	/;"	d
WACS_PLMINUS	/usr/include/curses.h	/^#define WACS_PLMINUS	/;"	d
WACS_PLUS	/usr/include/curses.h	/^#define WACS_PLUS	/;"	d
WACS_RARROW	/usr/include/curses.h	/^#define WACS_RARROW	/;"	d
WACS_RTEE	/usr/include/curses.h	/^#define WACS_RTEE	/;"	d
WACS_S1	/usr/include/curses.h	/^#define WACS_S1	/;"	d
WACS_S3	/usr/include/curses.h	/^#define WACS_S3	/;"	d
WACS_S7	/usr/include/curses.h	/^#define WACS_S7	/;"	d
WACS_S9	/usr/include/curses.h	/^#define WACS_S9 /;"	d
WACS_SBBS	/usr/include/curses.h	/^#define WACS_SBBS	/;"	d
WACS_SBSB	/usr/include/curses.h	/^#define WACS_SBSB	/;"	d
WACS_SBSS	/usr/include/curses.h	/^#define WACS_SBSS	/;"	d
WACS_SSBB	/usr/include/curses.h	/^#define WACS_SSBB	/;"	d
WACS_SSBS	/usr/include/curses.h	/^#define WACS_SSBS	/;"	d
WACS_SSSB	/usr/include/curses.h	/^#define WACS_SSSB	/;"	d
WACS_SSSS	/usr/include/curses.h	/^#define WACS_SSSS	/;"	d
WACS_STERLING	/usr/include/curses.h	/^#define WACS_STERLING	/;"	d
WACS_TBBT	/usr/include/curses.h	/^#define WACS_TBBT	/;"	d
WACS_TBTB	/usr/include/curses.h	/^#define WACS_TBTB	/;"	d
WACS_TBTT	/usr/include/curses.h	/^#define WACS_TBTT	/;"	d
WACS_TTBB	/usr/include/curses.h	/^#define WACS_TTBB	/;"	d
WACS_TTBT	/usr/include/curses.h	/^#define WACS_TTBT	/;"	d
WACS_TTEE	/usr/include/curses.h	/^#define WACS_TTEE	/;"	d
WACS_TTTB	/usr/include/curses.h	/^#define WACS_TTTB	/;"	d
WACS_TTTT	/usr/include/curses.h	/^#define WACS_TTTT	/;"	d
WACS_T_BTEE	/usr/include/curses.h	/^#define WACS_T_BTEE	/;"	d
WACS_T_HLINE	/usr/include/curses.h	/^#define WACS_T_HLINE	/;"	d
WACS_T_LLCORNER	/usr/include/curses.h	/^#define WACS_T_LLCORNER	/;"	d
WACS_T_LRCORNER	/usr/include/curses.h	/^#define WACS_T_LRCORNER	/;"	d
WACS_T_LTEE	/usr/include/curses.h	/^#define WACS_T_LTEE	/;"	d
WACS_T_PLUS	/usr/include/curses.h	/^#define WACS_T_PLUS	/;"	d
WACS_T_RTEE	/usr/include/curses.h	/^#define WACS_T_RTEE	/;"	d
WACS_T_TTEE	/usr/include/curses.h	/^#define WACS_T_TTEE	/;"	d
WACS_T_ULCORNER	/usr/include/curses.h	/^#define WACS_T_ULCORNER	/;"	d
WACS_T_URCORNER	/usr/include/curses.h	/^#define WACS_T_URCORNER	/;"	d
WACS_T_VLINE	/usr/include/curses.h	/^#define WACS_T_VLINE	/;"	d
WACS_UARROW	/usr/include/curses.h	/^#define WACS_UARROW	/;"	d
WACS_ULCORNER	/usr/include/curses.h	/^#define WACS_ULCORNER	/;"	d
WACS_URCORNER	/usr/include/curses.h	/^#define WACS_URCORNER	/;"	d
WACS_VLINE	/usr/include/curses.h	/^#define WACS_VLINE	/;"	d
WA_ALTCHARSET	/usr/include/curses.h	/^#define WA_ALTCHARSET	/;"	d
WA_ATTRIBUTES	/usr/include/curses.h	/^#define WA_ATTRIBUTES	/;"	d
WA_BLINK	/usr/include/curses.h	/^#define WA_BLINK	/;"	d
WA_BOLD	/usr/include/curses.h	/^#define WA_BOLD	/;"	d
WA_DIM	/usr/include/curses.h	/^#define WA_DIM	/;"	d
WA_HORIZONTAL	/usr/include/curses.h	/^#define WA_HORIZONTAL	/;"	d
WA_INVIS	/usr/include/curses.h	/^#define WA_INVIS	/;"	d
WA_ITALIC	/usr/include/curses.h	/^#define WA_ITALIC	/;"	d
WA_LEFT	/usr/include/curses.h	/^#define WA_LEFT	/;"	d
WA_LOW	/usr/include/curses.h	/^#define WA_LOW	/;"	d
WA_NORMAL	/usr/include/curses.h	/^#define WA_NORMAL	/;"	d
WA_PROTECT	/usr/include/curses.h	/^#define WA_PROTECT	/;"	d
WA_REVERSE	/usr/include/curses.h	/^#define WA_REVERSE	/;"	d
WA_RIGHT	/usr/include/curses.h	/^#define WA_RIGHT	/;"	d
WA_STANDOUT	/usr/include/curses.h	/^#define WA_STANDOUT	/;"	d
WA_TOP	/usr/include/curses.h	/^#define WA_TOP	/;"	d
WA_UNDERLINE	/usr/include/curses.h	/^#define WA_UNDERLINE	/;"	d
WA_VERTICAL	/usr/include/curses.h	/^#define WA_VERTICAL	/;"	d
WINDOW	/usr/include/curses.h	/^typedef struct _win_st WINDOW;$/;"	t	typeref:struct:_win_st
_ENDLINE	/usr/include/curses.h	/^#define _ENDLINE /;"	d
_FULLWIN	/usr/include/curses.h	/^#define _FULLWIN /;"	d
_GNU_SOURCE	src/cmd/cmds.h	/^#define _GNU_SOURCE$/;"	d
_HASMOVED	/usr/include/curses.h	/^#define _HASMOVED /;"	d
_ISPAD	/usr/include/curses.h	/^#define _ISPAD	/;"	d
_NC_EVENT_FILE	/usr/include/curses.h	/^#  define _NC_EVENT_FILE	/;"	d
_NC_EVENT_FILE_READABLE	/usr/include/curses.h	/^#  define _NC_EVENT_FILE_READABLE	/;"	d
_NC_EVENT_TIMEOUT_MSEC	/usr/include/curses.h	/^#  define _NC_EVENT_TIMEOUT_MSEC	/;"	d
_NEWINDEX	/usr/include/curses.h	/^#define _NEWINDEX	/;"	d
_NOCHANGE	/usr/include/curses.h	/^#define _NOCHANGE /;"	d
_SCROLLWIN	/usr/include/curses.h	/^#define _SCROLLWIN /;"	d
_SEARCH_H	/usr/include/search.h	/^#define	_SEARCH_H /;"	d
_SUBWIN	/usr/include/curses.h	/^#define _SUBWIN /;"	d
_SYS_UIO_H	/usr/include/sys/uio.h	/^#define _SYS_UIO_H	/;"	d
_WRAPPED	/usr/include/curses.h	/^#define _WRAPPED /;"	d
_XOPEN_CURSES	/usr/include/curses.h	/^#define _XOPEN_CURSES /;"	d
__ACTION_FN_T	/usr/include/search.h	/^# define __ACTION_FN_T$/;"	d
__COMPAR_FN_T	/usr/include/search.h	/^# define __COMPAR_FN_T$/;"	d
__NCURSES_H	/usr/include/curses.h	/^#define __NCURSES_H$/;"	d
__REDIRECT	/usr/include/sys/uio.h	/^extern ssize_t __REDIRECT (preadv, (int __fd, const struct iovec *__iovec,$/;"	x	typeref:typename:ssize_t
__REDIRECT	/usr/include/sys/uio.h	/^extern ssize_t __REDIRECT (preadv2, (int __fd, const struct iovec *__iovec,$/;"	x	typeref:typename:ssize_t
__REDIRECT	/usr/include/sys/uio.h	/^extern ssize_t __REDIRECT (pwritev, (int __fd, const struct iovec *__iovec,$/;"	x	typeref:typename:ssize_t
__REDIRECT	/usr/include/sys/uio.h	/^extern ssize_t __REDIRECT (pwritev2, (int __fd, const struct iovec *__iovec,$/;"	x	typeref:typename:ssize_t
__action_fn_t	/usr/include/search.h	/^typedef void (*__action_fn_t) (const void *__nodep, VISIT __value,$/;"	t	typeref:typename:void (*)(const void * __nodep,VISIT __value,int __level)
__anon6a76e5fc0103	/usr/include/search.h	/^  {$/;"	g
__anon6a76e5fc0203	/usr/include/search.h	/^{$/;"	g
__anon9db876bb0108	/usr/include/curses.h	/^{$/;"	s
__anon9db876bb0208	/usr/include/curses.h	/^{$/;"	s
__anon9db876bb0408	/usr/include/curses.h	/^	{$/;"	s	union:__anon9db876bb0208::__anon9db876bb030a
__anon9db876bb0508	/usr/include/curses.h	/^{$/;"	s
__anon9db876bb0608	/usr/include/curses.h	/^{$/;"	s
__attribute__	/usr/include/curses.h	/^#define __attribute__(/;"	d
__compar_fn_t	/usr/include/search.h	/^typedef int (*__compar_fn_t) (const void *, const void *);$/;"	t	typeref:typename:int (*)(const void *,const void *)
__free_fn_t	/usr/include/search.h	/^typedef void (*__free_fn_t) (void *__nodep);$/;"	t	typeref:typename:void (*)(void * __nodep)
__need_size_t	/usr/include/search.h	/^#define __need_size_t$/;"	d
_attrs	/usr/include/curses.h	/^	attr_t  _attrs;		\/* current attribute for non-space character *\/$/;"	m	struct:_win_st	typeref:typename:attr_t
_begx	/usr/include/curses.h	/^	NCURSES_SIZE_T _begy, _begx; \/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	typeref:typename:NCURSES_SIZE_T
_begy	/usr/include/curses.h	/^	NCURSES_SIZE_T _begy, _begx; \/* screen coords of upper-left-hand corner *\/$/;"	m	struct:_win_st	typeref:typename:NCURSES_SIZE_T
_bkgd	/usr/include/curses.h	/^	chtype  _bkgd;		\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	typeref:typename:chtype
_bkgrnd	/usr/include/curses.h	/^	cchar_t  _bkgrnd;	\/* current background char\/attribute pair *\/$/;"	m	struct:_win_st	typeref:typename:cchar_t
_clear	/usr/include/curses.h	/^	bool	_clear;		\/* consider all data in the window invalid? *\/$/;"	m	struct:_win_st	typeref:typename:bool
_color	/usr/include/curses.h	/^	int	_color;		\/* current color-pair for non-space character *\/$/;"	m	struct:_win_st	typeref:typename:int
_curx	/usr/include/curses.h	/^	NCURSES_SIZE_T _cury, _curx; \/* current cursor position *\/$/;"	m	struct:_win_st	typeref:typename:NCURSES_SIZE_T
_cury	/usr/include/curses.h	/^	NCURSES_SIZE_T _cury, _curx; \/* current cursor position *\/$/;"	m	struct:_win_st	typeref:typename:NCURSES_SIZE_T
_delay	/usr/include/curses.h	/^	int	_delay;		\/* 0 = nodelay, <0 = blocking, >0 = delay *\/$/;"	m	struct:_win_st	typeref:typename:int
_flags	/usr/include/curses.h	/^	short   _flags;		\/* window state flags *\/$/;"	m	struct:_win_st	typeref:typename:short
_idcok	/usr/include/curses.h	/^	bool	_idcok;		\/* OK to use insert\/delete char? *\/$/;"	m	struct:_win_st	typeref:typename:bool
_idlok	/usr/include/curses.h	/^	bool	_idlok;		\/* OK to use insert\/delete line? *\/$/;"	m	struct:_win_st	typeref:typename:bool
_immed	/usr/include/curses.h	/^	bool	_immed;		\/* window in immed mode? (not yet used) *\/$/;"	m	struct:_win_st	typeref:typename:bool
_leaveok	/usr/include/curses.h	/^	bool	_leaveok;	\/* OK to not reset cursor on exit? *\/$/;"	m	struct:_win_st	typeref:typename:bool
_line	/usr/include/curses.h	/^	struct ldat *_line;	\/* the actual line data *\/$/;"	m	struct:_win_st	typeref:struct:ldat *
_maxx	/usr/include/curses.h	/^	NCURSES_SIZE_T _maxy, _maxx; \/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	typeref:typename:NCURSES_SIZE_T
_maxy	/usr/include/curses.h	/^	NCURSES_SIZE_T _maxy, _maxx; \/* maximums of x and y, NOT window size *\/$/;"	m	struct:_win_st	typeref:typename:NCURSES_SIZE_T
_nc_event	/usr/include/curses.h	/^} _nc_event;$/;"	t	typeref:struct:__anon9db876bb0208
_nc_eventlist	/usr/include/curses.h	/^} _nc_eventlist;$/;"	t	typeref:struct:__anon9db876bb0508
_nc_visbuf	/usr/include/curses.h	/^extern NCURSES_EXPORT(const char *) _nc_visbuf (const char *);$/;"	p	typeref:typename:const char *
_nc_viswbuf	/usr/include/curses.h	/^extern NCURSES_EXPORT(const char *) _nc_viswbuf(const wchar_t *);$/;"	p	typeref:typename:const char *
_nc_viswibuf	/usr/include/curses.h	/^extern NCURSES_EXPORT(const char *) _nc_viswibuf(const wint_t *);$/;"	p	typeref:typename:const char *
_nc_wacs	/usr/include/curses.h	/^extern NCURSES_EXPORT_VAR(cchar_t *) _nc_wacs;$/;"	x	typeref:typename:NCURSES_EXPORT_VAR (cchar_t *)
_notimeout	/usr/include/curses.h	/^	bool	_notimeout;	\/* no time out on function-key entry? *\/$/;"	m	struct:_win_st	typeref:typename:bool
_pad	/usr/include/curses.h	/^	} _pad;$/;"	m	struct:_win_st	typeref:struct:_win_st::pdat
_pad_bottom	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_bottom, _pad_right;$/;"	m	struct:_win_st::pdat	typeref:typename:NCURSES_SIZE_T
_pad_left	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_top,    _pad_left;$/;"	m	struct:_win_st::pdat	typeref:typename:NCURSES_SIZE_T
_pad_right	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_bottom, _pad_right;$/;"	m	struct:_win_st::pdat	typeref:typename:NCURSES_SIZE_T
_pad_top	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_top,    _pad_left;$/;"	m	struct:_win_st::pdat	typeref:typename:NCURSES_SIZE_T
_pad_x	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_y,      _pad_x;$/;"	m	struct:_win_st::pdat	typeref:typename:NCURSES_SIZE_T
_pad_y	/usr/include/curses.h	/^	    NCURSES_SIZE_T _pad_y,      _pad_x;$/;"	m	struct:_win_st::pdat	typeref:typename:NCURSES_SIZE_T
_parent	/usr/include/curses.h	/^	WINDOW	*_parent;	\/* pointer to parent if a sub-window *\/$/;"	m	struct:_win_st	typeref:typename:WINDOW *
_parx	/usr/include/curses.h	/^	int	_parx;		\/* x coordinate of this window in parent *\/$/;"	m	struct:_win_st	typeref:typename:int
_pary	/usr/include/curses.h	/^	int	_pary;		\/* y coordinate of this window in parent *\/$/;"	m	struct:_win_st	typeref:typename:int
_regbottom	/usr/include/curses.h	/^	NCURSES_SIZE_T _regbottom; \/* bottom line of scrolling region *\/$/;"	m	struct:_win_st	typeref:typename:NCURSES_SIZE_T
_regtop	/usr/include/curses.h	/^	NCURSES_SIZE_T _regtop;	\/* top line of scrolling region *\/$/;"	m	struct:_win_st	typeref:typename:NCURSES_SIZE_T
_scroll	/usr/include/curses.h	/^	bool	_scroll;	\/* OK to scroll this window? *\/$/;"	m	struct:_win_st	typeref:typename:bool
_sync	/usr/include/curses.h	/^	bool	_sync;		\/* window in sync mode? *\/$/;"	m	struct:_win_st	typeref:typename:bool
_traceattr	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) _traceattr (attr_t);$/;"	p	typeref:typename:char *
_traceattr2	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) _traceattr2 (int, chtype);$/;"	p	typeref:typename:char *
_tracecchar_t	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) _tracecchar_t (const cchar_t *);$/;"	p	typeref:typename:char *
_tracecchar_t2	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) _tracecchar_t2 (int, const cchar_t *);$/;"	p	typeref:typename:char *
_tracech_t	/usr/include/curses.h	/^#define _tracech_t	/;"	d
_tracech_t2	/usr/include/curses.h	/^#define _tracech_t2	/;"	d
_tracechar	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) _tracechar (int);$/;"	p	typeref:typename:char *
_tracechtype	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) _tracechtype (chtype);$/;"	p	typeref:typename:char *
_tracechtype2	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) _tracechtype2 (int, chtype);$/;"	p	typeref:typename:char *
_tracef	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) _tracef (const char *, ...) GCC_PRINTFLIKE(1,2);$/;"	p	typeref:typename:void
_use_keypad	/usr/include/curses.h	/^	bool	_use_keypad;	\/* process function keys into KEY_ symbols? *\/$/;"	m	struct:_win_st	typeref:typename:bool
_win_st	/usr/include/curses.h	/^struct _win_st$/;"	s
_yoffset	/usr/include/curses.h	/^	NCURSES_SIZE_T _yoffset; \/* real begy is _begy + _yoffset *\/$/;"	m	struct:_win_st	typeref:typename:NCURSES_SIZE_T
a	src/ds/math.c	/^int cmp(int a, int b)$/;"	z	function:cmp	typeref:typename:int	file:
acmd_fquit	src/cmd/acmd.c	/^cmd_t *acmd_fquit(void)$/;"	f	typeref:typename:cmd_t *
acmd_fquit	src/cmd/acmd.h	/^cmd_t *acmd_fquit(void);$/;"	p	typeref:typename:cmd_t *
acmd_fquit_handler	src/cmd/acmd.c	/^char *acmd_fquit_handler(char *s, bufs_t *b, WINDOW *w)$/;"	f	typeref:typename:char *
acmd_list	src/cmd/acmd.c	/^cmd_t *acmd_list(void)$/;"	f	typeref:typename:cmd_t *
acmd_list	src/cmd/acmd.h	/^cmd_t *acmd_list(void);$/;"	p	typeref:typename:cmd_t *
acmd_list_handler	src/cmd/acmd.c	/^char *acmd_list_handler(char *s, bufs_t *b, WINDOW *w)$/;"	f	typeref:typename:char *
acmd_quit	src/cmd/acmd.c	/^cmd_t *acmd_quit(void)$/;"	f	typeref:typename:cmd_t *
acmd_quit	src/cmd/acmd.h	/^cmd_t *acmd_quit(void);$/;"	p	typeref:typename:cmd_t *
acmd_quit_handler	src/cmd/acmd.c	/^char *acmd_quit_handler(char *s, bufs_t *b, WINDOW *w)$/;"	f	typeref:typename:char *
active_fbuf	src/cmd/acmd.c	/^char *lsstr(fbufs_t *fs, fbuf_t *active_fbuf)$/;"	z	function:lsstr	typeref:typename:fbuf_t *	file:
add_wch	/usr/include/curses.h	/^#define add_wch(/;"	d
add_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) add_wch (const cchar_t *);			\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
add_wchnstr	/usr/include/curses.h	/^#define add_wchnstr(/;"	d
add_wchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) add_wchnstr (const cchar_t *, int);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
add_wchstr	/usr/include/curses.h	/^#define add_wchstr(/;"	d
add_wchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) add_wchstr (const cchar_t *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
addch	/usr/include/curses.h	/^#define addch(/;"	d
addch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) addch (const chtype);			\/* generated *\/$/;"	p	typeref:typename:int
addchnstr	/usr/include/curses.h	/^#define addchnstr(/;"	d
addchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) addchnstr (const chtype *, int);		\/* generated *\/$/;"	p	typeref:typename:int
addchstr	/usr/include/curses.h	/^#define addchstr(/;"	d
addchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) addchstr (const chtype *);			\/* generated *\/$/;"	p	typeref:typename:int
addnstr	/usr/include/curses.h	/^#define addnstr(/;"	d
addnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) addnstr (const char *, int);			\/* generated *\/$/;"	p	typeref:typename:int
addnwstr	/usr/include/curses.h	/^#define addnwstr(/;"	d
addnwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) addnwstr (const wchar_t *, int);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
addstr	/usr/include/curses.h	/^#define addstr(/;"	d
addstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) addstr (const char *);			\/* generated *\/$/;"	p	typeref:typename:int
addtabsubstr	src/display.c	/^void addtabsubstr(char *s, int start, int end)$/;"	f	typeref:typename:void
addwstr	/usr/include/curses.h	/^#define addwstr(/;"	d
addwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) addwstr (const wchar_t *);			\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
all	test/Makefile	/^all: test-assert test-mem$/;"	t
alloc_pair	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) alloc_pair (int, int);$/;"	p	typeref:typename:int
argc	src/main.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:int	file:
args	src/chrp.c	/^static int strlenf(char *fmt, va_list args)$/;"	z	function:strlenf	typeref:typename:va_list	file:
args	src/cmd/cparse.c	/^char *args_parse_cmdname(char *args)$/;"	z	function:args_parse_cmdname	typeref:typename:char *	file:
args	src/cmd/cparse.c	/^char *args_parse_remain_args(char *args)$/;"	z	function:args_parse_remain_args	typeref:typename:char *	file:
args	src/cmd/cparse.c	/^char *cmds_parse(char *args, cmds_t *cs, bufs_t *b, WINDOW *w)$/;"	z	function:cmds_parse	typeref:typename:char *	file:
args_parse_cmdname	src/cmd/cparse.c	/^char *args_parse_cmdname(char *args)$/;"	f	typeref:typename:char *
args_parse_remain_args	src/cmd/cparse.c	/^char *args_parse_remain_args(char *args)$/;"	f	typeref:typename:char *
argv	src/main.c	/^int main(int argc, char *argv[])$/;"	z	function:main	typeref:typename:char * []	file:
array	src/cmd/cmds.h	/^	cmd_t **array;  \/\/ Array of pointers to commands for easy "for each" traversal.$/;"	m	struct:commands	typeref:typename:cmd_t **
assume_default_colors	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) assume_default_colors (int, int);$/;"	p	typeref:typename:int
attr	/usr/include/curses.h	/^    attr_t	attr;$/;"	m	struct:__anon9db876bb0108	typeref:typename:attr_t
attr_get	/usr/include/curses.h	/^#define attr_get(/;"	d
attr_get	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) attr_get (attr_t *, NCURSES_PAIRS_T *, void *);	\/* generated *\/$/;"	p	typeref:typename:int
attr_off	/usr/include/curses.h	/^#define attr_off(/;"	d
attr_off	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) attr_off (attr_t, void *);			\/* generated *\/$/;"	p	typeref:typename:int
attr_on	/usr/include/curses.h	/^#define attr_on(/;"	d
attr_on	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) attr_on (attr_t, void *);			\/* generated *\/$/;"	p	typeref:typename:int
attr_set	/usr/include/curses.h	/^#define attr_set(/;"	d
attr_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) attr_set (attr_t, NCURSES_PAIRS_T, void *);		\/* generated *\/$/;"	p	typeref:typename:int
attr_t	/usr/include/curses.h	/^typedef	chtype	attr_t;		\/* ...must be at least as wide as chtype *\/$/;"	t	typeref:typename:chtype
attroff	/usr/include/curses.h	/^#define attroff(/;"	d
attroff	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) attroff (NCURSES_ATTR_T);			\/* generated *\/$/;"	p	typeref:typename:int
attron	/usr/include/curses.h	/^#define attron(/;"	d
attron	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) attron (NCURSES_ATTR_T);			\/* generated *\/$/;"	p	typeref:typename:int
attrset	/usr/include/curses.h	/^#define attrset(/;"	d
attrset	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) attrset (NCURSES_ATTR_T);			\/* generated *\/$/;"	p	typeref:typename:int
b	src/cmd/acmd.c	/^char *acmd_fquit_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:acmd_fquit_handler	typeref:typename:bufs_t *	file:
b	src/cmd/acmd.c	/^char *acmd_list_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:acmd_list_handler	typeref:typename:bufs_t *	file:
b	src/cmd/acmd.c	/^char *acmd_quit_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:acmd_quit_handler	typeref:typename:bufs_t *	file:
b	src/cmd/cparse.c	/^char *cmds_parse(char *args, cmds_t *cs, bufs_t *b, WINDOW *w)$/;"	z	function:cmds_parse	typeref:typename:bufs_t *	file:
b	src/cmd/cparse.c	/^char *cmds_parse_aux(char *cmd_name, char *remain_args, cmds_t *cs, bufs_t *b, WINDOW *w)$/;"	z	function:cmds_parse_aux	typeref:typename:bufs_t *	file:
b	src/cmd/fcmd.c	/^char *fcmd_close_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_close_handler	typeref:typename:bufs_t *	file:
b	src/cmd/fcmd.c	/^char *fcmd_edit_handler(char *fpath, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_edit_handler	typeref:typename:bufs_t *	file:
b	src/cmd/fcmd.c	/^char *fcmd_fclose_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_fclose_handler	typeref:typename:bufs_t *	file:
b	src/cmd/fcmd.c	/^char *fcmd_jump_handler(char *sid, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_jump_handler	typeref:typename:bufs_t *	file:
b	src/cmd/fcmd.c	/^char *fcmd_open_handler(char *fpath, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_open_handler	typeref:typename:bufs_t *	file:
b	src/cmd/fcmd.c	/^char *fcmd_write_handle(bufs_t *b)$/;"	z	function:fcmd_write_handle	typeref:typename:bufs_t *	file:
b	src/cmd/fcmd.c	/^char *fcmd_write_handle_new(bufs_t *b, char *fpath)$/;"	z	function:fcmd_write_handle_new	typeref:typename:bufs_t *	file:
b	src/cmd/fcmd.c	/^char *fcmd_write_handle_other(bufs_t *b, char *fpath, WINDOW *w)$/;"	z	function:fcmd_write_handle_other	typeref:typename:bufs_t *	file:
b	src/cmd/fcmd.c	/^char *fcmd_write_handler(char *fpath, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_write_handler	typeref:typename:bufs_t *	file:
b	src/display.c	/^void display_buffers(bufs_t *b)$/;"	z	function:display_buffers	typeref:typename:bufs_t *	file:
b	src/ds/math.c	/^int cmp(int a, int b)$/;"	z	function:cmp	typeref:typename:int	file:
b	src/fbuf/bufs.c	/^fbuf_t *bufs_last_fbuf(bufs_t *b)$/;"	z	function:bufs_last_fbuf	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^int bufs_edit(bufs_t *b, char *fpath)$/;"	z	function:bufs_edit	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^int bufs_jump(bufs_t *b, int id)$/;"	z	function:bufs_jump	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^int bufs_link_write(bufs_t *b, char *fpath)$/;"	z	function:bufs_link_write	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^int bufs_new(bufs_t *b, WINDOW *w, int tabsz)$/;"	z	function:bufs_new	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^int bufs_next_id(bufs_t *b)$/;"	z	function:bufs_next_id	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^int bufs_open(bufs_t *b, char *fpath, WINDOW *w, int tabsz)$/;"	z	function:bufs_open	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^int bufs_write(bufs_t *b)$/;"	z	function:bufs_write	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^int bufs_write_other(bufs_t *b, char *fpath, WINDOW *w, int tabsz)$/;"	z	function:bufs_write_other	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^void bufs_active_buf_set_elbuf(bufs_t *b)$/;"	z	function:bufs_active_buf_set_elbuf	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^void bufs_active_buf_set_fbuf(bufs_t *b)$/;"	z	function:bufs_active_buf_set_fbuf	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^void bufs_close(bufs_t *b, WINDOW *w)$/;"	z	function:bufs_close	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^void bufs_fbufs_append(bufs_t *b, fbuf_t *f)$/;"	z	function:bufs_fbufs_append	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^void bufs_free(bufs_t *b)$/;"	z	function:bufs_free	typeref:typename:bufs_t *	file:
b	src/fbuf/bufs.c	/^void bufs_init(bufs_t *b, WINDOW *w, char *fpaths[], int nfpaths)$/;"	z	function:bufs_init	typeref:typename:bufs_t *	file:
b	src/fbuf/elinp.c	/^void elinp_enter(bufs_t *b, cmds_t *cs, WINDOW *w)$/;"	z	function:elinp_enter	typeref:typename:bufs_t *	file:
b	src/fbuf/elinp.c	/^void elinp_esc(bufs_t *b)$/;"	z	function:elinp_esc	typeref:typename:bufs_t *	file:
b	src/fbuf/elinp.c	/^void elinp_handle_char(bufs_t *b, int c, cmds_t *cs, WINDOW *w)$/;"	z	function:elinp_handle_char	typeref:typename:bufs_t *	file:
b	src/fbuf/elinp.c	/^void elinp_handle_reg_char(bufs_t *b, int c, cmds_t *cs, WINDOW *w)$/;"	z	function:elinp_handle_reg_char	typeref:typename:bufs_t *	file:
b	src/fbuf/elinp.c	/^void elinp_handle_seq_char(bufs_t *b, int c)$/;"	z	function:elinp_handle_seq_char	typeref:typename:bufs_t *	file:
b	src/fbuf/fbinp.c	/^void fbinp_esc(bufs_t *b)$/;"	z	function:fbinp_esc	typeref:typename:bufs_t *	file:
b	src/fbuf/fbinp.c	/^void fbinp_handle_char(bufs_t *b, int c)$/;"	z	function:fbinp_handle_char	typeref:typename:bufs_t *	file:
b	src/fbuf/fbinp.c	/^void fbinp_handle_reg_char(bufs_t *b, int c)$/;"	z	function:fbinp_handle_reg_char	typeref:typename:bufs_t *	file:
b	src/fbuf/fbinp.c	/^void fbinp_handle_seq_char(bufs_t *b, int c)$/;"	z	function:fbinp_handle_seq_char	typeref:typename:bufs_t *	file:
b_active_buf	src/fbuf/bufs.h	/^	fbuf_t *b_active_buf;  $/;"	m	struct:buffers	typeref:typename:fbuf_t *
b_active_fbuf	src/fbuf/bufs.h	/^	fbuf_t *b_active_fbuf;$/;"	m	struct:buffers	typeref:typename:fbuf_t *
b_elbuf	src/fbuf/bufs.h	/^	elbuf_t b_elbuf;  \/\/ Echo line buffer at bottom of screen for running commands from.$/;"	m	struct:buffers	typeref:typename:elbuf_t
b_fbufs	src/fbuf/bufs.h	/^	fbufs_t *b_fbufs;  \/\/ List of file buffers.$/;"	m	struct:buffers	typeref:typename:fbufs_t *
b_nbufs	src/fbuf/bufs.h	/^	int b_nbufs;$/;"	m	struct:buffers	typeref:typename:int
baudrate	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) baudrate (void);				\/* implemented *\/$/;"	p	typeref:typename:int
beep	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) beep  (void);				\/* implemented *\/$/;"	p	typeref:typename:int
bkgd	/usr/include/curses.h	/^#define bkgd(/;"	d
bkgd	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) bkgd (chtype);				\/* generated *\/$/;"	p	typeref:typename:int
bkgdset	/usr/include/curses.h	/^#define bkgdset(/;"	d
bkgdset	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) bkgdset (chtype);				\/* generated *\/$/;"	p	typeref:typename:void
bkgrnd	/usr/include/curses.h	/^#define bkgrnd(/;"	d
bkgrnd	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) bkgrnd (const cchar_t *);			\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
bkgrndset	/usr/include/curses.h	/^#define bkgrndset(/;"	d
bkgrndset	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) bkgrndset (const cchar_t *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:void
bool	/usr/include/curses.h	/^#define bool /;"	d
border	/usr/include/curses.h	/^#define border(/;"	d
border	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) border (chtype,chtype,chtype,chtype,chtype,chtype,chtype,chtype);	\/*/;"	p	typeref:typename:int
border_set	/usr/include/curses.h	/^#define border_set(/;"	d
border_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) border_set (const cchar_t*,const cchar_t*,const cchar_t*,const cchar_/;"	p	typeref:typename:int
bot_row_offset	src/view.c	/^void view_init(view_t *v, WINDOW *w, int top_row_offset, int bot_row_offset, $/;"	z	function:view_init	typeref:typename:int	file:
box	/usr/include/curses.h	/^#define box(/;"	d
box	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) box (WINDOW *, chtype, chtype);		\/* generated *\/$/;"	p	typeref:typename:int
box_set	/usr/include/curses.h	/^#define box_set(/;"	d
box_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) box_set (WINDOW *, const cchar_t *, const cchar_t *);	\/* generated:W/;"	p	typeref:typename:int
bstate	/usr/include/curses.h	/^    mmask_t bstate;	\/* button state bits *\/$/;"	m	struct:__anon9db876bb0608	typeref:typename:mmask_t
buffers	src/fbuf/bufs.h	/^struct buffers {$/;"	s
bufs_active_buf_set_elbuf	src/fbuf/bufs.c	/^void bufs_active_buf_set_elbuf(bufs_t *b)$/;"	f	typeref:typename:void
bufs_active_buf_set_elbuf	src/fbuf/bufs.h	/^void bufs_active_buf_set_elbuf(bufs_t *b);$/;"	p	typeref:typename:void
bufs_active_buf_set_fbuf	src/fbuf/bufs.c	/^void bufs_active_buf_set_fbuf(bufs_t *b)$/;"	f	typeref:typename:void
bufs_active_buf_set_fbuf	src/fbuf/bufs.h	/^void bufs_active_buf_set_fbuf(bufs_t *b);$/;"	p	typeref:typename:void
bufs_close	src/fbuf/bufs.c	/^void bufs_close(bufs_t *b, WINDOW *w)$/;"	f	typeref:typename:void
bufs_close	src/fbuf/bufs.h	/^void bufs_close(bufs_t *b, WINDOW *w);$/;"	p	typeref:typename:void
bufs_edit	src/fbuf/bufs.c	/^int bufs_edit(bufs_t *b, char *fpath)$/;"	f	typeref:typename:int
bufs_edit	src/fbuf/bufs.h	/^int bufs_edit(bufs_t *b, char *fpath);$/;"	p	typeref:typename:int
bufs_fbufs_append	src/fbuf/bufs.c	/^void bufs_fbufs_append(bufs_t *b, fbuf_t *f)$/;"	f	typeref:typename:void
bufs_free	src/fbuf/bufs.c	/^void bufs_free(bufs_t *b)$/;"	f	typeref:typename:void
bufs_free	src/fbuf/bufs.h	/^void bufs_free(bufs_t *b);$/;"	p	typeref:typename:void
bufs_init	src/fbuf/bufs.c	/^void bufs_init(bufs_t *b, WINDOW *w, char *fpaths[], int nfpaths)$/;"	f	typeref:typename:void
bufs_init	src/fbuf/bufs.h	/^void bufs_init(bufs_t *b, WINDOW *w, char *fpaths[], int nfpaths);$/;"	p	typeref:typename:void
bufs_jump	src/fbuf/bufs.c	/^int bufs_jump(bufs_t *b, int id)$/;"	f	typeref:typename:int
bufs_jump	src/fbuf/bufs.h	/^int bufs_jump(bufs_t *b, int id);$/;"	p	typeref:typename:int
bufs_last_fbuf	src/fbuf/bufs.c	/^fbuf_t *bufs_last_fbuf(bufs_t *b)$/;"	f	typeref:typename:fbuf_t *
bufs_last_fbuf	src/fbuf/bufs.h	/^fbuf_t *bufs_last_fbuf(bufs_t *b);$/;"	p	typeref:typename:fbuf_t *
bufs_link_write	src/fbuf/bufs.c	/^int bufs_link_write(bufs_t *b, char *fpath)$/;"	f	typeref:typename:int
bufs_link_write	src/fbuf/bufs.h	/^int bufs_link_write(bufs_t *b, char *fpath);$/;"	p	typeref:typename:int
bufs_new	src/fbuf/bufs.c	/^int bufs_new(bufs_t *b, WINDOW *w, int tabsz)$/;"	f	typeref:typename:int
bufs_new	src/fbuf/bufs.h	/^int bufs_new(bufs_t *b, WINDOW *w, int tabsz);$/;"	p	typeref:typename:int
bufs_next_id	src/fbuf/bufs.c	/^int bufs_next_id(bufs_t *b)$/;"	f	typeref:typename:int
bufs_open	src/fbuf/bufs.c	/^int bufs_open(bufs_t *b, char *fpath, WINDOW *w, int tabsz)$/;"	f	typeref:typename:int
bufs_open	src/fbuf/bufs.h	/^int bufs_open(bufs_t *b, char *fpath, WINDOW *w, int tabsz);$/;"	p	typeref:typename:int
bufs_t	src/fbuf/bufs.h	/^typedef struct buffers bufs_t;$/;"	t	typeref:struct:buffers
bufs_write	src/fbuf/bufs.c	/^int bufs_write(bufs_t *b)$/;"	f	typeref:typename:int
bufs_write	src/fbuf/bufs.h	/^int bufs_write(bufs_t *b);$/;"	p	typeref:typename:int
bufs_write_other	src/fbuf/bufs.c	/^int bufs_write_other(bufs_t *b, char *fpath, WINDOW *w, int tabsz)$/;"	f	typeref:typename:int
bufs_write_other	src/fbuf/bufs.h	/^int bufs_write_other(bufs_t *b, char *fpath, WINDOW *w, int tabsz);$/;"	p	typeref:typename:int
build/%.o	Makefile	/^build\/%.o: src\/%.c$/;"	t
build/%.o	test/Makefile	/^build\/%.o: src\/%.c$/;"	t
byte_t	src/ds/str.h	/^typedef char byte_t;$/;"	t	typeref:typename:char
bytes_t	src/ds/str.h	/^typedef str_t bytes_t;$/;"	t	typeref:typename:str_t
c	src/chrp.c	/^int chrp_find(char *s, char c, int start, int end)$/;"	z	function:chrp_find	typeref:typename:char	file:
c	src/chrp.c	/^int chrp_find_reverse(char *s, char c, int start, int end)$/;"	z	function:chrp_find_reverse	typeref:typename:char	file:
c	src/chrp.c	/^int chrp_nmatched(char *s, char c, int start, int end)$/;"	z	function:chrp_nmatched	typeref:typename:char	file:
c	src/chrp.c	/^int chrp_nmatched_reverse(char *s, char c, int start, int end)$/;"	z	function:chrp_nmatched_reverse	typeref:typename:char	file:
c	src/chrp.c	/^static int strcount(char *s, int c)$/;"	z	function:strcount	typeref:typename:int	file:
c	src/cmd/cmds.c	/^cmd_t *cmds_search(cmds_t *c, char *name)$/;"	z	function:cmds_search	typeref:typename:cmds_t *	file:
c	src/cmd/cmds.c	/^void cmds_free(cmds_t *c)$/;"	z	function:cmds_free	typeref:typename:cmds_t *	file:
c	src/cursor.c	/^void cursor_add_col_manual(cursor_t *c, int offset)$/;"	z	function:cursor_add_col_manual	typeref:typename:cursor_t *	file:
c	src/cursor.c	/^void cursor_add_row(cursor_t *c, int offset, lines_t *ls)$/;"	z	function:cursor_add_row	typeref:typename:cursor_t *	file:
c	src/cursor.c	/^void cursor_reset(cursor_t *c)$/;"	z	function:cursor_reset	typeref:typename:cursor_t *	file:
c	src/cursor.c	/^void cursor_set_col_manual(cursor_t *c, int col)$/;"	z	function:cursor_set_col_manual	typeref:typename:cursor_t *	file:
c	src/cursor.c	/^void cursor_set_row(cursor_t *c, int row, lines_t *ls)$/;"	z	function:cursor_set_row	typeref:typename:cursor_t *	file:
c	src/ds/str.c	/^void str_append(str_t *s, char c)$/;"	z	function:str_append	typeref:typename:char	file:
c	src/ds/str.c	/^void str_insert(str_t *s, char c, int index)$/;"	z	function:str_insert	typeref:typename:char	file:
c	src/ds/str.c	/^void str_insert_aux(str_t *s, char c, int index)$/;"	z	function:str_insert_aux	typeref:typename:char	file:
c	src/fbuf/elinp.c	/^void elinp_handle_char(bufs_t *b, int c, cmds_t *cs, WINDOW *w)$/;"	z	function:elinp_handle_char	typeref:typename:int	file:
c	src/fbuf/elinp.c	/^void elinp_handle_reg_char(bufs_t *b, int c, cmds_t *cs, WINDOW *w)$/;"	z	function:elinp_handle_reg_char	typeref:typename:int	file:
c	src/fbuf/elinp.c	/^void elinp_handle_seq_char(bufs_t *b, int c)$/;"	z	function:elinp_handle_seq_char	typeref:typename:int	file:
c	src/fbuf/fbinp.c	/^void fbinp_handle_char(bufs_t *b, int c)$/;"	z	function:fbinp_handle_char	typeref:typename:int	file:
c	src/fbuf/fbinp.c	/^void fbinp_handle_reg_char(bufs_t *b, int c)$/;"	z	function:fbinp_handle_reg_char	typeref:typename:int	file:
c	src/fbuf/fbinp.c	/^void fbinp_handle_seq_char(bufs_t *b, int c)$/;"	z	function:fbinp_handle_seq_char	typeref:typename:int	file:
c	src/fbuf/fbinp.c	/^void fbinp_insert_char(fbuf_t *f, char c)$/;"	z	function:fbinp_insert_char	typeref:typename:char	file:
c	src/linsert.c	/^line_t *lins_split(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_split	typeref:typename:cursor_t *	file:
c	src/linsert.c	/^void lins_backspace_reg(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_backspace_reg	typeref:typename:cursor_t *	file:
c	src/linsert.c	/^void lins_backspace_start(line_t *cur, line_t *prev, cursor_t *c, int tabsz)$/;"	z	function:lins_backspace_start	typeref:typename:cursor_t *	file:
c	src/linsert.c	/^void lins_delete_reg(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_delete_reg	typeref:typename:cursor_t *	file:
c	src/linsert.c	/^void lins_delete_tab(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_delete_tab	typeref:typename:cursor_t *	file:
c	src/linsert.c	/^void lins_insert_char(line_t *l, cursor_t *crs, char c, int tabsz)$/;"	z	function:lins_insert_char	typeref:typename:char	file:
c	src/linsert.c	/^void lins_insert_reg(line_t *l, cursor_t *crs, char c, int tabsz)$/;"	z	function:lins_insert_reg	typeref:typename:char	file:
c	src/linsert.c	/^void lins_insert_tab(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_insert_tab	typeref:typename:cursor_t *	file:
c	src/move.c	/^void mv_down(cursor_t *c, lines_t *ls)$/;"	z	function:mv_down	typeref:typename:cursor_t *	file:
c	src/move.c	/^void mv_end(cursor_t *c, line_t *l)$/;"	z	function:mv_end	typeref:typename:cursor_t *	file:
c	src/move.c	/^void mv_start(cursor_t *c)$/;"	z	function:mv_start	typeref:typename:cursor_t *	file:
c	src/move.c	/^void mv_up(cursor_t *c, lines_t *ls)$/;"	z	function:mv_up	typeref:typename:cursor_t *	file:
c	src/move.c	/^void mv_view_pgdn(cursor_t *c, lines_t *ls, view_t *v)$/;"	z	function:mv_view_pgdn	typeref:typename:cursor_t *	file:
c	src/move.c	/^void mv_view_pgup(cursor_t *c, lines_t *ls, view_t *v)$/;"	z	function:mv_view_pgup	typeref:typename:cursor_t *	file:
c	src/view.c	/^bool view_crs_above(view_t *v, cursor_t *c)$/;"	z	function:view_crs_above	typeref:typename:cursor_t *	file:
c	src/view.c	/^bool view_crs_below(view_t *v, cursor_t *c)$/;"	z	function:view_crs_below	typeref:typename:cursor_t *	file:
c	src/view.c	/^bool view_crs_leftward(view_t *v, cursor_t *c)$/;"	z	function:view_crs_leftward	typeref:typename:cursor_t *	file:
c	src/view.c	/^bool view_crs_rightward(view_t *v, cursor_t *c)$/;"	z	function:view_crs_rightward	typeref:typename:cursor_t *	file:
c	src/view.c	/^int view_crs_above_dist(view_t *v, cursor_t *c)$/;"	z	function:view_crs_above_dist	typeref:typename:cursor_t *	file:
c	src/view.c	/^int view_crs_below_dist(view_t *v, cursor_t *c)$/;"	z	function:view_crs_below_dist	typeref:typename:cursor_t *	file:
c	src/view.c	/^int view_crs_leftward_dist(view_t *v, cursor_t *c)$/;"	z	function:view_crs_leftward_dist	typeref:typename:cursor_t *	file:
c	src/view.c	/^int view_crs_rightward_dist(view_t *v, cursor_t *c)$/;"	z	function:view_crs_rightward_dist	typeref:typename:cursor_t *	file:
c	src/view.c	/^int view_cursor_display_col(view_t *v, cursor_t *c)$/;"	z	function:view_cursor_display_col	typeref:typename:cursor_t *	file:
c	src/view.c	/^int view_cursor_display_row(view_t *v, cursor_t *c)$/;"	z	function:view_cursor_display_row	typeref:typename:cursor_t *	file:
c	src/view.c	/^void view_sync_crs_col(view_t *v, cursor_t *c, int linelen)$/;"	z	function:view_sync_crs_col	typeref:typename:cursor_t *	file:
c	src/view.c	/^void view_sync_crs_col_leftward(view_t *v, cursor_t *c, int linelen)$/;"	z	function:view_sync_crs_col_leftward	typeref:typename:cursor_t *	file:
c	src/view.c	/^void view_sync_crs_col_rightward(view_t *v, cursor_t *c, int linelen)$/;"	z	function:view_sync_crs_col_rightward	typeref:typename:cursor_t *	file:
c	src/view.c	/^void view_sync_crs_row(view_t *v, cursor_t *c, int nlines)$/;"	z	function:view_sync_crs_row	typeref:typename:cursor_t *	file:
c	src/view.c	/^void view_sync_crs_row_above(view_t *v, cursor_t *c, int nlines)$/;"	z	function:view_sync_crs_row_above	typeref:typename:cursor_t *	file:
c	src/view.c	/^void view_sync_crs_row_below(view_t *v, cursor_t *c, int nlines)$/;"	z	function:view_sync_crs_row_below	typeref:typename:cursor_t *	file:
c	src/view.c	/^void view_sync_cursor(view_t *v, cursor_t *c, lines_t *ls)$/;"	z	function:view_sync_cursor	typeref:typename:cursor_t *	file:
c_col	src/cursor.h	/^	int c_col;$/;"	m	struct:cursor	typeref:typename:int
c_handler	src/cmd/cmd.h	/^	char *(*c_handler)(char *, bufs_t *, WINDOW *);$/;"	m	struct:command	typeref:typename:char * (*)(char *,bufs_t *,WINDOW *)
c_long_name	src/cmd/cmd.h	/^	char *c_long_name;  \/\/ Unique longer string identifier for command.$/;"	m	struct:command	typeref:typename:char *
c_prev_manual_mv_col	src/cursor.h	/^	int c_prev_manual_mv_col;$/;"	m	struct:cursor	typeref:typename:int
c_row	src/cursor.h	/^	int c_row;$/;"	m	struct:cursor	typeref:typename:int
c_short_name	src/cmd/cmd.h	/^	char *c_short_name;  \/\/ Unique few character identifier for the command.$/;"	m	struct:command	typeref:typename:char *
can_change_color	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) can_change_color (void);			\/* implemented *\/$/;"	p	typeref:typename:bool
capacity	src/ds/dlist.c	/^dlist_t *dlist_init(int capacity)$/;"	z	function:dlist_init	typeref:typename:int	file:
capacity	src/ds/slist.c	/^slist_t *slist_init(int capacity)$/;"	z	function:slist_init	typeref:typename:int	file:
capacity	src/ds/str.c	/^str_t *str_alloc(int capacity)$/;"	z	function:str_alloc	typeref:typename:int	file:
cbreak	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) cbreak (void);				\/* implemented *\/$/;"	p	typeref:typename:int
cchar_t	/usr/include/curses.h	/^cchar_t;$/;"	t	typeref:struct:__anon9db876bb0108
chars	/usr/include/curses.h	/^    wchar_t	chars[CCHARW_MAX];$/;"	m	struct:__anon9db876bb0108	typeref:typename:wchar_t[]
chgat	/usr/include/curses.h	/^#define chgat(/;"	d
chgat	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) chgat (int, attr_t, NCURSES_PAIRS_T, const void *);	\/* generated *\/$/;"	p	typeref:typename:int
chrp_find	src/chrp.c	/^int chrp_find(char *s, char c, int start, int end)$/;"	f	typeref:typename:int
chrp_find	src/chrp.h	/^int chrp_find(char *s, char c, int start, int end);$/;"	p	typeref:typename:int
chrp_find_reverse	src/chrp.c	/^int chrp_find_reverse(char *s, char c, int start, int end)$/;"	f	typeref:typename:int
chrp_find_reverse	src/chrp.h	/^int chrp_find_reverse(char *s, char c, int start, int end);$/;"	p	typeref:typename:int
chrp_nmatched	src/chrp.c	/^int chrp_nmatched(char *s, char c, int start, int end)$/;"	f	typeref:typename:int
chrp_nmatched	src/chrp.h	/^int chrp_nmatched(char *s, char c, int start, int end);$/;"	p	typeref:typename:int
chrp_nmatched_reverse	src/chrp.c	/^int chrp_nmatched_reverse(char *s, char c, int start, int end)$/;"	f	typeref:typename:int
chrp_nmatched_reverse	src/chrp.h	/^int chrp_nmatched_reverse(char *s, char c, int start, int end);$/;"	p	typeref:typename:int
chrpcpy_alloc	src/chrp.c	/^char *chrpcpy_alloc(char *s)$/;"	f	typeref:typename:char *
chrpcpy_alloc	src/chrp.h	/^char *chrpcpy_alloc(char *s);$/;"	p	typeref:typename:char *
chrpprintf	src/chrp.c	/^char *chrpprintf(char *format, ...)$/;"	f	typeref:typename:char *
chrpprintf	src/chrp.h	/^char *chrpprintf(char *format, ...);$/;"	p	typeref:typename:char *
chtype	/usr/include/curses.h	/^typedef uint32_t chtype;$/;"	t	typeref:typename:uint32_t
chtype	/usr/include/curses.h	/^typedef unsigned chtype;$/;"	t	typeref:typename:unsigned
clean	Makefile	/^clean:$/;"	t
clean	test/Makefile	/^clean:$/;"	t
cleanup	src/tedit.c	/^void cleanup(void)$/;"	f	typeref:typename:void
clear	/usr/include/curses.h	/^#define clear(/;"	d
clear	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) clear (void);				\/* generated *\/$/;"	p	typeref:typename:int
clearok	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) clearok (WINDOW *,bool);			\/* implemented *\/$/;"	p	typeref:typename:int
clrtobot	/usr/include/curses.h	/^#define clrtobot(/;"	d
clrtobot	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) clrtobot (void);				\/* generated *\/$/;"	p	typeref:typename:int
clrtoeol	/usr/include/curses.h	/^#define clrtoeol(/;"	d
clrtoeol	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) clrtoeol (void);				\/* generated *\/$/;"	p	typeref:typename:int
cmd_init	src/cmd/cmd.c	/^cmd_t *cmd_init(char *short_name, char *long_name, char *(*handler)(char *, bufs_t *, WINDOW *))$/;"	f	typeref:typename:cmd_t *
cmd_init	src/cmd/cmd.h	/^cmd_t *cmd_init(char *short_name, char *long_name, char *(*handler)(char *, bufs_t *, WINDOW *))/;"	p	typeref:typename:cmd_t *
cmd_name	src/cmd/cparse.c	/^char *cmds_parse_aux(char *cmd_name, char *remain_args, cmds_t *cs, bufs_t *b, WINDOW *w)$/;"	z	function:cmds_parse_aux	typeref:typename:char *	file:
cmd_t	src/cmd/cmd.h	/^typedef struct command cmd_t;$/;"	t	typeref:struct:command
cmds_free	src/cmd/cmds.c	/^void cmds_free(cmds_t *c)$/;"	f	typeref:typename:void
cmds_free	src/cmd/cmds.h	/^void cmds_free(cmds_t *c);$/;"	p	typeref:typename:void
cmds_init	src/cmd/cmds.c	/^cmds_t *cmds_init(void)$/;"	f	typeref:typename:cmds_t *
cmds_init	src/cmd/cmds.h	/^cmds_t *cmds_init(void);$/;"	p	typeref:typename:cmds_t *
cmds_parse	src/cmd/cparse.c	/^char *cmds_parse(char *args, cmds_t *cs, bufs_t *b, WINDOW *w)$/;"	f	typeref:typename:char *
cmds_parse	src/cmd/cparse.h	/^char *cmds_parse(char *args, cmds_t *cs, bufs_t *b, WINDOW *w);$/;"	p	typeref:typename:char *
cmds_parse_aux	src/cmd/cparse.c	/^char *cmds_parse_aux(char *cmd_name, char *remain_args, cmds_t *cs, bufs_t *b, WINDOW *w)$/;"	f	typeref:typename:char *
cmds_search	src/cmd/cmds.c	/^cmd_t *cmds_search(cmds_t *c, char *name)$/;"	f	typeref:typename:cmd_t *
cmds_search	src/cmd/cmds.h	/^cmd_t *cmds_search(cmds_t *cs, char *name);$/;"	p	typeref:typename:cmd_t *
cmds_t	src/cmd/cmds.h	/^typedef struct commands cmds_t;$/;"	t	typeref:struct:commands
cmp	src/ds/math.c	/^int cmp(int a, int b)$/;"	f	typeref:typename:int
col	src/cursor.c	/^void cursor_set_col_manual(cursor_t *c, int col)$/;"	z	function:cursor_set_col_manual	typeref:typename:int	file:
col	src/line.c	/^line_t *line_split(line_t *l, int col, int tabsz)$/;"	z	function:line_split	typeref:typename:int	file:
color_content	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) color_content (NCURSES_COLOR_T,NCURSES_COLOR_T*,NCURSES_COLOR_T*,NCUR/;"	p	typeref:typename:int
color_set	/usr/include/curses.h	/^#define color_set(/;"	d
color_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) color_set (NCURSES_PAIRS_T,void*);			\/* generated *\/$/;"	p	typeref:typename:int
command	src/cmd/cmd.h	/^struct command {$/;"	s
commands	src/cmd/cmds.h	/^struct commands {$/;"	s
comparison_fn_t	/usr/include/search.h	/^typedef __compar_fn_t comparison_fn_t;$/;"	t	typeref:typename:__compar_fn_t
copywin	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) copywin (const WINDOW*,WINDOW*,int,int,int,int,int,int,int);	\/* impl/;"	p	typeref:typename:int
count	/usr/include/curses.h	/^    int count;$/;"	m	struct:__anon9db876bb0508	typeref:typename:int
crmode	/usr/include/curses.h	/^#define crmode(/;"	d
crs	src/linsert.c	/^bool lins_backspace(line_t *cur, line_t *prev, cursor_t *crs, int tabsz)$/;"	z	function:lins_backspace	typeref:typename:cursor_t *	file:
crs	src/linsert.c	/^bool lins_delete(line_t *cur, line_t *next, cursor_t *crs, int tabsz)$/;"	z	function:lins_delete	typeref:typename:cursor_t *	file:
crs	src/linsert.c	/^void lins_backspace_tab(line_t *l, cursor_t *crs, int tabsz)$/;"	z	function:lins_backspace_tab	typeref:typename:cursor_t *	file:
crs	src/linsert.c	/^void lins_insert_char(line_t *l, cursor_t *crs, char c, int tabsz)$/;"	z	function:lins_insert_char	typeref:typename:cursor_t *	file:
crs	src/linsert.c	/^void lins_insert_reg(line_t *l, cursor_t *crs, char c, int tabsz)$/;"	z	function:lins_insert_reg	typeref:typename:cursor_t *	file:
crs	src/move.c	/^void mv_left(cursor_t *crs, line_t *l)$/;"	z	function:mv_left	typeref:typename:cursor_t *	file:
crs	src/move.c	/^void mv_right(cursor_t *crs, line_t *l)$/;"	z	function:mv_right	typeref:typename:cursor_t *	file:
cs	src/cmd/cparse.c	/^char *cmds_parse(char *args, cmds_t *cs, bufs_t *b, WINDOW *w)$/;"	z	function:cmds_parse	typeref:typename:cmds_t *	file:
cs	src/cmd/cparse.c	/^char *cmds_parse_aux(char *cmd_name, char *remain_args, cmds_t *cs, bufs_t *b, WINDOW *w)$/;"	z	function:cmds_parse_aux	typeref:typename:cmds_t *	file:
cs	src/fbuf/elinp.c	/^void elinp_enter(bufs_t *b, cmds_t *cs, WINDOW *w)$/;"	z	function:elinp_enter	typeref:typename:cmds_t *	file:
cs	src/fbuf/elinp.c	/^void elinp_handle_char(bufs_t *b, int c, cmds_t *cs, WINDOW *w)$/;"	z	function:elinp_handle_char	typeref:typename:cmds_t *	file:
cs	src/fbuf/elinp.c	/^void elinp_handle_reg_char(bufs_t *b, int c, cmds_t *cs, WINDOW *w)$/;"	z	function:elinp_handle_reg_char	typeref:typename:cmds_t *	file:
ctags	Makefile	/^ctags:$/;"	t
ctags	test/Makefile	/^ctags:$/;"	t
cur	src/linsert.c	/^bool lins_backspace(line_t *cur, line_t *prev, cursor_t *crs, int tabsz)$/;"	z	function:lins_backspace	typeref:typename:line_t *	file:
cur	src/linsert.c	/^bool lins_delete(line_t *cur, line_t *next, cursor_t *crs, int tabsz)$/;"	z	function:lins_delete	typeref:typename:line_t *	file:
cur	src/linsert.c	/^void lins_backspace_start(line_t *cur, line_t *prev, cursor_t *c, int tabsz)$/;"	z	function:lins_backspace_start	typeref:typename:line_t *	file:
cur	src/linsert.c	/^void lins_delete_newline(line_t *cur, line_t *next, int tabsz)$/;"	z	function:lins_delete_newline	typeref:typename:line_t *	file:
curs_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) curs_set (int);				\/* implemented *\/$/;"	p	typeref:typename:int
curscr	/usr/include/curses.h	/^#define curscr /;"	d
curscr	/usr/include/curses.h	/^extern NCURSES_EXPORT_VAR(WINDOW *) curscr;$/;"	x	typeref:typename:NCURSES_EXPORT_VAR (WINDOW *)
curses_trace	/usr/include/curses.h	/^extern NCURSES_EXPORT(unsigned) curses_trace (const unsigned);$/;"	p	typeref:typename:unsigned
curses_version	/usr/include/curses.h	/^#define curses_version(/;"	d
curses_version	/usr/include/curses.h	/^extern NCURSES_EXPORT(const char *) curses_version (void);$/;"	p	typeref:typename:const char *
cursor	src/cursor.h	/^struct cursor {$/;"	s
cursor_add_col_manual	src/cursor.c	/^void cursor_add_col_manual(cursor_t *c, int offset)$/;"	f	typeref:typename:void
cursor_add_col_manual	src/cursor.h	/^void cursor_add_col_manual(cursor_t *c, int offset);$/;"	p	typeref:typename:void
cursor_add_row	src/cursor.c	/^void cursor_add_row(cursor_t *c, int offset, lines_t *ls)$/;"	f	typeref:typename:void
cursor_add_row	src/cursor.h	/^void cursor_add_row(cursor_t *c, int offset, lines_t *ls);$/;"	p	typeref:typename:void
cursor_reset	src/cursor.c	/^void cursor_reset(cursor_t *c)$/;"	f	typeref:typename:void
cursor_reset	src/cursor.h	/^void cursor_reset(cursor_t *c);$/;"	p	typeref:typename:void
cursor_set_col_manual	src/cursor.c	/^void cursor_set_col_manual(cursor_t *c, int col)$/;"	f	typeref:typename:void
cursor_set_col_manual	src/cursor.h	/^void cursor_set_col_manual(cursor_t *c, int col);$/;"	p	typeref:typename:void
cursor_set_row	src/cursor.c	/^void cursor_set_row(cursor_t *c, int row, lines_t *ls)$/;"	f	typeref:typename:void
cursor_set_row	src/cursor.h	/^void cursor_set_row(cursor_t *c, int row, lines_t *ls);$/;"	p	typeref:typename:void
cursor_t	src/cursor.h	/^typedef struct cursor cursor_t;$/;"	t	typeref:struct:cursor
d	src/ds/dlist.c	/^bool dlist_delete_elem(dlist_t *d, void *elem, bool (*match_func)(void *, void *))$/;"	z	function:dlist_delete_elem	typeref:typename:dlist_t *	file:
d	src/ds/dlist.c	/^int dlist_resize(dlist_t *d, int new_cap)$/;"	z	function:dlist_resize	typeref:typename:dlist_t *	file:
d	src/ds/dlist.c	/^void dlist_append(dlist_t *d, void *elem)$/;"	z	function:dlist_append	typeref:typename:dlist_t *	file:
d	src/ds/dlist.c	/^void dlist_delete_ind(dlist_t *d, int index)$/;"	z	function:dlist_delete_ind	typeref:typename:dlist_t *	file:
d	src/ds/dlist.c	/^void dlist_insert(dlist_t *d, int index, void *elem)$/;"	z	function:dlist_insert	typeref:typename:dlist_t *	file:
d	src/ds/dlist.c	/^void dlist_try_grow(dlist_t *d)$/;"	z	function:dlist_try_grow	typeref:typename:dlist_t *	file:
d	src/ds/dlist.c	/^void dlist_try_shrink(dlist_t *d)$/;"	z	function:dlist_try_shrink	typeref:typename:dlist_t *	file:
data	/usr/include/curses.h	/^    } data;$/;"	m	struct:__anon9db876bb0208	typeref:union:__anon9db876bb0208::__anon9db876bb030a
data	/usr/include/search.h	/^    void *data;$/;"	m	struct:entry	typeref:typename:void *
data	src/lines.c	/^void lines_for_each(lines_t *l, void (*line_func)(line_t *, void *), void *data)$/;"	z	function:lines_for_each	typeref:typename:void *	file:
data	src/tedit.c	/^void *thread_display(void *data)$/;"	z	function:thread_display	typeref:typename:void *	file:
data	src/tedit.c	/^void *thread_input(void *data)$/;"	z	function:thread_input	typeref:typename:void *	file:
def_prog_mode	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) def_prog_mode (void);			\/* implemented *\/$/;"	p	typeref:typename:int
def_shell_mode	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) def_shell_mode (void);			\/* implemented *\/$/;"	p	typeref:typename:int
define_key	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) define_key (const char *, int);$/;"	p	typeref:typename:int
delay_output	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) delay_output (int);				\/* implemented *\/$/;"	p	typeref:typename:int
delch	/usr/include/curses.h	/^#define delch(/;"	d
delch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) delch (void);				\/* generated *\/$/;"	p	typeref:typename:int
deleteln	/usr/include/curses.h	/^#define deleteln(/;"	d
deleteln	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) deleteln (void);				\/* generated *\/$/;"	p	typeref:typename:int
delscreen	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) delscreen (SCREEN *);			\/* implemented *\/$/;"	p	typeref:typename:void
delwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) delwin (WINDOW *);				\/* implemented *\/$/;"	p	typeref:typename:int
dend	src/ds/str.c	/^void str_copy(str_t *src, int sstart, int send, str_t *dst, int dstart, int dend)$/;"	z	function:str_copy	typeref:typename:int	file:
derwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(WINDOW *) derwin (WINDOW *,int,int,int,int);	\/* implemented *\/$/;"	p	typeref:typename:WINDOW *
dest	src/ds/str.c	/^str_t *str_cat(str_t *dest, str_t *src)$/;"	z	function:str_cat	typeref:typename:str_t *	file:
dest	src/linsert.c	/^void lins_linecat(line_t *dest, line_t *src, int tabsz)$/;"	z	function:lins_linecat	typeref:typename:line_t *	file:
display_buffers	src/display.c	/^void display_buffers(bufs_t *b)$/;"	f	typeref:typename:void
display_fbuf_cursor	src/display.c	/^void display_fbuf_cursor(fbuf_t *f)$/;"	f	typeref:typename:void
display_fbuf_line	src/display.c	/^void display_fbuf_line(line_t *l, int i, int first_col, int view_width, $/;"	f	typeref:typename:void
display_fbuf_lines	src/display.c	/^void display_fbuf_lines(fbuf_t *f)$/;"	f	typeref:typename:void
display_start	src/display.c	/^void display_start(tedata_t *t)$/;"	f	typeref:typename:void
display_start	src/display.h	/^void display_start(tedata_t *t);$/;"	p	typeref:typename:void
display_text_editor	src/display.c	/^void display_text_editor(tedata_t *t)$/;"	f	typeref:typename:void
dist_to_next_tabstop	src/tab.c	/^int dist_to_next_tabstop(int strlen, int tabsz)$/;"	f	typeref:typename:int
dist_to_next_tabstop	src/tab.h	/^int dist_to_next_tabstop(int strlen, int tabsz);$/;"	p	typeref:typename:int
dlist_append	src/ds/dlist.c	/^void dlist_append(dlist_t *d, void *elem)$/;"	f	typeref:typename:void
dlist_append	src/ds/dlist.h	/^void dlist_append(dlist_t *d, void *elem);$/;"	p	typeref:typename:void
dlist_delete_elem	src/ds/dlist.c	/^bool dlist_delete_elem(dlist_t *d, void *elem, bool (*match_func)(void *, void *))$/;"	f	typeref:typename:bool
dlist_delete_elem	src/ds/dlist.h	/^bool dlist_delete_elem(dlist_t *d, void *elem, bool (*match_func)(void *, void *));$/;"	p	typeref:typename:bool
dlist_delete_ind	src/ds/dlist.c	/^void dlist_delete_ind(dlist_t *d, int index)$/;"	f	typeref:typename:void
dlist_delete_ind	src/ds/dlist.h	/^void dlist_delete_ind(dlist_t *d, int index);$/;"	p	typeref:typename:void
dlist_init	src/ds/dlist.c	/^dlist_t *dlist_init(int capacity)$/;"	f	typeref:typename:dlist_t *
dlist_init	src/ds/dlist.h	/^dlist_t *dlist_init(int capacity);$/;"	p	typeref:typename:dlist_t *
dlist_insert	src/ds/dlist.c	/^void dlist_insert(dlist_t *d, int index, void *elem)$/;"	f	typeref:typename:void
dlist_insert	src/ds/dlist.h	/^void dlist_insert(dlist_t *d, int index, void *elem);$/;"	p	typeref:typename:void
dlist_resize	src/ds/dlist.c	/^int dlist_resize(dlist_t *d, int new_cap)$/;"	f	typeref:typename:int
dlist_t	src/ds/dlist.h	/^typedef slist_t dlist_t;$/;"	t	typeref:typename:slist_t
dlist_try_grow	src/ds/dlist.c	/^void dlist_try_grow(dlist_t *d)$/;"	f	typeref:typename:void
dlist_try_shrink	src/ds/dlist.c	/^void dlist_try_shrink(dlist_t *d)$/;"	f	typeref:typename:void
doupdate	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) doupdate (void);				\/* implemented *\/$/;"	p	typeref:typename:int
dst	src/ds/str.c	/^void str_copy(str_t *src, int sstart, int send, str_t *dst, int dstart, int dend)$/;"	z	function:str_copy	typeref:typename:str_t *	file:
dstart	src/ds/str.c	/^void str_copy(str_t *src, int sstart, int send, str_t *dst, int dstart, int dend)$/;"	z	function:str_copy	typeref:typename:int	file:
dupwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(WINDOW *) dupwin (WINDOW *);			\/* implemented *\/$/;"	p	typeref:typename:WINDOW *
e	src/fbuf/elbuf.c	/^char *elbuf_str(elbuf_t *e)$/;"	z	function:elbuf_str	typeref:typename:elbuf_t *	file:
e	src/fbuf/elbuf.c	/^line_t *elbuf_line(elbuf_t *e)$/;"	z	function:elbuf_line	typeref:typename:elbuf_t *	file:
e	src/fbuf/elbuf.c	/^void elbuf_free(elbuf_t *e)$/;"	z	function:elbuf_free	typeref:typename:elbuf_t *	file:
e	src/fbuf/elbuf.c	/^void elbuf_init(elbuf_t *e, WINDOW *w)$/;"	z	function:elbuf_init	typeref:typename:elbuf_t *	file:
e	src/fbuf/elbuf.c	/^void elbuf_init_lines(elbuf_t *e)$/;"	z	function:elbuf_init_lines	typeref:typename:elbuf_t *	file:
e	src/fbuf/elbuf.c	/^void elbuf_set(elbuf_t *e, char *s)$/;"	z	function:elbuf_set	typeref:typename:elbuf_t *	file:
echo	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) echo (void);					\/* implemented *\/$/;"	p	typeref:typename:int
echo_wchar	/usr/include/curses.h	/^#define echo_wchar(/;"	d
echo_wchar	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) echo_wchar (const cchar_t *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
echochar	/usr/include/curses.h	/^#define echochar(/;"	d
echochar	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) echochar (const chtype);			\/* generated *\/$/;"	p	typeref:typename:int
elbuf_free	src/fbuf/elbuf.c	/^void elbuf_free(elbuf_t *e)$/;"	f	typeref:typename:void
elbuf_free	src/fbuf/elbuf.h	/^void elbuf_free(elbuf_t *e);$/;"	p	typeref:typename:void
elbuf_init	src/fbuf/elbuf.c	/^void elbuf_init(elbuf_t *e, WINDOW *w)$/;"	f	typeref:typename:void
elbuf_init	src/fbuf/elbuf.h	/^void elbuf_init(elbuf_t *e, WINDOW *w);$/;"	p	typeref:typename:void
elbuf_init_lines	src/fbuf/elbuf.c	/^void elbuf_init_lines(elbuf_t *e)$/;"	f	typeref:typename:void
elbuf_line	src/fbuf/elbuf.c	/^line_t *elbuf_line(elbuf_t *e)$/;"	f	typeref:typename:line_t *
elbuf_line	src/fbuf/elbuf.h	/^line_t *elbuf_line(elbuf_t *e);$/;"	p	typeref:typename:line_t *
elbuf_set	src/fbuf/elbuf.c	/^void elbuf_set(elbuf_t *e, char *s)$/;"	f	typeref:typename:void
elbuf_set	src/fbuf/elbuf.h	/^void elbuf_set(elbuf_t *e, char *s);$/;"	p	typeref:typename:void
elbuf_str	src/fbuf/elbuf.c	/^char *elbuf_str(elbuf_t *e)$/;"	f	typeref:typename:char *
elbuf_str	src/fbuf/elbuf.h	/^char *elbuf_str(elbuf_t *e);$/;"	p	typeref:typename:char *
elbuf_t	src/fbuf/elbuf.h	/^typedef fbuf_t elbuf_t;$/;"	t	typeref:typename:fbuf_t
elem	src/ds/dlist.c	/^bool dlist_delete_elem(dlist_t *d, void *elem, bool (*match_func)(void *, void *))$/;"	z	function:dlist_delete_elem	typeref:typename:void *	file:
elem	src/ds/dlist.c	/^void dlist_append(dlist_t *d, void *elem)$/;"	z	function:dlist_append	typeref:typename:void *	file:
elem	src/ds/dlist.c	/^void dlist_insert(dlist_t *d, int index, void *elem)$/;"	z	function:dlist_insert	typeref:typename:void *	file:
elem	src/ds/slist.c	/^bool slist_delete_elem(slist_t *s, void *elem, bool (*match_func)(void *, void *))$/;"	z	function:slist_delete_elem	typeref:typename:void *	file:
elem	src/ds/slist.c	/^void slist_append(slist_t *s, void *elem)$/;"	z	function:slist_append	typeref:typename:void *	file:
elem	src/ds/slist.c	/^void slist_insert(slist_t *s, int index, void *elem)$/;"	z	function:slist_insert	typeref:typename:void *	file:
elinp_enter	src/fbuf/elinp.c	/^void elinp_enter(bufs_t *b, cmds_t *cs, WINDOW *w)$/;"	f	typeref:typename:void
elinp_esc	src/fbuf/elinp.c	/^void elinp_esc(bufs_t *b)$/;"	f	typeref:typename:void
elinp_handle_char	src/fbuf/elinp.c	/^void elinp_handle_char(bufs_t *b, int c, cmds_t *cs, WINDOW *w)$/;"	f	typeref:typename:void
elinp_handle_char	src/fbuf/elinp.h	/^void elinp_handle_char(bufs_t *b, int c, cmds_t *cs, WINDOW *w);$/;"	p	typeref:typename:void
elinp_handle_reg_char	src/fbuf/elinp.c	/^void elinp_handle_reg_char(bufs_t *b, int c, cmds_t *cs, WINDOW *w)$/;"	f	typeref:typename:void
elinp_handle_seq_char	src/fbuf/elinp.c	/^void elinp_handle_seq_char(bufs_t *b, int c)$/;"	f	typeref:typename:void
end	src/chrp.c	/^int chrp_find(char *s, char c, int start, int end)$/;"	z	function:chrp_find	typeref:typename:int	file:
end	src/chrp.c	/^int chrp_find_reverse(char *s, char c, int start, int end)$/;"	z	function:chrp_find_reverse	typeref:typename:int	file:
end	src/chrp.c	/^int chrp_nmatched(char *s, char c, int start, int end)$/;"	z	function:chrp_nmatched	typeref:typename:int	file:
end	src/chrp.c	/^int chrp_nmatched_reverse(char *s, char c, int start, int end)$/;"	z	function:chrp_nmatched_reverse	typeref:typename:int	file:
end	src/display.c	/^void addtabsubstr(char *s, int start, int end)$/;"	z	function:addtabsubstr	typeref:typename:int	file:
end_offset	src/view.c	/^int len_end_ind(int len, int end_offset)$/;"	z	function:len_end_ind	typeref:typename:int	file:
end_offset	src/view.c	/^int len_shrink(int len, int start_offset, int end_offset)$/;"	z	function:len_shrink	typeref:typename:int	file:
endorder	/usr/include/search.h	/^  endorder,$/;"	e	enum:__anon6a76e5fc0203
endwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) endwin (void);				\/* implemented *\/$/;"	p	typeref:typename:int
entry	/usr/include/search.h	/^typedef struct entry$/;"	s
erase	/usr/include/curses.h	/^#define erase(/;"	d
erase	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) erase (void);				\/* generated *\/$/;"	p	typeref:typename:int
erasechar	/usr/include/curses.h	/^extern NCURSES_EXPORT(char) erasechar (void);				\/* implemented *\/$/;"	p	typeref:typename:char
erasewchar	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) erasewchar (wchar_t*);			\/* implemented *\/$/;"	p	typeref:typename:int
events	/usr/include/curses.h	/^    _nc_event *events[1];$/;"	m	struct:__anon9db876bb0508	typeref:typename:_nc_event * [1]
exit_curses	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) exit_curses (int) GCC_NORETURN;$/;"	p	typeref:typename:void
ext_color	/usr/include/curses.h	/^    int		ext_color;	\/* color pair, must be more than 16-bits *\/$/;"	m	struct:__anon9db876bb0108	typeref:typename:int
extended_color_content	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) extended_color_content(int, int *, int *, int *);$/;"	p	typeref:typename:int
extended_pair_content	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) extended_pair_content(int, int *, int *);$/;"	p	typeref:typename:int
extended_slk_color	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) extended_slk_color(int);$/;"	p	typeref:typename:int
f	src/display.c	/^void display_fbuf_cursor(fbuf_t *f)$/;"	z	function:display_fbuf_cursor	typeref:typename:fbuf_t *	file:
f	src/display.c	/^void display_fbuf_lines(fbuf_t *f)$/;"	z	function:display_fbuf_lines	typeref:typename:fbuf_t *	file:
f	src/fbuf/bufs.c	/^void bufs_fbufs_append(bufs_t *b, fbuf_t *f)$/;"	z	function:bufs_fbufs_append	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbaux.c	/^int fbaux_col(fbuf_t *f)$/;"	z	function:fbaux_col	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbaux.c	/^int fbaux_nlines(fbuf_t *f)$/;"	z	function:fbaux_nlines	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbaux.c	/^int fbaux_row(fbuf_t *f)$/;"	z	function:fbaux_row	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbaux.c	/^line_t *fbaux_cur_line(fbuf_t *f)$/;"	z	function:fbaux_cur_line	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbaux.c	/^line_t *fbaux_line(fbuf_t *f, int line_nr)$/;"	z	function:fbaux_line	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbaux.c	/^line_t *fbaux_next_line(fbuf_t *f)$/;"	z	function:fbaux_next_line	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbaux.c	/^line_t *fbaux_prev_line(fbuf_t *f)$/;"	z	function:fbaux_prev_line	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbinp.c	/^void fbinp_backspace(fbuf_t *f)$/;"	z	function:fbinp_backspace	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbinp.c	/^void fbinp_delete(fbuf_t *f)$/;"	z	function:fbinp_delete	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbinp.c	/^void fbinp_down(fbuf_t *f)$/;"	z	function:fbinp_down	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbinp.c	/^void fbinp_end(fbuf_t *f)$/;"	z	function:fbinp_end	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbinp.c	/^void fbinp_enter(fbuf_t *f)$/;"	z	function:fbinp_enter	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbinp.c	/^void fbinp_home(fbuf_t *f)$/;"	z	function:fbinp_home	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbinp.c	/^void fbinp_insert_char(fbuf_t *f, char c)$/;"	z	function:fbinp_insert_char	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbinp.c	/^void fbinp_left(fbuf_t *f)$/;"	z	function:fbinp_left	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbinp.c	/^void fbinp_pgdn(fbuf_t *f)$/;"	z	function:fbinp_pgdn	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbinp.c	/^void fbinp_pgup(fbuf_t *f)$/;"	z	function:fbinp_pgup	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbinp.c	/^void fbinp_right(fbuf_t *f)$/;"	z	function:fbinp_right	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbinp.c	/^void fbinp_up(fbuf_t *f)$/;"	z	function:fbinp_up	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbio.c	/^fbuf_t *fbuf_fork(fbuf_t *f, WINDOW *w, int id)$/;"	z	function:fbuf_fork	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbio.c	/^int fbuf_link(fbuf_t *f, char *fpath)$/;"	z	function:fbuf_link	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbio.c	/^int fbuf_openfd(fbuf_t *f)$/;"	z	function:fbuf_openfd	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbio.c	/^int fbuf_write(fbuf_t *f)$/;"	z	function:fbuf_write	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbio.c	/^void fbuf_free(fbuf_t *f)$/;"	z	function:fbuf_free	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbio.c	/^void fbuf_free_vdata(void *f)$/;"	z	function:fbuf_free_vdata	typeref:typename:void *	file:
f	src/fbuf/fbio.c	/^void fbuf_reset(fbuf_t *f)$/;"	z	function:fbuf_reset	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbio.c	/^void fbuf_reset_most(fbuf_t *f)$/;"	z	function:fbuf_reset_most	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbuf.c	/^bool fbufs_delete_fbuf(fbufs_t *fs, fbuf_t *f)$/;"	z	function:fbufs_delete_fbuf	typeref:typename:fbuf_t *	file:
f	src/fbuf/fbuf.c	/^int fbufs_append(fbufs_t *fs, fbuf_t *f)$/;"	z	function:fbufs_append	typeref:typename:fbuf_t *	file:
f	src/lines.c	/^int lines_from_file_aux(FILE *f, lines_t *lines, char *linebuf, int linesz, int tabsz)$/;"	z	function:lines_from_file_aux	typeref:typename:FILE *	file:
f	src/lines.c	/^lines_t *lines_from_fstream(FILE *f, int tabsz)$/;"	z	function:lines_from_fstream	typeref:typename:FILE *	file:
f1	src/fbuf/fbuf.c	/^bool fbuf_match_vdata(void *f1, void *f2)$/;"	z	function:fbuf_match_vdata	typeref:typename:void *	file:
f2	src/fbuf/fbuf.c	/^bool fbuf_match_vdata(void *f1, void *f2)$/;"	z	function:fbuf_match_vdata	typeref:typename:void *	file:
fb_cursor	src/fbuf/fbuf.h	/^	cursor_t fb_cursor;$/;"	m	struct:file_buffer	typeref:typename:cursor_t
fb_filepath	src/fbuf/fbuf.h	/^	char *fb_filepath;  \/\/ Path to currently open file.$/;"	m	struct:file_buffer	typeref:typename:char *
fb_id	src/fbuf/fbuf.h	/^	int fb_id;$/;"	m	struct:file_buffer	typeref:typename:int
fb_lines	src/fbuf/fbuf.h	/^	lines_t *fb_lines;  \/\/ Buffer of open file.$/;"	m	struct:file_buffer	typeref:typename:lines_t *
fb_tabsz	src/fbuf/fbuf.h	/^	int fb_tabsz;$/;"	m	struct:file_buffer	typeref:typename:int
fb_unsaved_edit	src/fbuf/fbuf.h	/^	bool fb_unsaved_edit;$/;"	m	struct:file_buffer	typeref:typename:bool
fb_view	src/fbuf/fbuf.h	/^	view_t fb_view;  \/\/ What the user sees.$/;"	m	struct:file_buffer	typeref:typename:view_t
fbaux_col	src/fbuf/fbaux.c	/^int fbaux_col(fbuf_t *f)$/;"	f	typeref:typename:int
fbaux_col	src/fbuf/fbaux.h	/^int fbaux_col(fbuf_t *f);$/;"	p	typeref:typename:int
fbaux_cur_line	src/fbuf/fbaux.c	/^line_t *fbaux_cur_line(fbuf_t *f)$/;"	f	typeref:typename:line_t *
fbaux_cur_line	src/fbuf/fbaux.h	/^line_t *fbaux_cur_line(fbuf_t *f);$/;"	p	typeref:typename:line_t *
fbaux_line	src/fbuf/fbaux.c	/^line_t *fbaux_line(fbuf_t *f, int line_nr)$/;"	f	typeref:typename:line_t *
fbaux_line	src/fbuf/fbaux.h	/^line_t *fbaux_line(fbuf_t *f, int line_nr);$/;"	p	typeref:typename:line_t *
fbaux_next_line	src/fbuf/fbaux.c	/^line_t *fbaux_next_line(fbuf_t *f)$/;"	f	typeref:typename:line_t *
fbaux_next_line	src/fbuf/fbaux.h	/^line_t *fbaux_next_line(fbuf_t *f);$/;"	p	typeref:typename:line_t *
fbaux_nlines	src/fbuf/fbaux.c	/^int fbaux_nlines(fbuf_t *f)$/;"	f	typeref:typename:int
fbaux_nlines	src/fbuf/fbaux.h	/^int fbaux_nlines(fbuf_t *f);$/;"	p	typeref:typename:int
fbaux_prev_line	src/fbuf/fbaux.c	/^line_t *fbaux_prev_line(fbuf_t *f)$/;"	f	typeref:typename:line_t *
fbaux_prev_line	src/fbuf/fbaux.h	/^line_t *fbaux_prev_line(fbuf_t *f);$/;"	p	typeref:typename:line_t *
fbaux_row	src/fbuf/fbaux.c	/^int fbaux_row(fbuf_t *f)$/;"	f	typeref:typename:int
fbaux_row	src/fbuf/fbaux.h	/^int fbaux_row(fbuf_t *f);$/;"	p	typeref:typename:int
fbinp_backspace	src/fbuf/fbinp.c	/^void fbinp_backspace(fbuf_t *f)$/;"	f	typeref:typename:void
fbinp_delete	src/fbuf/fbinp.c	/^void fbinp_delete(fbuf_t *f)$/;"	f	typeref:typename:void
fbinp_down	src/fbuf/fbinp.c	/^void fbinp_down(fbuf_t *f)$/;"	f	typeref:typename:void
fbinp_end	src/fbuf/fbinp.c	/^void fbinp_end(fbuf_t *f)$/;"	f	typeref:typename:void
fbinp_enter	src/fbuf/fbinp.c	/^void fbinp_enter(fbuf_t *f)$/;"	f	typeref:typename:void
fbinp_esc	src/fbuf/fbinp.c	/^void fbinp_esc(bufs_t *b)$/;"	f	typeref:typename:void
fbinp_handle_char	src/fbuf/fbinp.c	/^void fbinp_handle_char(bufs_t *b, int c)$/;"	f	typeref:typename:void
fbinp_handle_char	src/fbuf/fbinp.h	/^void fbinp_handle_char(bufs_t *b, int c);$/;"	p	typeref:typename:void
fbinp_handle_reg_char	src/fbuf/fbinp.c	/^void fbinp_handle_reg_char(bufs_t *b, int c)$/;"	f	typeref:typename:void
fbinp_handle_seq_char	src/fbuf/fbinp.c	/^void fbinp_handle_seq_char(bufs_t *b, int c)$/;"	f	typeref:typename:void
fbinp_home	src/fbuf/fbinp.c	/^void fbinp_home(fbuf_t *f)$/;"	f	typeref:typename:void
fbinp_insert_char	src/fbuf/fbinp.c	/^void fbinp_insert_char(fbuf_t *f, char c)$/;"	f	typeref:typename:void
fbinp_left	src/fbuf/fbinp.c	/^void fbinp_left(fbuf_t *f)$/;"	f	typeref:typename:void
fbinp_pgdn	src/fbuf/fbinp.c	/^void fbinp_pgdn(fbuf_t *f)$/;"	f	typeref:typename:void
fbinp_pgup	src/fbuf/fbinp.c	/^void fbinp_pgup(fbuf_t *f)$/;"	f	typeref:typename:void
fbinp_right	src/fbuf/fbinp.c	/^void fbinp_right(fbuf_t *f)$/;"	f	typeref:typename:void
fbinp_up	src/fbuf/fbinp.c	/^void fbinp_up(fbuf_t *f)$/;"	f	typeref:typename:void
fbuf_fork	src/fbuf/fbio.c	/^fbuf_t *fbuf_fork(fbuf_t *f, WINDOW *w, int id)$/;"	f	typeref:typename:fbuf_t *
fbuf_fork	src/fbuf/fbio.h	/^fbuf_t *fbuf_fork(fbuf_t *f, WINDOW *w, int id);$/;"	p	typeref:typename:fbuf_t *
fbuf_free	src/fbuf/fbio.c	/^void fbuf_free(fbuf_t *f)$/;"	f	typeref:typename:void
fbuf_free	src/fbuf/fbio.h	/^void fbuf_free(fbuf_t *f);$/;"	p	typeref:typename:void
fbuf_free_vdata	src/fbuf/fbio.c	/^void fbuf_free_vdata(void *f)$/;"	f	typeref:typename:void
fbuf_init	src/fbuf/fbio.c	/^fbuf_t *fbuf_init(WINDOW *w, int tabsz, int id)$/;"	f	typeref:typename:fbuf_t *
fbuf_link	src/fbuf/fbio.c	/^int fbuf_link(fbuf_t *f, char *fpath)$/;"	f	typeref:typename:int
fbuf_link	src/fbuf/fbio.h	/^int fbuf_link(fbuf_t *f, char *fpath);$/;"	p	typeref:typename:int
fbuf_match_vdata	src/fbuf/fbuf.c	/^bool fbuf_match_vdata(void *f1, void *f2)$/;"	f	typeref:typename:bool
fbuf_new	src/fbuf/fbio.c	/^fbuf_t *fbuf_new(WINDOW *w, int tabsz, int id)$/;"	f	typeref:typename:fbuf_t *
fbuf_new	src/fbuf/fbio.h	/^fbuf_t *fbuf_new(WINDOW *w, int tabsz, int id);$/;"	p	typeref:typename:fbuf_t *
fbuf_open	src/fbuf/fbio.c	/^fbuf_t *fbuf_open(char *fpath, WINDOW *w, int tabsz, int id)$/;"	f	typeref:typename:fbuf_t *
fbuf_open	src/fbuf/fbio.h	/^fbuf_t *fbuf_open(char *fpath, WINDOW *w, int tabsz, int id);$/;"	p	typeref:typename:fbuf_t *
fbuf_openfd	src/fbuf/fbio.c	/^int fbuf_openfd(fbuf_t *f)$/;"	f	typeref:typename:int
fbuf_reset	src/fbuf/fbio.c	/^void fbuf_reset(fbuf_t *f)$/;"	f	typeref:typename:void
fbuf_reset_most	src/fbuf/fbio.c	/^void fbuf_reset_most(fbuf_t *f)$/;"	f	typeref:typename:void
fbuf_t	src/fbuf/fbuf.h	/^typedef struct file_buffer fbuf_t;$/;"	t	typeref:struct:file_buffer
fbuf_write	src/fbuf/fbio.c	/^int fbuf_write(fbuf_t *f)$/;"	f	typeref:typename:int
fbuf_write	src/fbuf/fbio.h	/^int fbuf_write(fbuf_t *f);$/;"	p	typeref:typename:int
fbufs_append	src/fbuf/fbuf.c	/^int fbufs_append(fbufs_t *fs, fbuf_t *f)$/;"	f	typeref:typename:int
fbufs_append	src/fbuf/fbuf.h	/^int fbufs_append(fbufs_t *fs, fbuf_t *f);$/;"	p	typeref:typename:int
fbufs_delete_fbuf	src/fbuf/fbuf.c	/^bool fbufs_delete_fbuf(fbufs_t *fs, fbuf_t *f)$/;"	f	typeref:typename:bool
fbufs_delete_fbuf	src/fbuf/fbuf.h	/^bool fbufs_delete_fbuf(fbufs_t *fs, fbuf_t *f);$/;"	p	typeref:typename:bool
fbufs_free	src/fbuf/fbio.c	/^void fbufs_free(fbufs_t *fs)$/;"	f	typeref:typename:void
fbufs_free	src/fbuf/fbio.h	/^void fbufs_free(fbufs_t *fs);$/;"	p	typeref:typename:void
fbufs_get	src/fbuf/fbuf.c	/^fbuf_t *fbufs_get(fbufs_t *fs, int i)$/;"	f	typeref:typename:fbuf_t *
fbufs_get	src/fbuf/fbuf.h	/^fbuf_t *fbufs_get(fbufs_t *fs, int i);$/;"	p	typeref:typename:fbuf_t *
fbufs_len	src/fbuf/fbuf.c	/^int fbufs_len(fbufs_t *fs)$/;"	f	typeref:typename:int
fbufs_len	src/fbuf/fbuf.h	/^int fbufs_len(fbufs_t *fs);$/;"	p	typeref:typename:int
fbufs_t	src/fbuf/fbuf.h	/^typedef dlist_t fbufs_t;$/;"	t	typeref:typename:dlist_t
fcmd_close	src/cmd/fcmd.c	/^cmd_t *fcmd_close(void)$/;"	f	typeref:typename:cmd_t *
fcmd_close	src/cmd/fcmd.h	/^cmd_t *fcmd_close(void);$/;"	p	typeref:typename:cmd_t *
fcmd_close_handler	src/cmd/fcmd.c	/^char *fcmd_close_handler(char *s, bufs_t *b, WINDOW *w)$/;"	f	typeref:typename:char *
fcmd_edit	src/cmd/fcmd.c	/^cmd_t *fcmd_edit(void)$/;"	f	typeref:typename:cmd_t *
fcmd_edit	src/cmd/fcmd.h	/^cmd_t *fcmd_edit(void);$/;"	p	typeref:typename:cmd_t *
fcmd_edit_handler	src/cmd/fcmd.c	/^char *fcmd_edit_handler(char *fpath, bufs_t *b, WINDOW *w)$/;"	f	typeref:typename:char *
fcmd_fclose	src/cmd/fcmd.c	/^cmd_t *fcmd_fclose(void)$/;"	f	typeref:typename:cmd_t *
fcmd_fclose	src/cmd/fcmd.h	/^cmd_t *fcmd_fclose(void);$/;"	p	typeref:typename:cmd_t *
fcmd_fclose_handler	src/cmd/fcmd.c	/^char *fcmd_fclose_handler(char *s, bufs_t *b, WINDOW *w)$/;"	f	typeref:typename:char *
fcmd_jump	src/cmd/fcmd.c	/^cmd_t *fcmd_jump(void)$/;"	f	typeref:typename:cmd_t *
fcmd_jump	src/cmd/fcmd.h	/^cmd_t *fcmd_jump(void);$/;"	p	typeref:typename:cmd_t *
fcmd_jump_handler	src/cmd/fcmd.c	/^char *fcmd_jump_handler(char *sid, bufs_t *b, WINDOW *w)$/;"	f	typeref:typename:char *
fcmd_open	src/cmd/fcmd.c	/^cmd_t *fcmd_open(void)$/;"	f	typeref:typename:cmd_t *
fcmd_open	src/cmd/fcmd.h	/^cmd_t *fcmd_open(void);$/;"	p	typeref:typename:cmd_t *
fcmd_open_handler	src/cmd/fcmd.c	/^char *fcmd_open_handler(char *fpath, bufs_t *b, WINDOW *w)$/;"	f	typeref:typename:char *
fcmd_write	src/cmd/fcmd.c	/^cmd_t *fcmd_write(void)$/;"	f	typeref:typename:cmd_t *
fcmd_write	src/cmd/fcmd.h	/^cmd_t *fcmd_write(void);$/;"	p	typeref:typename:cmd_t *
fcmd_write_handle	src/cmd/fcmd.c	/^char *fcmd_write_handle(bufs_t *b)$/;"	f	typeref:typename:char *
fcmd_write_handle_new	src/cmd/fcmd.c	/^char *fcmd_write_handle_new(bufs_t *b, char *fpath)$/;"	f	typeref:typename:char *
fcmd_write_handle_other	src/cmd/fcmd.c	/^char *fcmd_write_handle_other(bufs_t *b, char *fpath, WINDOW *w)$/;"	f	typeref:typename:char *
fcmd_write_handler	src/cmd/fcmd.c	/^char *fcmd_write_handler(char *fpath, bufs_t *b, WINDOW *w)$/;"	f	typeref:typename:char *
fd	/usr/include/curses.h	/^	    int fd;$/;"	m	struct:__anon9db876bb0208::__anon9db876bb030a::__anon9db876bb0408	typeref:typename:int
fd	src/lines.c	/^int lines_write(lines_t *ls, int tabsz, int fd)$/;"	z	function:lines_write	typeref:typename:int	file:
fd	src/lines.c	/^lines_t *lines_from_fd(int fd, int tabsz)$/;"	z	function:lines_from_fd	typeref:typename:int	file:
fev	/usr/include/curses.h	/^	} fev;				\/* _NC_EVENT_FILE *\/$/;"	m	union:__anon9db876bb0208::__anon9db876bb030a	typeref:struct:__anon9db876bb0208::__anon9db876bb030a::__anon9db876bb0408
file_buffer	src/fbuf/fbuf.h	/^struct file_buffer {$/;"	s
filled	/usr/include/search.h	/^    unsigned int filled;$/;"	m	struct:hsearch_data	typeref:typename:unsigned int
filter	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) filter (void);				\/* implemented *\/$/;"	p	typeref:typename:void
find_pair	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) find_pair (int, int);$/;"	p	typeref:typename:int
first_col	src/display.c	/^void display_fbuf_line(line_t *l, int i, int first_col, int view_width, $/;"	z	function:display_fbuf_line	typeref:typename:int	file:
first_col_offset	src/view.c	/^	       int first_col_offset, int last_col_offset)$/;"	z	function:view_init	typeref:typename:int	file:
fixterm	/usr/include/curses.h	/^#define fixterm(/;"	d
flags	/usr/include/curses.h	/^	    unsigned int flags;$/;"	m	struct:__anon9db876bb0208::__anon9db876bb030a::__anon9db876bb0408	typeref:typename:unsigned int
flash	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) flash (void);				\/* implemented *\/$/;"	p	typeref:typename:int
flushinp	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) flushinp (void);				\/* implemented *\/$/;"	p	typeref:typename:int
fmt	src/chrp.c	/^static int strlenf(char *fmt, va_list args)$/;"	z	function:strlenf	typeref:typename:char *	file:
format	src/chrp.c	/^char *chrpprintf(char *format, ...)$/;"	z	function:chrpprintf	typeref:typename:char *	file:
fpath	src/cmd/fcmd.c	/^char *fcmd_edit_handler(char *fpath, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_edit_handler	typeref:typename:char *	file:
fpath	src/cmd/fcmd.c	/^char *fcmd_open_handler(char *fpath, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_open_handler	typeref:typename:char *	file:
fpath	src/cmd/fcmd.c	/^char *fcmd_write_handle_new(bufs_t *b, char *fpath)$/;"	z	function:fcmd_write_handle_new	typeref:typename:char *	file:
fpath	src/cmd/fcmd.c	/^char *fcmd_write_handle_other(bufs_t *b, char *fpath, WINDOW *w)$/;"	z	function:fcmd_write_handle_other	typeref:typename:char *	file:
fpath	src/cmd/fcmd.c	/^char *fcmd_write_handler(char *fpath, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_write_handler	typeref:typename:char *	file:
fpath	src/fbuf/bufs.c	/^int bufs_edit(bufs_t *b, char *fpath)$/;"	z	function:bufs_edit	typeref:typename:char *	file:
fpath	src/fbuf/bufs.c	/^int bufs_link_write(bufs_t *b, char *fpath)$/;"	z	function:bufs_link_write	typeref:typename:char *	file:
fpath	src/fbuf/bufs.c	/^int bufs_open(bufs_t *b, char *fpath, WINDOW *w, int tabsz)$/;"	z	function:bufs_open	typeref:typename:char *	file:
fpath	src/fbuf/bufs.c	/^int bufs_write_other(bufs_t *b, char *fpath, WINDOW *w, int tabsz)$/;"	z	function:bufs_write_other	typeref:typename:char *	file:
fpath	src/fbuf/fbio.c	/^fbuf_t *fbuf_open(char *fpath, WINDOW *w, int tabsz, int id)$/;"	z	function:fbuf_open	typeref:typename:char *	file:
fpath	src/fbuf/fbio.c	/^int fbuf_link(fbuf_t *f, char *fpath)$/;"	z	function:fbuf_link	typeref:typename:char *	file:
fpath	src/lines.c	/^lines_t *lines_from_file(char *fpath, int tabsz)$/;"	z	function:lines_from_file	typeref:typename:char *	file:
fpaths	src/fbuf/bufs.c	/^void bufs_init(bufs_t *b, WINDOW *w, char *fpaths[], int nfpaths)$/;"	z	function:bufs_init	typeref:typename:char * []	file:
fpaths	src/tedata.c	/^int tedata_init(tedata_t *t, char *fpaths[], int nfpaths)$/;"	z	function:tedata_init	typeref:typename:char * []	file:
fpaths	src/tedit.c	/^void tedit_start(char *fpaths[], int nfpaths)$/;"	z	function:tedit_start	typeref:typename:char * []	file:
free_elem	src/ds/slist.c	/^void slist_free(slist_t *s, void (*free_elem)(void *))$/;"	z	function:slist_free	typeref:typename:void (*)(void *)	file:
free_pair	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) free_pair (int);$/;"	p	typeref:typename:int
fs	src/cmd/acmd.c	/^char *lsstr(fbufs_t *fs, fbuf_t *active_fbuf)$/;"	z	function:lsstr	typeref:typename:fbufs_t *	file:
fs	src/cmd/acmd.c	/^int lslen(fbufs_t *fs)$/;"	z	function:lslen	typeref:typename:fbufs_t *	file:
fs	src/fbuf/fbio.c	/^void fbufs_free(fbufs_t *fs)$/;"	z	function:fbufs_free	typeref:typename:fbufs_t *	file:
fs	src/fbuf/fbuf.c	/^bool fbufs_delete_fbuf(fbufs_t *fs, fbuf_t *f)$/;"	z	function:fbufs_delete_fbuf	typeref:typename:fbufs_t *	file:
fs	src/fbuf/fbuf.c	/^fbuf_t *fbufs_get(fbufs_t *fs, int i)$/;"	z	function:fbufs_get	typeref:typename:fbufs_t *	file:
fs	src/fbuf/fbuf.c	/^int fbufs_append(fbufs_t *fs, fbuf_t *f)$/;"	z	function:fbufs_append	typeref:typename:fbufs_t *	file:
fs	src/fbuf/fbuf.c	/^int fbufs_len(fbufs_t *fs)$/;"	z	function:fbufs_len	typeref:typename:fbufs_t *	file:
func	src/ds/slist.c	/^void slist_for_each(slist_t *s, void (*func)(void *))$/;"	z	function:slist_for_each	typeref:typename:void (*)(void *)	file:
get_escdelay	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) get_escdelay (void);$/;"	p	typeref:typename:int
get_wch	/usr/include/curses.h	/^#define get_wch(/;"	d
get_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) get_wch (wint_t *);				\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
get_wstr	/usr/include/curses.h	/^#define get_wstr(/;"	d
get_wstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) get_wstr (wint_t *);				\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
getattrs	/usr/include/curses.h	/^#define getattrs(/;"	d
getattrs	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getattrs (const WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
getbegx	/usr/include/curses.h	/^#define getbegx(/;"	d
getbegx	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getbegx (const WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
getbegy	/usr/include/curses.h	/^#define getbegy(/;"	d
getbegy	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getbegy (const WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
getbegyx	/usr/include/curses.h	/^#define getbegyx(/;"	d
getbkgd	/usr/include/curses.h	/^#define getbkgd(/;"	d
getbkgd	/usr/include/curses.h	/^extern NCURSES_EXPORT(chtype) getbkgd (WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:chtype
getbkgrnd	/usr/include/curses.h	/^#define getbkgrnd(/;"	d
getbkgrnd	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getbkgrnd (cchar_t *);			\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
getcchar	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getcchar (const cchar_t *, wchar_t*, attr_t*, NCURSES_PAIRS_T*, void*/;"	p	typeref:typename:int
getch	/usr/include/curses.h	/^#define getch(/;"	d
getch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getch (void);				\/* generated *\/$/;"	p	typeref:typename:int
getcurx	/usr/include/curses.h	/^#define getcurx(/;"	d
getcurx	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getcurx (const WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
getcury	/usr/include/curses.h	/^#define getcury(/;"	d
getcury	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getcury (const WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
getmaxx	/usr/include/curses.h	/^#define getmaxx(/;"	d
getmaxx	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getmaxx (const WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
getmaxy	/usr/include/curses.h	/^#define getmaxy(/;"	d
getmaxy	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getmaxy (const WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
getmaxyx	/usr/include/curses.h	/^#define getmaxyx(/;"	d
getmouse	/usr/include/curses.h	/^extern NCURSES_EXPORT(int)     getmouse (MEVENT *);$/;"	p	typeref:typename:int
getn_wstr	/usr/include/curses.h	/^#define getn_wstr(/;"	d
getn_wstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getn_wstr (wint_t *, int);			\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
getnstr	/usr/include/curses.h	/^#define getnstr(/;"	d
getnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getnstr (char *, int);			\/* generated *\/$/;"	p	typeref:typename:int
getparx	/usr/include/curses.h	/^#define getparx(/;"	d
getparx	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getparx (const WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
getpary	/usr/include/curses.h	/^#define getpary(/;"	d
getpary	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getpary (const WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
getparyx	/usr/include/curses.h	/^#define getparyx(/;"	d
getstr	/usr/include/curses.h	/^#define getstr(/;"	d
getstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) getstr (char *);				\/* generated *\/$/;"	p	typeref:typename:int
getsyx	/usr/include/curses.h	/^#define getsyx(/;"	d
gettmode	/usr/include/curses.h	/^#define gettmode(/;"	d
getwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(WINDOW *) getwin (FILE *);			\/* implemented *\/$/;"	p	typeref:typename:WINDOW *
getyx	/usr/include/curses.h	/^#define getyx(/;"	d
halfdelay	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) halfdelay (int);				\/* implemented *\/$/;"	p	typeref:typename:int
handler	src/cmd/cmd.c	/^cmd_t *cmd_init(char *short_name, char *long_name, char *(*handler)(char *, bufs_t *, WINDOW *))$/;"	z	function:cmd_init	typeref:typename:char * (*)(char *,bufs_t *,WINDOW *)	file:
has_colors	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) has_colors (void);				\/* implemented *\/$/;"	p	typeref:typename:bool
has_ic	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) has_ic (void);				\/* implemented *\/$/;"	p	typeref:typename:bool
has_il	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) has_il (void);				\/* implemented *\/$/;"	p	typeref:typename:bool
has_key	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) has_key (int);		\/* do we have given key? *\/$/;"	p	typeref:typename:int
has_mouse	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool)    has_mouse(void);$/;"	p	typeref:typename:bool
hcreate	/usr/include/search.h	/^extern int hcreate (size_t __nel) __THROW;$/;"	p	typeref:typename:int
hcreate_r	/usr/include/search.h	/^extern int hcreate_r (size_t __nel, struct hsearch_data *__htab) __THROW;$/;"	p	typeref:typename:int
hdestroy	/usr/include/search.h	/^extern void hdestroy (void) __THROW;$/;"	p	typeref:typename:void
hdestroy_r	/usr/include/search.h	/^extern void hdestroy_r (struct hsearch_data *__htab) __THROW;$/;"	p	typeref:typename:void
hline	/usr/include/curses.h	/^#define hline(/;"	d
hline	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) hline (chtype, int);				\/* generated *\/$/;"	p	typeref:typename:int
hline_set	/usr/include/curses.h	/^#define hline_set(/;"	d
hline_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) hline_set (const cchar_t *, int);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
hsearch	/usr/include/search.h	/^extern ENTRY *hsearch (ENTRY __item, ACTION __action) __THROW;$/;"	p	typeref:typename:ENTRY *
hsearch_data	/usr/include/search.h	/^struct hsearch_data$/;"	s
hsearch_r	/usr/include/search.h	/^extern int hsearch_r (ENTRY __item, ACTION __action, ENTRY **__retval,$/;"	p	typeref:typename:int
htbl	src/cmd/cmds.h	/^	struct hsearch_data *htbl;  \/\/ Hash table for O(1) lookup of a command.$/;"	m	struct:commands	typeref:struct:hsearch_data *
i	src/display.c	/^void display_fbuf_line(line_t *l, int i, int first_col, int view_width, $/;"	z	function:display_fbuf_line	typeref:typename:int	file:
i	src/fbuf/fbuf.c	/^fbuf_t *fbufs_get(fbufs_t *fs, int i)$/;"	z	function:fbufs_get	typeref:typename:int	file:
i	src/tab.c	/^int str_insert_tab_spaces(str_t *s, int i, int tabsz)$/;"	z	function:str_insert_tab_spaces	typeref:typename:int	file:
i	src/tab.c	/^int tablen(str_t *s, int i)$/;"	z	function:tablen	typeref:typename:int	file:
i	src/tab.c	/^void str_align_tab(str_t *s, int i, int tabsz)$/;"	z	function:str_align_tab	typeref:typename:int	file:
i	src/tab.c	/^void str_delete_tab_spaces(str_t *s, int i)$/;"	z	function:str_delete_tab_spaces	typeref:typename:int	file:
id	/usr/include/curses.h	/^    short id;		\/* ID to distinguish multiple devices *\/$/;"	m	struct:__anon9db876bb0608	typeref:typename:short
id	src/fbuf/bufs.c	/^int bufs_jump(bufs_t *b, int id)$/;"	z	function:bufs_jump	typeref:typename:int	file:
id	src/fbuf/fbio.c	/^fbuf_t *fbuf_fork(fbuf_t *f, WINDOW *w, int id)$/;"	z	function:fbuf_fork	typeref:typename:int	file:
id	src/fbuf/fbio.c	/^fbuf_t *fbuf_init(WINDOW *w, int tabsz, int id)$/;"	z	function:fbuf_init	typeref:typename:int	file:
id	src/fbuf/fbio.c	/^fbuf_t *fbuf_new(WINDOW *w, int tabsz, int id)$/;"	z	function:fbuf_new	typeref:typename:int	file:
id	src/fbuf/fbio.c	/^fbuf_t *fbuf_open(char *fpath, WINDOW *w, int tabsz, int id)$/;"	z	function:fbuf_open	typeref:typename:int	file:
idcok	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) idcok (WINDOW *, bool);			\/* implemented *\/$/;"	p	typeref:typename:void
idlok	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) idlok (WINDOW *, bool);			\/* implemented *\/$/;"	p	typeref:typename:int
immedok	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) immedok (WINDOW *, bool);			\/* implemented *\/$/;"	p	typeref:typename:void
in_wch	/usr/include/curses.h	/^#define in_wch(/;"	d
in_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) in_wch (cchar_t *);				\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
in_wchnstr	/usr/include/curses.h	/^#define in_wchnstr(/;"	d
in_wchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) in_wchnstr (cchar_t *, int);			\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
in_wchstr	/usr/include/curses.h	/^#define in_wchstr(/;"	d
in_wchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) in_wchstr (cchar_t *);			\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
inch	/usr/include/curses.h	/^#define inch(/;"	d
inch	/usr/include/curses.h	/^extern NCURSES_EXPORT(chtype) inch (void);				\/* generated *\/$/;"	p	typeref:typename:chtype
inchnstr	/usr/include/curses.h	/^#define inchnstr(/;"	d
inchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) inchnstr (chtype *, int);			\/* generated *\/$/;"	p	typeref:typename:int
inchstr	/usr/include/curses.h	/^#define inchstr(/;"	d
inchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) inchstr (chtype *);				\/* generated *\/$/;"	p	typeref:typename:int
index	src/ds/dlist.c	/^void dlist_delete_ind(dlist_t *d, int index)$/;"	z	function:dlist_delete_ind	typeref:typename:int	file:
index	src/ds/dlist.c	/^void dlist_insert(dlist_t *d, int index, void *elem)$/;"	z	function:dlist_insert	typeref:typename:int	file:
index	src/ds/slist.c	/^void slist_delete_ind(slist_t *s, int index)$/;"	z	function:slist_delete_ind	typeref:typename:int	file:
index	src/ds/slist.c	/^void slist_insert(slist_t *s, int index, void *elem)$/;"	z	function:slist_insert	typeref:typename:int	file:
index	src/ds/str.c	/^str_t *str_split(str_t *s, int index)$/;"	z	function:str_split	typeref:typename:int	file:
index	src/ds/str.c	/^void str_delete(str_t *s, int index)$/;"	z	function:str_delete	typeref:typename:int	file:
index	src/ds/str.c	/^void str_delete_aux(str_t *s, int index)$/;"	z	function:str_delete_aux	typeref:typename:int	file:
index	src/ds/str.c	/^void str_insert(str_t *s, char c, int index)$/;"	z	function:str_insert	typeref:typename:int	file:
index	src/ds/str.c	/^void str_insert_aux(str_t *s, char c, int index)$/;"	z	function:str_insert_aux	typeref:typename:int	file:
index	src/lines.c	/^void lines_insert(lines_t *ls, int index, line_t *l)$/;"	z	function:lines_insert	typeref:typename:int	file:
init_color	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) init_color (NCURSES_COLOR_T,NCURSES_COLOR_T,NCURSES_COLOR_T,NCURSES_C/;"	p	typeref:typename:int
init_extended_color	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) init_extended_color(int, int, int, int);$/;"	p	typeref:typename:int
init_extended_pair	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) init_extended_pair(int, int, int);$/;"	p	typeref:typename:int
init_pair	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) init_pair (NCURSES_PAIRS_T,NCURSES_COLOR_T,NCURSES_COLOR_T);		\/* imp/;"	p	typeref:typename:int
initscr	/usr/include/curses.h	/^extern NCURSES_EXPORT(WINDOW *) initscr (void);				\/* implemented *\/$/;"	p	typeref:typename:WINDOW *
innstr	/usr/include/curses.h	/^#define innstr(/;"	d
innstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) innstr (char *, int);			\/* generated *\/$/;"	p	typeref:typename:int
innwstr	/usr/include/curses.h	/^#define innwstr(/;"	d
innwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) innwstr (wchar_t *, int);			\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
input_start	src/input.c	/^void input_start(tedata_t *t)$/;"	f	typeref:typename:void
input_start	src/input.h	/^void input_start(tedata_t *t);$/;"	p	typeref:typename:void
ins_nwstr	/usr/include/curses.h	/^#define ins_nwstr(/;"	d
ins_nwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) ins_nwstr (const wchar_t *, int);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
ins_wch	/usr/include/curses.h	/^#define ins_wch(/;"	d
ins_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) ins_wch (const cchar_t *);			\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
ins_wstr	/usr/include/curses.h	/^#define ins_wstr(/;"	d
ins_wstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) ins_wstr (const wchar_t *);			\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
insch	/usr/include/curses.h	/^#define insch(/;"	d
insch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) insch (chtype);				\/* generated *\/$/;"	p	typeref:typename:int
insdelln	/usr/include/curses.h	/^#define insdelln(/;"	d
insdelln	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) insdelln (int);				\/* generated *\/$/;"	p	typeref:typename:int
insertln	/usr/include/curses.h	/^#define insertln(/;"	d
insertln	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) insertln (void);				\/* generated *\/$/;"	p	typeref:typename:int
insnstr	/usr/include/curses.h	/^#define insnstr(/;"	d
insnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) insnstr (const char *, int);			\/* generated *\/$/;"	p	typeref:typename:int
insque	/usr/include/search.h	/^extern void insque (void *__elem, void *__prev) __THROW;$/;"	p	typeref:typename:void
insstr	/usr/include/curses.h	/^#define insstr(/;"	d
insstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) insstr (const char *);			\/* generated *\/$/;"	p	typeref:typename:int
install	Makefile	/^install:$/;"	t
instr	/usr/include/curses.h	/^#define instr(/;"	d
instr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) instr (char *);				\/* generated *\/$/;"	p	typeref:typename:int
intrflush	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) intrflush (WINDOW *,bool);			\/* implemented *\/$/;"	p	typeref:typename:int
inwstr	/usr/include/curses.h	/^#define inwstr(/;"	d
inwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) inwstr (wchar_t *);				\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
is_cleared	/usr/include/curses.h	/^#define is_cleared(/;"	d
is_cleared	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_cleared (const WINDOW *);	\/* generated *\/$/;"	p	typeref:typename:bool
is_idcok	/usr/include/curses.h	/^#define is_idcok(/;"	d
is_idcok	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_idcok (const WINDOW *);		\/* generated *\/$/;"	p	typeref:typename:bool
is_idlok	/usr/include/curses.h	/^#define is_idlok(/;"	d
is_idlok	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_idlok (const WINDOW *);		\/* generated *\/$/;"	p	typeref:typename:bool
is_immedok	/usr/include/curses.h	/^#define is_immedok(/;"	d
is_immedok	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_immedok (const WINDOW *);	\/* generated *\/$/;"	p	typeref:typename:bool
is_keypad	/usr/include/curses.h	/^#define is_keypad(/;"	d
is_keypad	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_keypad (const WINDOW *);		\/* generated *\/$/;"	p	typeref:typename:bool
is_leaveok	/usr/include/curses.h	/^#define is_leaveok(/;"	d
is_leaveok	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_leaveok (const WINDOW *);	\/* generated *\/$/;"	p	typeref:typename:bool
is_linetouched	/usr/include/curses.h	/^#define is_linetouched(/;"	d
is_linetouched	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_linetouched (WINDOW *,int);		\/* implemented *\/$/;"	p	typeref:typename:bool
is_nodelay	/usr/include/curses.h	/^#define is_nodelay(/;"	d
is_nodelay	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_nodelay (const WINDOW *);	\/* generated *\/$/;"	p	typeref:typename:bool
is_notimeout	/usr/include/curses.h	/^#define is_notimeout(/;"	d
is_notimeout	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_notimeout (const WINDOW *);	\/* generated *\/$/;"	p	typeref:typename:bool
is_pad	/usr/include/curses.h	/^#define is_pad(/;"	d
is_pad	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_pad (const WINDOW *);		\/* generated *\/$/;"	p	typeref:typename:bool
is_scrollok	/usr/include/curses.h	/^#define is_scrollok(/;"	d
is_scrollok	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_scrollok (const WINDOW *);	\/* generated *\/$/;"	p	typeref:typename:bool
is_subwin	/usr/include/curses.h	/^#define is_subwin(/;"	d
is_subwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_subwin (const WINDOW *);		\/* generated *\/$/;"	p	typeref:typename:bool
is_syncok	/usr/include/curses.h	/^#define is_syncok(/;"	d
is_syncok	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_syncok (const WINDOW *);		\/* generated *\/$/;"	p	typeref:typename:bool
is_term_resized	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_term_resized (int, int);$/;"	p	typeref:typename:bool
is_wintouched	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) is_wintouched (WINDOW *);			\/* implemented *\/$/;"	p	typeref:typename:bool
isendwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool) isendwin (void);				\/* implemented *\/$/;"	p	typeref:typename:bool
key	/usr/include/search.h	/^    char *key;$/;"	m	struct:entry	typeref:typename:char *
key_defined	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) key_defined (const char *);$/;"	p	typeref:typename:int
key_name	/usr/include/curses.h	/^extern NCURSES_EXPORT(NCURSES_CONST char*) key_name (wchar_t);		\/* implemented *\/$/;"	p	typeref:typename:NCURSES_CONST char *
keybound	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) keybound (int, int);$/;"	p	typeref:typename:char *
keyname	/usr/include/curses.h	/^extern NCURSES_EXPORT(NCURSES_CONST char *) keyname (int);		\/* implemented *\/$/;"	p	typeref:typename:NCURSES_CONST char *
keyok	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) keyok (int, bool);$/;"	p	typeref:typename:int
keypad	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) keypad (WINDOW *,bool);			\/* implemented *\/$/;"	p	typeref:typename:int
killchar	/usr/include/curses.h	/^extern NCURSES_EXPORT(char) killchar (void);				\/* implemented *\/$/;"	p	typeref:typename:char
killwchar	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) killwchar (wchar_t *);			\/* implemented *\/$/;"	p	typeref:typename:int
l	src/display.c	/^void display_fbuf_line(line_t *l, int i, int first_col, int view_width, $/;"	z	function:display_fbuf_line	typeref:typename:line_t *	file:
l	src/line.c	/^int line_len(line_t *l)$/;"	z	function:line_len	typeref:typename:line_t *	file:
l	src/line.c	/^line_t *line_split(line_t *l, int col, int tabsz)$/;"	z	function:line_split	typeref:typename:line_t *	file:
l	src/lines.c	/^line_t *lines_get(lines_t *l, int nr)$/;"	z	function:lines_get	typeref:typename:lines_t *	file:
l	src/lines.c	/^void line_contract_tab_spaces(line_t *l, void *tabsz)$/;"	z	function:line_contract_tab_spaces	typeref:typename:line_t *	file:
l	src/lines.c	/^void line_expand_tab_spaces(line_t *l, void *tabsz)$/;"	z	function:line_expand_tab_spaces	typeref:typename:line_t *	file:
l	src/lines.c	/^void lines_append(lines_t *ls, line_t *l)$/;"	z	function:lines_append	typeref:typename:line_t *	file:
l	src/lines.c	/^void lines_delete(lines_t *l, int nr)$/;"	z	function:lines_delete	typeref:typename:lines_t *	file:
l	src/lines.c	/^void lines_for_each(lines_t *l, void (*line_func)(line_t *, void *), void *data)$/;"	z	function:lines_for_each	typeref:typename:lines_t *	file:
l	src/lines.c	/^void lines_free(lines_t *l)$/;"	z	function:lines_free	typeref:typename:lines_t *	file:
l	src/lines.c	/^void lines_insert(lines_t *ls, int index, line_t *l)$/;"	z	function:lines_insert	typeref:typename:line_t *	file:
l	src/linsert.c	/^line_t *lins_split(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_split	typeref:typename:line_t *	file:
l	src/linsert.c	/^void lins_backspace_reg(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_backspace_reg	typeref:typename:line_t *	file:
l	src/linsert.c	/^void lins_backspace_tab(line_t *l, cursor_t *crs, int tabsz)$/;"	z	function:lins_backspace_tab	typeref:typename:line_t *	file:
l	src/linsert.c	/^void lins_delete_reg(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_delete_reg	typeref:typename:line_t *	file:
l	src/linsert.c	/^void lins_delete_tab(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_delete_tab	typeref:typename:line_t *	file:
l	src/linsert.c	/^void lins_insert_char(line_t *l, cursor_t *crs, char c, int tabsz)$/;"	z	function:lins_insert_char	typeref:typename:line_t *	file:
l	src/linsert.c	/^void lins_insert_reg(line_t *l, cursor_t *crs, char c, int tabsz)$/;"	z	function:lins_insert_reg	typeref:typename:line_t *	file:
l	src/linsert.c	/^void lins_insert_tab(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_insert_tab	typeref:typename:line_t *	file:
l	src/move.c	/^void mv_end(cursor_t *c, line_t *l)$/;"	z	function:mv_end	typeref:typename:line_t *	file:
l	src/move.c	/^void mv_left(cursor_t *crs, line_t *l)$/;"	z	function:mv_left	typeref:typename:line_t *	file:
l	src/move.c	/^void mv_right(cursor_t *crs, line_t *l)$/;"	z	function:mv_right	typeref:typename:line_t *	file:
last_col_offset	src/view.c	/^	       int first_col_offset, int last_col_offset)$/;"	z	function:view_init	typeref:typename:int	file:
leaf	/usr/include/search.h	/^  leaf$/;"	e	enum:__anon6a76e5fc0203
leaveok	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) leaveok (WINDOW *,bool);			\/* implemented *\/$/;"	p	typeref:typename:int
len	src/line.c	/^line_t *line_init(char *str, int len, int tabsz)$/;"	z	function:line_init	typeref:typename:int	file:
len	src/view.c	/^int len_end_ind(int len, int end_offset)$/;"	z	function:len_end_ind	typeref:typename:int	file:
len	src/view.c	/^int len_shrink(int len, int start_offset, int end_offset)$/;"	z	function:len_shrink	typeref:typename:int	file:
len	src/view.c	/^int len_start_ind(int len, int start_offset)$/;"	z	function:len_start_ind	typeref:typename:int	file:
len_end_ind	src/view.c	/^int len_end_ind(int len, int end_offset)$/;"	f	typeref:typename:int
len_shrink	src/view.c	/^int len_shrink(int len, int start_offset, int end_offset)$/;"	f	typeref:typename:int
len_start_ind	src/view.c	/^int len_start_ind(int len, int start_offset)$/;"	f	typeref:typename:int
lfind	/usr/include/search.h	/^extern void *lfind (const void *__key, const void *__base,$/;"	p	typeref:typename:void *
line	src/line.c	/^void line_free_sl(void *line)$/;"	z	function:line_free_sl	typeref:typename:void *	file:
line_contract_tab_spaces	src/lines.c	/^void line_contract_tab_spaces(line_t *l, void *tabsz)$/;"	f	typeref:typename:void
line_expand_tab_spaces	src/lines.c	/^void line_expand_tab_spaces(line_t *l, void *tabsz)$/;"	f	typeref:typename:void
line_free_sl	src/line.c	/^void line_free_sl(void *line)$/;"	f	typeref:typename:void
line_free_sl	src/line.h	/^void line_free_sl(void *line);$/;"	p	typeref:typename:void
line_func	src/lines.c	/^void lines_for_each(lines_t *l, void (*line_func)(line_t *, void *), void *data)$/;"	z	function:lines_for_each	typeref:typename:void (*)(line_t *,void *)	file:
line_init	src/line.c	/^line_t *line_init(char *str, int len, int tabsz)$/;"	f	typeref:typename:line_t *
line_init	src/line.h	/^line_t *line_init(char *s, int n, int tabsz);$/;"	p	typeref:typename:line_t *
line_len	src/line.c	/^int line_len(line_t *l)$/;"	f	typeref:typename:int
line_len	src/line.h	/^int line_len(line_t *l);$/;"	p	typeref:typename:int
line_nr	src/fbuf/fbaux.c	/^line_t *fbaux_line(fbuf_t *f, int line_nr)$/;"	z	function:fbaux_line	typeref:typename:int	file:
line_split	src/line.c	/^line_t *line_split(line_t *l, int col, int tabsz)$/;"	f	typeref:typename:line_t *
line_split	src/line.h	/^line_t *line_split(line_t *l, int col, int tabsz);$/;"	p	typeref:typename:line_t *
line_t	src/line.h	/^typedef str_t line_t;$/;"	t	typeref:typename:str_t
linebuf	src/lines.c	/^int lines_from_file_aux(FILE *f, lines_t *lines, char *linebuf, int linesz, int tabsz)$/;"	z	function:lines_from_file_aux	typeref:typename:char *	file:
linelen	src/view.c	/^void view_sync_crs_col(view_t *v, cursor_t *c, int linelen)$/;"	z	function:view_sync_crs_col	typeref:typename:int	file:
linelen	src/view.c	/^void view_sync_crs_col_leftward(view_t *v, cursor_t *c, int linelen)$/;"	z	function:view_sync_crs_col_leftward	typeref:typename:int	file:
linelen	src/view.c	/^void view_sync_crs_col_rightward(view_t *v, cursor_t *c, int linelen)$/;"	z	function:view_sync_crs_col_rightward	typeref:typename:int	file:
lines	src/lines.c	/^int lines_from_file_aux(FILE *f, lines_t *lines, char *linebuf, int linesz, int tabsz)$/;"	z	function:lines_from_file_aux	typeref:typename:lines_t *	file:
lines_append	src/lines.c	/^void lines_append(lines_t *ls, line_t *l)$/;"	f	typeref:typename:void
lines_append	src/lines.h	/^void lines_append(lines_t *ls, line_t *l);$/;"	p	typeref:typename:void
lines_contract_tab_spaces	src/lines.c	/^void lines_contract_tab_spaces(lines_t *ls, int tabsz)$/;"	f	typeref:typename:void
lines_delete	src/lines.c	/^void lines_delete(lines_t *l, int nr)$/;"	f	typeref:typename:void
lines_delete	src/lines.h	/^void lines_delete(lines_t *l, int nr);$/;"	p	typeref:typename:void
lines_expand_tab_spaces	src/lines.c	/^void lines_expand_tab_spaces(lines_t *ls, int tabsz)$/;"	f	typeref:typename:void
lines_for_each	src/lines.c	/^void lines_for_each(lines_t *l, void (*line_func)(line_t *, void *), void *data)$/;"	f	typeref:typename:void
lines_for_each	src/lines.h	/^void lines_for_each(lines_t *l, void (*line_func)(line_t *, void *), void *data);$/;"	p	typeref:typename:void
lines_fork	src/lines.c	/^lines_t *lines_fork(lines_t *ls)$/;"	f	typeref:typename:lines_t *
lines_fork	src/lines.h	/^lines_t *lines_fork(lines_t *ls);$/;"	p	typeref:typename:lines_t *
lines_free	src/lines.c	/^void lines_free(lines_t *l)$/;"	f	typeref:typename:void
lines_free	src/lines.h	/^void lines_free(lines_t *l);$/;"	p	typeref:typename:void
lines_from_fd	src/lines.c	/^lines_t *lines_from_fd(int fd, int tabsz)$/;"	f	typeref:typename:lines_t *
lines_from_fd	src/lines.h	/^lines_t *lines_from_fd(int fd, int tabsz);$/;"	p	typeref:typename:lines_t *
lines_from_file	src/lines.c	/^lines_t *lines_from_file(char *fpath, int tabsz)$/;"	f	typeref:typename:lines_t *
lines_from_file	src/lines.h	/^lines_t *lines_from_file(char *fpath, int tabsz);$/;"	p	typeref:typename:lines_t *
lines_from_file_aux	src/lines.c	/^int lines_from_file_aux(FILE *f, lines_t *lines, char *linebuf, int linesz, int tabsz)$/;"	f	typeref:typename:int
lines_from_fstream	src/lines.c	/^lines_t *lines_from_fstream(FILE *f, int tabsz)$/;"	f	typeref:typename:lines_t *
lines_get	src/lines.c	/^line_t *lines_get(lines_t *l, int nr)$/;"	f	typeref:typename:line_t *
lines_get	src/lines.h	/^line_t *lines_get(lines_t *l, int nr);$/;"	p	typeref:typename:line_t *
lines_init	src/lines.c	/^lines_t *lines_init(void)$/;"	f	typeref:typename:lines_t *
lines_init	src/lines.h	/^lines_t *lines_init(void);$/;"	p	typeref:typename:lines_t *
lines_insert	src/lines.c	/^void lines_insert(lines_t *ls, int index, line_t *l)$/;"	f	typeref:typename:void
lines_insert	src/lines.h	/^void lines_insert(lines_t *ls, int index, line_t *l);$/;"	p	typeref:typename:void
lines_len	src/lines.c	/^int lines_len(lines_t *ls)$/;"	f	typeref:typename:int
lines_len	src/lines.h	/^int lines_len(lines_t *ls);$/;"	p	typeref:typename:int
lines_t	src/lines.h	/^typedef dlist_t lines_t;$/;"	t	typeref:typename:dlist_t
lines_to_iovec	src/lines.h	/^struct iovec *lines_to_iovec(lines_t *l, int tabsz);$/;"	p	typeref:struct:iovec *
lines_write	src/lines.c	/^int lines_write(lines_t *ls, int tabsz, int fd)$/;"	f	typeref:typename:int
lines_write	src/lines.h	/^int lines_write(lines_t *ls, int tabsz, int fd);$/;"	p	typeref:typename:int
linesz	src/lines.c	/^int lines_from_file_aux(FILE *f, lines_t *lines, char *linebuf, int linesz, int tabsz)$/;"	z	function:lines_from_file_aux	typeref:typename:int	file:
lins_backspace	src/linsert.c	/^bool lins_backspace(line_t *cur, line_t *prev, cursor_t *crs, int tabsz)$/;"	f	typeref:typename:bool
lins_backspace	src/linsert.h	/^bool lins_backspace(line_t *cur, line_t *prev, cursor_t *c, int tabsz);$/;"	p	typeref:typename:bool
lins_backspace_reg	src/linsert.c	/^void lins_backspace_reg(line_t *l, cursor_t *c, int tabsz)$/;"	f	typeref:typename:void
lins_backspace_start	src/linsert.c	/^void lins_backspace_start(line_t *cur, line_t *prev, cursor_t *c, int tabsz)$/;"	f	typeref:typename:void
lins_backspace_tab	src/linsert.c	/^void lins_backspace_tab(line_t *l, cursor_t *crs, int tabsz)$/;"	f	typeref:typename:void
lins_delete	src/linsert.c	/^bool lins_delete(line_t *cur, line_t *next, cursor_t *crs, int tabsz)$/;"	f	typeref:typename:bool
lins_delete	src/linsert.h	/^bool lins_delete(line_t *cur, line_t *next, cursor_t *c, int tabsz);$/;"	p	typeref:typename:bool
lins_delete_newline	src/linsert.c	/^void lins_delete_newline(line_t *cur, line_t *next, int tabsz)$/;"	f	typeref:typename:void
lins_delete_reg	src/linsert.c	/^void lins_delete_reg(line_t *l, cursor_t *c, int tabsz)$/;"	f	typeref:typename:void
lins_delete_tab	src/linsert.c	/^void lins_delete_tab(line_t *l, cursor_t *c, int tabsz)$/;"	f	typeref:typename:void
lins_insert_char	src/linsert.c	/^void lins_insert_char(line_t *l, cursor_t *crs, char c, int tabsz)$/;"	f	typeref:typename:void
lins_insert_char	src/linsert.h	/^void lins_insert_char(line_t *l, cursor_t *crs, char c, int tabsz);$/;"	p	typeref:typename:void
lins_insert_reg	src/linsert.c	/^void lins_insert_reg(line_t *l, cursor_t *crs, char c, int tabsz)$/;"	f	typeref:typename:void
lins_insert_tab	src/linsert.c	/^void lins_insert_tab(line_t *l, cursor_t *c, int tabsz)$/;"	f	typeref:typename:void
lins_linecat	src/linsert.c	/^void lins_linecat(line_t *dest, line_t *src, int tabsz)$/;"	f	typeref:typename:void
lins_split	src/linsert.c	/^line_t *lins_split(line_t *l, cursor_t *c, int tabsz)$/;"	f	typeref:typename:line_t *
lins_split	src/linsert.h	/^line_t *lins_split(line_t *l, cursor_t *c, int tabsz);$/;"	p	typeref:typename:line_t *
long_name	src/cmd/cmd.c	/^cmd_t *cmd_init(char *short_name, char *long_name, char *(*handler)(char *, bufs_t *, WINDOW *))$/;"	z	function:cmd_init	typeref:typename:char *	file:
longname	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) longname (void);				\/* implemented *\/$/;"	p	typeref:typename:char *
ls	src/cursor.c	/^void cursor_add_row(cursor_t *c, int offset, lines_t *ls)$/;"	z	function:cursor_add_row	typeref:typename:lines_t *	file:
ls	src/cursor.c	/^void cursor_set_row(cursor_t *c, int row, lines_t *ls)$/;"	z	function:cursor_set_row	typeref:typename:lines_t *	file:
ls	src/lines.c	/^int lines_len(lines_t *ls)$/;"	z	function:lines_len	typeref:typename:lines_t *	file:
ls	src/lines.c	/^int lines_write(lines_t *ls, int tabsz, int fd)$/;"	z	function:lines_write	typeref:typename:lines_t *	file:
ls	src/lines.c	/^lines_t *lines_fork(lines_t *ls)$/;"	z	function:lines_fork	typeref:typename:lines_t *	file:
ls	src/lines.c	/^void lines_append(lines_t *ls, line_t *l)$/;"	z	function:lines_append	typeref:typename:lines_t *	file:
ls	src/lines.c	/^void lines_contract_tab_spaces(lines_t *ls, int tabsz)$/;"	z	function:lines_contract_tab_spaces	typeref:typename:lines_t *	file:
ls	src/lines.c	/^void lines_expand_tab_spaces(lines_t *ls, int tabsz)$/;"	z	function:lines_expand_tab_spaces	typeref:typename:lines_t *	file:
ls	src/lines.c	/^void lines_insert(lines_t *ls, int index, line_t *l)$/;"	z	function:lines_insert	typeref:typename:lines_t *	file:
ls	src/move.c	/^void mv_down(cursor_t *c, lines_t *ls)$/;"	z	function:mv_down	typeref:typename:lines_t *	file:
ls	src/move.c	/^void mv_up(cursor_t *c, lines_t *ls)$/;"	z	function:mv_up	typeref:typename:lines_t *	file:
ls	src/move.c	/^void mv_view_pgdn(cursor_t *c, lines_t *ls, view_t *v)$/;"	z	function:mv_view_pgdn	typeref:typename:lines_t *	file:
ls	src/move.c	/^void mv_view_pgup(cursor_t *c, lines_t *ls, view_t *v)$/;"	z	function:mv_view_pgup	typeref:typename:lines_t *	file:
ls	src/view.c	/^void view_sync_cursor(view_t *v, cursor_t *c, lines_t *ls)$/;"	z	function:view_sync_cursor	typeref:typename:lines_t *	file:
lsearch	/usr/include/search.h	/^extern void *lsearch (const void *__key, void *__base,$/;"	p	typeref:typename:void *
lslen	src/cmd/acmd.c	/^int lslen(fbufs_t *fs)$/;"	f	typeref:typename:int
lsstr	src/cmd/acmd.c	/^char *lsstr(fbufs_t *fs, fbuf_t *active_fbuf)$/;"	f	typeref:typename:char *
m	src/ds/math.c	/^int max(int n, int m)$/;"	z	function:max	typeref:typename:int	file:
m	src/ds/math.c	/^int max_ind(int n, int m)$/;"	z	function:max_ind	typeref:typename:int	file:
main	src/main.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	test/src/test-assert.c	/^int main(void)$/;"	f	typeref:typename:int
main	test/src/test-mem.c	/^int main(void)$/;"	f	typeref:typename:int
match_func	src/ds/dlist.c	/^bool dlist_delete_elem(dlist_t *d, void *elem, bool (*match_func)(void *, void *))$/;"	z	function:dlist_delete_elem	typeref:typename:bool (*)(void *,void *)	file:
match_func	src/ds/slist.c	/^bool slist_delete_elem(slist_t *s, void *elem, bool (*match_func)(void *, void *))$/;"	z	function:slist_delete_elem	typeref:typename:bool (*)(void *,void *)	file:
match_func	src/ds/slist.c	/^int slist_lookup(slist_t *s, void *target, bool (*match_func)(void *, void *))$/;"	z	function:slist_lookup	typeref:typename:bool (*)(void *,void *)	file:
max	src/ds/math.c	/^int max(int n, int m)$/;"	f	typeref:typename:int
max_ind	src/ds/math.c	/^int max_ind(int n, int m)$/;"	f	typeref:typename:int
mcprint	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mcprint (char *, int);	\/* direct data to printer *\/$/;"	p	typeref:typename:int
meta	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) meta (WINDOW *,bool);			\/* implemented *\/$/;"	p	typeref:typename:int
mmask_t	/usr/include/curses.h	/^typedef uint32_t mmask_t;$/;"	t	typeref:typename:uint32_t
mmask_t	/usr/include/curses.h	/^typedef unsigned mmask_t;$/;"	t	typeref:typename:unsigned
mouse_trafo	/usr/include/curses.h	/^#define mouse_trafo(/;"	d
mouse_trafo	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool)    mouse_trafo (int*, int*, bool);              \/* generated *\/$/;"	p	typeref:typename:bool
mouseinterval	/usr/include/curses.h	/^extern NCURSES_EXPORT(int)     mouseinterval (int);$/;"	p	typeref:typename:int
mousemask	/usr/include/curses.h	/^extern NCURSES_EXPORT(mmask_t) mousemask (mmask_t, mmask_t *);$/;"	p	typeref:typename:mmask_t
move	/usr/include/curses.h	/^#define move(/;"	d
move	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) move (int, int);				\/* generated *\/$/;"	p	typeref:typename:int
mv_down	src/move.c	/^void mv_down(cursor_t *c, lines_t *ls)$/;"	f	typeref:typename:void
mv_down	src/move.h	/^void mv_down(cursor_t *c, lines_t *ls);$/;"	p	typeref:typename:void
mv_end	src/move.c	/^void mv_end(cursor_t *c, line_t *l)$/;"	f	typeref:typename:void
mv_end	src/move.h	/^void mv_end(cursor_t *c, line_t *l);$/;"	p	typeref:typename:void
mv_left	src/move.c	/^void mv_left(cursor_t *crs, line_t *l)$/;"	f	typeref:typename:void
mv_left	src/move.h	/^void mv_left(cursor_t *c, line_t *l);$/;"	p	typeref:typename:void
mv_right	src/move.c	/^void mv_right(cursor_t *crs, line_t *l)$/;"	f	typeref:typename:void
mv_right	src/move.h	/^void mv_right(cursor_t *c, line_t *l);$/;"	p	typeref:typename:void
mv_start	src/move.c	/^void mv_start(cursor_t *c)$/;"	f	typeref:typename:void
mv_start	src/move.h	/^void mv_start(cursor_t *c);$/;"	p	typeref:typename:void
mv_up	src/move.c	/^void mv_up(cursor_t *c, lines_t *ls)$/;"	f	typeref:typename:void
mv_up	src/move.h	/^void mv_up(cursor_t *c, lines_t *ls);$/;"	p	typeref:typename:void
mv_view_pgdn	src/move.c	/^void mv_view_pgdn(cursor_t *c, lines_t *ls, view_t *v)$/;"	f	typeref:typename:void
mv_view_pgdn	src/move.h	/^void mv_view_pgdn(cursor_t *c, lines_t *ls, view_t *v);$/;"	p	typeref:typename:void
mv_view_pgup	src/move.c	/^void mv_view_pgup(cursor_t *c, lines_t *ls, view_t *v)$/;"	f	typeref:typename:void
mv_view_pgup	src/move.h	/^void mv_view_pgup(cursor_t *c, lines_t *ls, view_t *v);$/;"	p	typeref:typename:void
mvadd_wch	/usr/include/curses.h	/^#define mvadd_wch(/;"	d
mvadd_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvadd_wch (int, int, const cchar_t *);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvadd_wchnstr	/usr/include/curses.h	/^#define mvadd_wchnstr(/;"	d
mvadd_wchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvadd_wchnstr (int, int, const cchar_t *, int);\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvadd_wchstr	/usr/include/curses.h	/^#define mvadd_wchstr(/;"	d
mvadd_wchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvadd_wchstr (int, int, const cchar_t *);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvaddch	/usr/include/curses.h	/^#define mvaddch(/;"	d
mvaddch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvaddch (int, int, const chtype);		\/* generated *\/$/;"	p	typeref:typename:int
mvaddchnstr	/usr/include/curses.h	/^#define mvaddchnstr(/;"	d
mvaddchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvaddchnstr (int, int, const chtype *, int);	\/* generated *\/$/;"	p	typeref:typename:int
mvaddchstr	/usr/include/curses.h	/^#define mvaddchstr(/;"	d
mvaddchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvaddchstr (int, int, const chtype *);	\/* generated *\/$/;"	p	typeref:typename:int
mvaddnstr	/usr/include/curses.h	/^#define mvaddnstr(/;"	d
mvaddnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvaddnstr (int, int, const char *, int);	\/* generated *\/$/;"	p	typeref:typename:int
mvaddnwstr	/usr/include/curses.h	/^#define mvaddnwstr(/;"	d
mvaddnwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvaddnwstr (int, int, const wchar_t *, int);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvaddstr	/usr/include/curses.h	/^#define mvaddstr(/;"	d
mvaddstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvaddstr (int, int, const char *);		\/* generated *\/$/;"	p	typeref:typename:int
mvaddwstr	/usr/include/curses.h	/^#define mvaddwstr(/;"	d
mvaddwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvaddwstr (int, int, const wchar_t *);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvchgat	/usr/include/curses.h	/^#define mvchgat(/;"	d
mvchgat	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvchgat (int, int, int, attr_t, NCURSES_PAIRS_T, const void *);	\/* g/;"	p	typeref:typename:int
mvcur	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvcur (int,int,int,int);			\/* implemented *\/$/;"	p	typeref:typename:int
mvdelch	/usr/include/curses.h	/^#define mvdelch(/;"	d
mvdelch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvdelch (int, int);				\/* generated *\/$/;"	p	typeref:typename:int
mvderwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvderwin (WINDOW *, int, int);		\/* implemented *\/$/;"	p	typeref:typename:int
mvget_wch	/usr/include/curses.h	/^#define mvget_wch(/;"	d
mvget_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvget_wch (int, int, wint_t *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvget_wstr	/usr/include/curses.h	/^#define mvget_wstr(/;"	d
mvget_wstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvget_wstr (int, int, wint_t *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvgetch	/usr/include/curses.h	/^#define mvgetch(/;"	d
mvgetch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvgetch (int, int);				\/* generated *\/$/;"	p	typeref:typename:int
mvgetn_wstr	/usr/include/curses.h	/^#define mvgetn_wstr(/;"	d
mvgetn_wstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvgetn_wstr (int, int, wint_t *, int);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvgetnstr	/usr/include/curses.h	/^#define mvgetnstr(/;"	d
mvgetnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvgetnstr (int, int, char *, int);		\/* generated *\/$/;"	p	typeref:typename:int
mvgetstr	/usr/include/curses.h	/^#define mvgetstr(/;"	d
mvgetstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvgetstr (int, int, char *);			\/* generated *\/$/;"	p	typeref:typename:int
mvhline	/usr/include/curses.h	/^#define mvhline(/;"	d
mvhline	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvhline (int, int, chtype, int);		\/* generated *\/$/;"	p	typeref:typename:int
mvhline_set	/usr/include/curses.h	/^#define mvhline_set(/;"	d
mvhline_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvhline_set (int, int, const cchar_t *, int);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvin_wch	/usr/include/curses.h	/^#define mvin_wch(/;"	d
mvin_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvin_wch (int, int, cchar_t *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvin_wchnstr	/usr/include/curses.h	/^#define mvin_wchnstr(/;"	d
mvin_wchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvin_wchnstr (int, int, cchar_t *, int);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvin_wchstr	/usr/include/curses.h	/^#define mvin_wchstr(/;"	d
mvin_wchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvin_wchstr (int, int, cchar_t *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvinch	/usr/include/curses.h	/^#define mvinch(/;"	d
mvinch	/usr/include/curses.h	/^extern NCURSES_EXPORT(chtype) mvinch (int, int);			\/* generated *\/$/;"	p	typeref:typename:chtype
mvinchnstr	/usr/include/curses.h	/^#define mvinchnstr(/;"	d
mvinchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvinchnstr (int, int, chtype *, int);	\/* generated *\/$/;"	p	typeref:typename:int
mvinchstr	/usr/include/curses.h	/^#define mvinchstr(/;"	d
mvinchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvinchstr (int, int, chtype *);		\/* generated *\/$/;"	p	typeref:typename:int
mvinnstr	/usr/include/curses.h	/^#define mvinnstr(/;"	d
mvinnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvinnstr (int, int, char *, int);		\/* generated *\/$/;"	p	typeref:typename:int
mvinnwstr	/usr/include/curses.h	/^#define mvinnwstr(/;"	d
mvinnwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvinnwstr (int, int, wchar_t *, int);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvins_nwstr	/usr/include/curses.h	/^#define mvins_nwstr(/;"	d
mvins_nwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvins_nwstr (int, int, const wchar_t *, int);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvins_wch	/usr/include/curses.h	/^#define mvins_wch(/;"	d
mvins_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvins_wch (int, int, const cchar_t *);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvins_wstr	/usr/include/curses.h	/^#define mvins_wstr(/;"	d
mvins_wstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvins_wstr (int, int, const wchar_t *);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvinsch	/usr/include/curses.h	/^#define mvinsch(/;"	d
mvinsch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvinsch (int, int, chtype);			\/* generated *\/$/;"	p	typeref:typename:int
mvinsnstr	/usr/include/curses.h	/^#define mvinsnstr(/;"	d
mvinsnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvinsnstr (int, int, const char *, int);	\/* generated *\/$/;"	p	typeref:typename:int
mvinsstr	/usr/include/curses.h	/^#define mvinsstr(/;"	d
mvinsstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvinsstr (int, int, const char *);		\/* generated *\/$/;"	p	typeref:typename:int
mvinstr	/usr/include/curses.h	/^#define mvinstr(/;"	d
mvinstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvinstr (int, int, char *);			\/* generated *\/$/;"	p	typeref:typename:int
mvinwstr	/usr/include/curses.h	/^#define mvinwstr(/;"	d
mvinwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvinwstr (int, int, wchar_t *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvprintw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvprintw (int,int, const char *,...)		\/* implemented *\/$/;"	p	typeref:typename:int
mvscanw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvscanw (int,int, const char *,...)		\/* implemented *\/$/;"	p	typeref:typename:int
mvvline	/usr/include/curses.h	/^#define mvvline(/;"	d
mvvline	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvvline (int, int, chtype, int);		\/* generated *\/$/;"	p	typeref:typename:int
mvvline_set	/usr/include/curses.h	/^#define mvvline_set(/;"	d
mvvline_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvvline_set (int, int, const cchar_t *, int);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvwadd_wch	/usr/include/curses.h	/^#define mvwadd_wch(/;"	d
mvwadd_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwadd_wch (WINDOW *, int, int, const cchar_t *);	\/* generated:WIDEC/;"	p	typeref:typename:int
mvwadd_wchnstr	/usr/include/curses.h	/^#define mvwadd_wchnstr(/;"	d
mvwadd_wchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwadd_wchnstr (WINDOW *, int, int, const cchar_t *, int); \/* genera/;"	p	typeref:typename:int
mvwadd_wchstr	/usr/include/curses.h	/^#define mvwadd_wchstr(/;"	d
mvwadd_wchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwadd_wchstr (WINDOW *, int, int, const cchar_t *);	\/* generated:WI/;"	p	typeref:typename:int
mvwaddch	/usr/include/curses.h	/^#define mvwaddch(/;"	d
mvwaddch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwaddch (WINDOW *, int, int, const chtype);	\/* generated *\/$/;"	p	typeref:typename:int
mvwaddchnstr	/usr/include/curses.h	/^#define mvwaddchnstr(/;"	d
mvwaddchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwaddchnstr (WINDOW *, int, int, const chtype *, int);\/* generated /;"	p	typeref:typename:int
mvwaddchstr	/usr/include/curses.h	/^#define mvwaddchstr(/;"	d
mvwaddchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwaddchstr (WINDOW *, int, int, const chtype *);	\/* generated *\/$/;"	p	typeref:typename:int
mvwaddnstr	/usr/include/curses.h	/^#define mvwaddnstr(/;"	d
mvwaddnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwaddnstr (WINDOW *, int, int, const char *, int);	\/* generated *\/$/;"	p	typeref:typename:int
mvwaddnwstr	/usr/include/curses.h	/^#define mvwaddnwstr(/;"	d
mvwaddnwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwaddnwstr (WINDOW *, int, int, const wchar_t *, int);\/* generated:/;"	p	typeref:typename:int
mvwaddstr	/usr/include/curses.h	/^#define mvwaddstr(/;"	d
mvwaddstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwaddstr (WINDOW *, int, int, const char *);	\/* generated *\/$/;"	p	typeref:typename:int
mvwaddwstr	/usr/include/curses.h	/^#define mvwaddwstr(/;"	d
mvwaddwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwaddwstr (WINDOW *, int, int, const wchar_t *);	\/* generated:WIDEC/;"	p	typeref:typename:int
mvwchgat	/usr/include/curses.h	/^#define mvwchgat(/;"	d
mvwchgat	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwchgat (WINDOW *, int, int, int, attr_t, NCURSES_PAIRS_T, const voi/;"	p	typeref:typename:int
mvwdelch	/usr/include/curses.h	/^#define mvwdelch(/;"	d
mvwdelch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwdelch (WINDOW *, int, int);		\/* generated *\/$/;"	p	typeref:typename:int
mvwget_wch	/usr/include/curses.h	/^#define mvwget_wch(/;"	d
mvwget_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwget_wch (WINDOW *, int, int, wint_t *);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvwget_wstr	/usr/include/curses.h	/^#define mvwget_wstr(/;"	d
mvwget_wstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwget_wstr (WINDOW *, int, int, wint_t *);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvwgetch	/usr/include/curses.h	/^#define mvwgetch(/;"	d
mvwgetch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwgetch (WINDOW *, int, int);		\/* generated *\/$/;"	p	typeref:typename:int
mvwgetn_wstr	/usr/include/curses.h	/^#define mvwgetn_wstr(/;"	d
mvwgetn_wstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwgetn_wstr (WINDOW *, int, int, wint_t *, int);\/* generated:WIDEC /;"	p	typeref:typename:int
mvwgetnstr	/usr/include/curses.h	/^#define mvwgetnstr(/;"	d
mvwgetnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwgetnstr (WINDOW *, int, int, char *, int);	\/* generated *\/$/;"	p	typeref:typename:int
mvwgetstr	/usr/include/curses.h	/^#define mvwgetstr(/;"	d
mvwgetstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwgetstr (WINDOW *, int, int, char *);	\/* generated *\/$/;"	p	typeref:typename:int
mvwhline	/usr/include/curses.h	/^#define mvwhline(/;"	d
mvwhline	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwhline (WINDOW *, int, int, chtype, int);	\/* generated *\/$/;"	p	typeref:typename:int
mvwhline_set	/usr/include/curses.h	/^#define mvwhline_set(/;"	d
mvwhline_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwhline_set (WINDOW *, int, int, const cchar_t *, int);\/* generated/;"	p	typeref:typename:int
mvwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwin (WINDOW *,int,int);			\/* implemented *\/$/;"	p	typeref:typename:int
mvwin_wch	/usr/include/curses.h	/^#define mvwin_wch(/;"	d
mvwin_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwin_wch (WINDOW *, int, int, cchar_t *);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvwin_wchnstr	/usr/include/curses.h	/^#define mvwin_wchnstr(/;"	d
mvwin_wchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwin_wchnstr (WINDOW *, int,int, cchar_t *,int);	\/* generated:WIDEC/;"	p	typeref:typename:int
mvwin_wchstr	/usr/include/curses.h	/^#define mvwin_wchstr(/;"	d
mvwin_wchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwin_wchstr (WINDOW *, int, int, cchar_t *);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvwinch	/usr/include/curses.h	/^#define mvwinch(/;"	d
mvwinch	/usr/include/curses.h	/^extern NCURSES_EXPORT(chtype) mvwinch (WINDOW *, int, int);			\/* generated *\/$/;"	p	typeref:typename:chtype
mvwinchnstr	/usr/include/curses.h	/^#define mvwinchnstr(/;"	d
mvwinchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwinchnstr (WINDOW *, int, int, chtype *, int);	\/* generated *\/$/;"	p	typeref:typename:int
mvwinchstr	/usr/include/curses.h	/^#define mvwinchstr(/;"	d
mvwinchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwinchstr (WINDOW *, int, int, chtype *);		\/* generated *\/$/;"	p	typeref:typename:int
mvwinnstr	/usr/include/curses.h	/^#define mvwinnstr(/;"	d
mvwinnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwinnstr (WINDOW *, int, int, char *, int);		\/* generated *\/$/;"	p	typeref:typename:int
mvwinnwstr	/usr/include/curses.h	/^#define mvwinnwstr(/;"	d
mvwinnwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwinnwstr (WINDOW *, int, int, wchar_t *, int);	\/* generated:WIDEC /;"	p	typeref:typename:int
mvwins_nwstr	/usr/include/curses.h	/^#define mvwins_nwstr(/;"	d
mvwins_nwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwins_nwstr (WINDOW *, int,int, const wchar_t *,int); \/* generated:/;"	p	typeref:typename:int
mvwins_wch	/usr/include/curses.h	/^#define mvwins_wch(/;"	d
mvwins_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwins_wch (WINDOW *, int, int, const cchar_t *);	\/* generated:WIDEC/;"	p	typeref:typename:int
mvwins_wstr	/usr/include/curses.h	/^#define mvwins_wstr(/;"	d
mvwins_wstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwins_wstr (WINDOW *, int, int, const wchar_t *);	\/* generated:WIDE/;"	p	typeref:typename:int
mvwinsch	/usr/include/curses.h	/^#define mvwinsch(/;"	d
mvwinsch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwinsch (WINDOW *, int, int, chtype);		\/* generated *\/$/;"	p	typeref:typename:int
mvwinsnstr	/usr/include/curses.h	/^#define mvwinsnstr(/;"	d
mvwinsnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwinsnstr (WINDOW *, int, int, const char *, int);	\/* generated *\/$/;"	p	typeref:typename:int
mvwinsstr	/usr/include/curses.h	/^#define mvwinsstr(/;"	d
mvwinsstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwinsstr (WINDOW *, int, int, const char *);	\/* generated *\/$/;"	p	typeref:typename:int
mvwinstr	/usr/include/curses.h	/^#define mvwinstr(/;"	d
mvwinstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwinstr (WINDOW *, int, int, char *);		\/* generated *\/$/;"	p	typeref:typename:int
mvwinwstr	/usr/include/curses.h	/^#define mvwinwstr(/;"	d
mvwinwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwinwstr (WINDOW *, int, int, wchar_t *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
mvwprintw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwprintw (WINDOW*,int,int, const char *,...)	\/* implemented *\/$/;"	p	typeref:typename:int
mvwscanw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwscanw (WINDOW *,int,int, const char *,...)	\/* implemented *\/$/;"	p	typeref:typename:int
mvwvline	/usr/include/curses.h	/^#define mvwvline(/;"	d
mvwvline	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwvline (WINDOW *,int, int, chtype, int);	\/* generated *\/$/;"	p	typeref:typename:int
mvwvline_set	/usr/include/curses.h	/^#define mvwvline_set(/;"	d
mvwvline_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) mvwvline_set (WINDOW *, int,int, const cchar_t *,int); \/* generated:/;"	p	typeref:typename:int
mygetch	src/getch.c	/^int mygetch(WINDOW *w)$/;"	f	typeref:typename:int
mygetch	src/getch.h	/^int mygetch(WINDOW *w);$/;"	p	typeref:typename:int
n	src/ds/math.c	/^bool prime(int n)$/;"	z	function:prime	typeref:typename:int	file:
n	src/ds/math.c	/^bool prime_naive(int n)$/;"	z	function:prime_naive	typeref:typename:int	file:
n	src/ds/math.c	/^int max(int n, int m)$/;"	z	function:max	typeref:typename:int	file:
n	src/ds/math.c	/^int max_ind(int n, int m)$/;"	z	function:max_ind	typeref:typename:int	file:
n	src/ds/math.c	/^int next_prime(int n)$/;"	z	function:next_prime	typeref:typename:int	file:
n	src/ds/str.c	/^str_t *str_ninit(char *str, int n)$/;"	z	function:str_ninit	typeref:typename:int	file:
n	src/math.c	/^int round_up_pow2(int n)$/;"	z	function:round_up_pow2	typeref:typename:int	file:
name	src/cmd/cmds.c	/^cmd_t *cmds_search(cmds_t *c, char *name)$/;"	z	function:cmds_search	typeref:typename:char *	file:
napms	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) napms (int);					\/* implemented *\/$/;"	p	typeref:typename:int
ndigits	src/ds/math.c	/^int ndigits(int nr)$/;"	f	typeref:typename:int
ndigits	src/math.c	/^int ndigits(int nr)$/;"	f	typeref:typename:int
ndigits	src/math.h	/^int ndigits(int nr);$/;"	p	typeref:typename:int
new_cap	src/ds/dlist.c	/^int dlist_resize(dlist_t *d, int new_cap)$/;"	z	function:dlist_resize	typeref:typename:int	file:
new_cap	src/ds/str.c	/^int str_resize(str_t *s, int new_cap)$/;"	z	function:str_resize	typeref:typename:int	file:
new_prescr	/usr/include/curses.h	/^extern NCURSES_EXPORT(SCREEN *) new_prescr (void); \/* implemented:SP_FUNC *\/$/;"	p	typeref:typename:SCREEN *
newpad	/usr/include/curses.h	/^extern NCURSES_EXPORT(WINDOW *) newpad (int,int);			\/* implemented *\/$/;"	p	typeref:typename:WINDOW *
newscr	/usr/include/curses.h	/^#define newscr /;"	d
newscr	/usr/include/curses.h	/^extern NCURSES_EXPORT_VAR(WINDOW *) newscr;$/;"	x	typeref:typename:NCURSES_EXPORT_VAR (WINDOW *)
newterm	/usr/include/curses.h	/^extern NCURSES_EXPORT(SCREEN *) newterm (const char *,FILE *,FILE *);	\/* implemented *\/$/;"	p	typeref:typename:SCREEN *
newwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(WINDOW *) newwin (int,int,int,int);		\/* implemented *\/$/;"	p	typeref:typename:WINDOW *
next	src/linsert.c	/^bool lins_delete(line_t *cur, line_t *next, cursor_t *crs, int tabsz)$/;"	z	function:lins_delete	typeref:typename:line_t *	file:
next	src/linsert.c	/^void lins_delete_newline(line_t *cur, line_t *next, int tabsz)$/;"	z	function:lins_delete_newline	typeref:typename:line_t *	file:
next_prime	src/ds/math.c	/^int next_prime(int n)$/;"	f	typeref:typename:int
nfpaths	src/fbuf/bufs.c	/^void bufs_init(bufs_t *b, WINDOW *w, char *fpaths[], int nfpaths)$/;"	z	function:bufs_init	typeref:typename:int	file:
nfpaths	src/tedata.c	/^int tedata_init(tedata_t *t, char *fpaths[], int nfpaths)$/;"	z	function:tedata_init	typeref:typename:int	file:
nfpaths	src/tedit.c	/^void tedit_start(char *fpaths[], int nfpaths)$/;"	z	function:tedit_start	typeref:typename:int	file:
nl	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) nl (void);					\/* implemented *\/$/;"	p	typeref:typename:int
nlines	src/view.c	/^void view_sync_crs_row(view_t *v, cursor_t *c, int nlines)$/;"	z	function:view_sync_crs_row	typeref:typename:int	file:
nlines	src/view.c	/^void view_sync_crs_row_above(view_t *v, cursor_t *c, int nlines)$/;"	z	function:view_sync_crs_row_above	typeref:typename:int	file:
nlines	src/view.c	/^void view_sync_crs_row_below(view_t *v, cursor_t *c, int nlines)$/;"	z	function:view_sync_crs_row_below	typeref:typename:int	file:
nocbreak	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) nocbreak (void);				\/* implemented *\/$/;"	p	typeref:typename:int
nocrmode	/usr/include/curses.h	/^#define nocrmode(/;"	d
nodelay	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) nodelay (WINDOW *,bool);			\/* implemented *\/$/;"	p	typeref:typename:int
noecho	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) noecho (void);				\/* implemented *\/$/;"	p	typeref:typename:int
nofilter	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) nofilter(void);$/;"	p	typeref:typename:void
nonl	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) nonl (void);					\/* implemented *\/$/;"	p	typeref:typename:int
noqiflush	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) noqiflush (void);				\/* implemented *\/$/;"	p	typeref:typename:void
noraw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) noraw (void);				\/* implemented *\/$/;"	p	typeref:typename:int
notimeout	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) notimeout (WINDOW *,bool);			\/* implemented *\/$/;"	p	typeref:typename:int
nr	src/ds/math.c	/^int ndigits(int nr)$/;"	z	function:ndigits	typeref:typename:int	file:
nr	src/lines.c	/^line_t *lines_get(lines_t *l, int nr)$/;"	z	function:lines_get	typeref:typename:int	file:
nr	src/lines.c	/^void lines_delete(lines_t *l, int nr)$/;"	z	function:lines_delete	typeref:typename:int	file:
nr	src/math.c	/^int ndigits(int nr)$/;"	z	function:ndigits	typeref:typename:int	file:
offset	src/cursor.c	/^void cursor_add_col_manual(cursor_t *c, int offset)$/;"	z	function:cursor_add_col_manual	typeref:typename:int	file:
offset	src/cursor.c	/^void cursor_add_row(cursor_t *c, int offset, lines_t *ls)$/;"	z	function:cursor_add_row	typeref:typename:int	file:
overlay	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) overlay (const WINDOW*,WINDOW *);		\/* implemented *\/$/;"	p	typeref:typename:int
overwrite	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) overwrite (const WINDOW*,WINDOW *);		\/* implemented *\/$/;"	p	typeref:typename:int
pair_content	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) pair_content (NCURSES_PAIRS_T,NCURSES_COLOR_T*,NCURSES_COLOR_T*);		\//;"	p	typeref:typename:int
pdat	/usr/include/curses.h	/^	struct pdat$/;"	s	struct:_win_st
pecho_wchar	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) pecho_wchar (WINDOW *, const cchar_t *);	\/* implemented *\/$/;"	p	typeref:typename:int
pechochar	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) pechochar (WINDOW *, const chtype);		\/* implemented *\/$/;"	p	typeref:typename:int
pnoutrefresh	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) pnoutrefresh (WINDOW*,int,int,int,int,int,int);\/* implemented *\/$/;"	p	typeref:typename:int
postorder	/usr/include/search.h	/^  postorder,$/;"	e	enum:__anon6a76e5fc0203
preadv	/usr/include/sys/uio.h	/^#   define preadv /;"	d
preadv	/usr/include/sys/uio.h	/^extern ssize_t preadv (int __fd, const struct iovec *__iovec, int __count,$/;"	p	typeref:typename:ssize_t
preadv2	/usr/include/sys/uio.h	/^#   define preadv2 /;"	d
preadv2	/usr/include/sys/uio.h	/^extern ssize_t preadv2 (int __fp, const struct iovec *__iovec, int __count,$/;"	p	typeref:typename:ssize_t
preadv64	/usr/include/sys/uio.h	/^extern ssize_t preadv64 (int __fd, const struct iovec *__iovec, int __count,$/;"	p	typeref:typename:ssize_t
preadv64v2	/usr/include/sys/uio.h	/^extern ssize_t preadv64v2 (int __fp, const struct iovec *__iovec,$/;"	p	typeref:typename:ssize_t
prefresh	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) prefresh (WINDOW *,int,int,int,int,int,int);	\/* implemented *\/$/;"	p	typeref:typename:int
preorder	/usr/include/search.h	/^  preorder,$/;"	e	enum:__anon6a76e5fc0203
prev	src/linsert.c	/^bool lins_backspace(line_t *cur, line_t *prev, cursor_t *crs, int tabsz)$/;"	z	function:lins_backspace	typeref:typename:line_t *	file:
prev	src/linsert.c	/^void lins_backspace_start(line_t *cur, line_t *prev, cursor_t *c, int tabsz)$/;"	z	function:lins_backspace_start	typeref:typename:line_t *	file:
prime	src/ds/math.c	/^bool prime(int n)$/;"	f	typeref:typename:bool
prime_naive	src/ds/math.c	/^bool prime_naive(int n)$/;"	f	typeref:typename:bool
printw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) printw (const char *,...)			\/* implemented *\/$/;"	p	typeref:typename:int
putp	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) putp (const char *);				\/* implemented *\/$/;"	p	typeref:typename:int
putwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) putwin (WINDOW *, FILE *);			\/* implemented *\/$/;"	p	typeref:typename:int
pwritev	/usr/include/sys/uio.h	/^#   define pwritev /;"	d
pwritev	/usr/include/sys/uio.h	/^extern ssize_t pwritev (int __fd, const struct iovec *__iovec, int __count,$/;"	p	typeref:typename:ssize_t
pwritev2	/usr/include/sys/uio.h	/^#   define pwritev2 /;"	d
pwritev2	/usr/include/sys/uio.h	/^extern ssize_t pwritev2 (int __fd, const struct iovec *__iodev, int __count,$/;"	p	typeref:typename:ssize_t
pwritev64	/usr/include/sys/uio.h	/^extern ssize_t pwritev64 (int __fd, const struct iovec *__iovec, int __count,$/;"	p	typeref:typename:ssize_t
pwritev64v2	/usr/include/sys/uio.h	/^extern ssize_t pwritev64v2 (int __fd, const struct iovec *__iodev,$/;"	p	typeref:typename:ssize_t
q_back	/usr/include/search.h	/^    struct qelem *q_back;$/;"	m	struct:qelem	typeref:struct:qelem *
q_data	/usr/include/search.h	/^    char q_data[1];$/;"	m	struct:qelem	typeref:typename:char[1]
q_forw	/usr/include/search.h	/^    struct qelem *q_forw;$/;"	m	struct:qelem	typeref:struct:qelem *
qelem	/usr/include/search.h	/^struct qelem$/;"	s
qiflush	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) qiflush (void);				\/* implemented *\/$/;"	p	typeref:typename:void
raw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) raw (void);					\/* implemented *\/$/;"	p	typeref:typename:int
readv	/usr/include/sys/uio.h	/^extern ssize_t readv (int __fd, const struct iovec *__iovec, int __count)$/;"	p	typeref:typename:__BEGIN_DECLS ssize_t
redrawwin	/usr/include/curses.h	/^#define redrawwin(/;"	d
redrawwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) redrawwin (WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
refresh	/usr/include/curses.h	/^#define refresh(/;"	d
refresh	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) refresh (void);				\/* generated *\/$/;"	p	typeref:typename:int
remain_args	src/cmd/cparse.c	/^char *cmds_parse_aux(char *cmd_name, char *remain_args, cmds_t *cs, bufs_t *b, WINDOW *w)$/;"	z	function:cmds_parse_aux	typeref:typename:char *	file:
remque	/usr/include/search.h	/^extern void remque (void *__elem) __THROW;$/;"	p	typeref:typename:void
reset_color_pairs	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) reset_color_pairs (void);$/;"	p	typeref:typename:void
reset_prog_mode	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) reset_prog_mode (void);			\/* implemented *\/$/;"	p	typeref:typename:int
reset_shell_mode	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) reset_shell_mode (void);			\/* implemented *\/$/;"	p	typeref:typename:int
resetterm	/usr/include/curses.h	/^#define resetterm(/;"	d
resetty	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) resetty (void);				\/* implemented *\/$/;"	p	typeref:typename:int
resize_term	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) resize_term (int, int);$/;"	p	typeref:typename:int
resizeterm	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) resizeterm (int, int);$/;"	p	typeref:typename:int
result	/usr/include/curses.h	/^	    unsigned int result;$/;"	m	struct:__anon9db876bb0208::__anon9db876bb030a::__anon9db876bb0408	typeref:typename:unsigned int
result_flags	/usr/include/curses.h	/^    int result_flags;	\/* _NC_EVENT_TIMEOUT_MSEC or _NC_EVENT_FILE_READABLE *\/$/;"	m	struct:__anon9db876bb0508	typeref:typename:int
ripoffline	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) ripoffline (int, int (*)(WINDOW *, int));	\/* implemented *\/$/;"	p	typeref:typename:int
round_up_pow2	src/math.c	/^int round_up_pow2(int n)$/;"	f	typeref:typename:int
round_up_pow2	src/math.h	/^int round_up_pow2(int n);$/;"	p	typeref:typename:int
row	src/cursor.c	/^void cursor_set_row(cursor_t *c, int row, lines_t *ls)$/;"	z	function:cursor_set_row	typeref:typename:int	file:
s	src/chrp.c	/^char *chrpcpy_alloc(char *s)$/;"	z	function:chrpcpy_alloc	typeref:typename:char *	file:
s	src/chrp.c	/^int chrp_find(char *s, char c, int start, int end)$/;"	z	function:chrp_find	typeref:typename:char *	file:
s	src/chrp.c	/^int chrp_find_reverse(char *s, char c, int start, int end)$/;"	z	function:chrp_find_reverse	typeref:typename:char *	file:
s	src/chrp.c	/^int chrp_nmatched(char *s, char c, int start, int end)$/;"	z	function:chrp_nmatched	typeref:typename:char *	file:
s	src/chrp.c	/^int chrp_nmatched_reverse(char *s, char c, int start, int end)$/;"	z	function:chrp_nmatched_reverse	typeref:typename:char *	file:
s	src/chrp.c	/^static int strcount(char *s, int c)$/;"	z	function:strcount	typeref:typename:char *	file:
s	src/cmd/acmd.c	/^char *acmd_fquit_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:acmd_fquit_handler	typeref:typename:char *	file:
s	src/cmd/acmd.c	/^char *acmd_list_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:acmd_list_handler	typeref:typename:char *	file:
s	src/cmd/acmd.c	/^char *acmd_quit_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:acmd_quit_handler	typeref:typename:char *	file:
s	src/cmd/fcmd.c	/^char *fcmd_close_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_close_handler	typeref:typename:char *	file:
s	src/cmd/fcmd.c	/^char *fcmd_fclose_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_fclose_handler	typeref:typename:char *	file:
s	src/display.c	/^void addtabsubstr(char *s, int start, int end)$/;"	z	function:addtabsubstr	typeref:typename:char *	file:
s	src/ds/slist.c	/^bool slist_delete_elem(slist_t *s, void *elem, bool (*match_func)(void *, void *))$/;"	z	function:slist_delete_elem	typeref:typename:slist_t *	file:
s	src/ds/slist.c	/^int slist_lookup(slist_t *s, void *target, bool (*match_func)(void *, void *))$/;"	z	function:slist_lookup	typeref:typename:slist_t *	file:
s	src/ds/slist.c	/^void slist_append(slist_t *s, void *elem)$/;"	z	function:slist_append	typeref:typename:slist_t *	file:
s	src/ds/slist.c	/^void slist_delete_ind(slist_t *s, int index)$/;"	z	function:slist_delete_ind	typeref:typename:slist_t *	file:
s	src/ds/slist.c	/^void slist_for_each(slist_t *s, void (*func)(void *))$/;"	z	function:slist_for_each	typeref:typename:slist_t *	file:
s	src/ds/slist.c	/^void slist_free(slist_t *s, void (*free_elem)(void *))$/;"	z	function:slist_free	typeref:typename:slist_t *	file:
s	src/ds/slist.c	/^void slist_insert(slist_t *s, int index, void *elem)$/;"	z	function:slist_insert	typeref:typename:slist_t *	file:
s	src/ds/str.c	/^char str_pop(str_t *s)$/;"	z	function:str_pop	typeref:typename:str_t *	file:
s	src/ds/str.c	/^int str_resize(str_t *s, int new_cap)$/;"	z	function:str_resize	typeref:typename:str_t *	file:
s	src/ds/str.c	/^str_t *str_cpy(str_t *s)$/;"	z	function:str_cpy	typeref:typename:str_t *	file:
s	src/ds/str.c	/^str_t *str_split(str_t *s, int index)$/;"	z	function:str_split	typeref:typename:str_t *	file:
s	src/ds/str.c	/^void str_append(str_t *s, char c)$/;"	z	function:str_append	typeref:typename:str_t *	file:
s	src/ds/str.c	/^void str_delete(str_t *s, int index)$/;"	z	function:str_delete	typeref:typename:str_t *	file:
s	src/ds/str.c	/^void str_delete_aux(str_t *s, int index)$/;"	z	function:str_delete_aux	typeref:typename:str_t *	file:
s	src/ds/str.c	/^void str_free(str_t *s)$/;"	z	function:str_free	typeref:typename:str_t *	file:
s	src/ds/str.c	/^void str_insert(str_t *s, char c, int index)$/;"	z	function:str_insert	typeref:typename:str_t *	file:
s	src/ds/str.c	/^void str_insert_aux(str_t *s, char c, int index)$/;"	z	function:str_insert_aux	typeref:typename:str_t *	file:
s	src/ds/str.c	/^void str_set(str_t *s, char *t)$/;"	z	function:str_set	typeref:typename:str_t *	file:
s	src/ds/str.c	/^void str_try_grow(str_t *s)$/;"	z	function:str_try_grow	typeref:typename:str_t *	file:
s	src/ds/str.c	/^void str_try_shrink(str_t *s)$/;"	z	function:str_try_shrink	typeref:typename:str_t *	file:
s	src/fbuf/elbuf.c	/^void elbuf_set(elbuf_t *e, char *s)$/;"	z	function:elbuf_set	typeref:typename:char *	file:
s	src/tab.c	/^int str_insert_tab_spaces(str_t *s, int i, int tabsz)$/;"	z	function:str_insert_tab_spaces	typeref:typename:str_t *	file:
s	src/tab.c	/^int strcontractlen(str_t *s)$/;"	z	function:strcontractlen	typeref:typename:str_t *	file:
s	src/tab.c	/^int tablen(str_t *s, int i)$/;"	z	function:tablen	typeref:typename:str_t *	file:
s	src/tab.c	/^void str_align_next_tab(str_t *s, int start_ind, int tabsz)$/;"	z	function:str_align_next_tab	typeref:typename:str_t *	file:
s	src/tab.c	/^void str_align_tab(str_t *s, int i, int tabsz)$/;"	z	function:str_align_tab	typeref:typename:str_t *	file:
s	src/tab.c	/^void str_contract_tab_spaces(str_t *s, int tabsz)$/;"	z	function:str_contract_tab_spaces	typeref:typename:str_t *	file:
s	src/tab.c	/^void str_delete_tab_spaces(str_t *s, int i)$/;"	z	function:str_delete_tab_spaces	typeref:typename:str_t *	file:
s	src/tab.c	/^void str_expand_tab_spaces(str_t *s, int tabsz)$/;"	z	function:str_expand_tab_spaces	typeref:typename:str_t *	file:
s_buf	src/ds/str.h	/^	char *s_buf;$/;"	m	struct:string	typeref:typename:char *
s_capacity	src/ds/str.h	/^	int s_capacity;  $/;"	m	struct:string	typeref:typename:int
s_len	src/ds/str.h	/^	int s_len;  \/\/ Current number of members in the string.$/;"	m	struct:string	typeref:typename:int
saveterm	/usr/include/curses.h	/^#define saveterm(/;"	d
savetty	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) savetty (void);				\/* implemented *\/$/;"	p	typeref:typename:int
scanw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) scanw (const char *,...)			\/* implemented *\/$/;"	p	typeref:typename:int
scr_dump	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) scr_dump (const char *);			\/* implemented *\/$/;"	p	typeref:typename:int
scr_init	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) scr_init (const char *);			\/* implemented *\/$/;"	p	typeref:typename:int
scr_restore	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) scr_restore (const char *);			\/* implemented *\/$/;"	p	typeref:typename:int
scr_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) scr_set (const char *);			\/* implemented *\/$/;"	p	typeref:typename:int
scrl	/usr/include/curses.h	/^#define scrl(/;"	d
scrl	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) scrl (int);					\/* generated *\/$/;"	p	typeref:typename:int
scroll	/usr/include/curses.h	/^#define scroll(/;"	d
scroll	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) scroll (WINDOW *);				\/* generated *\/$/;"	p	typeref:typename:int
scrollok	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) scrollok (WINDOW *,bool);			\/* implemented *\/$/;"	p	typeref:typename:int
send	src/ds/str.c	/^void str_copy(str_t *src, int sstart, int send, str_t *dst, int dstart, int dend)$/;"	z	function:str_copy	typeref:typename:int	file:
set_escdelay	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) set_escdelay (int);$/;"	p	typeref:typename:int
set_tabsize	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) set_tabsize (int);$/;"	p	typeref:typename:int
set_term	/usr/include/curses.h	/^extern NCURSES_EXPORT(SCREEN *) set_term (SCREEN *);			\/* implemented *\/$/;"	p	typeref:typename:SCREEN *
setcchar	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) setcchar (cchar_t *, const wchar_t *, const attr_t, NCURSES_PAIRS_T, /;"	p	typeref:typename:int
setscrreg	/usr/include/curses.h	/^#define setscrreg(/;"	d
setscrreg	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) setscrreg (int,int);				\/* generated *\/$/;"	p	typeref:typename:int
setsyx	/usr/include/curses.h	/^#define setsyx(/;"	d
setterm	/usr/include/curses.h	/^#define setterm(/;"	d
short_name	src/cmd/cmd.c	/^cmd_t *cmd_init(char *short_name, char *long_name, char *(*handler)(char *, bufs_t *, WINDOW *))$/;"	z	function:cmd_init	typeref:typename:char *	file:
sid	src/cmd/fcmd.c	/^char *fcmd_jump_handler(char *sid, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_jump_handler	typeref:typename:char *	file:
sig	src/sig.c	/^void sig_clean_exit(int sig)$/;"	z	function:sig_clean_exit	typeref:typename:int	file:
sig_clean_exit	src/sig.c	/^void sig_clean_exit(int sig)$/;"	f	typeref:typename:void
sig_clean_exit	src/sig.h	/^void sig_clean_exit(int sig);$/;"	p	typeref:typename:void
size	/usr/include/search.h	/^    unsigned int size;$/;"	m	struct:hsearch_data	typeref:typename:unsigned int
sl_array	src/ds/slist.h	/^	void **sl_array;  \/\/ Array used to store user-defined structures.$/;"	m	struct:static_list	typeref:typename:void **
sl_capacity	src/ds/slist.h	/^	int sl_capacity;  \/\/ Maximum amout of elements that can be in the array.$/;"	m	struct:static_list	typeref:typename:int
sl_len	src/ds/slist.h	/^	int sl_len;  \/\/ Current number of elements in the array.$/;"	m	struct:static_list	typeref:typename:int
slist_append	src/ds/slist.c	/^void slist_append(slist_t *s, void *elem)$/;"	f	typeref:typename:void
slist_append	src/ds/slist.h	/^void slist_append(slist_t *s, void *elem);$/;"	p	typeref:typename:void
slist_delete_elem	src/ds/slist.c	/^bool slist_delete_elem(slist_t *s, void *elem, bool (*match_func)(void *, void *))$/;"	f	typeref:typename:bool
slist_delete_elem	src/ds/slist.h	/^bool slist_delete_elem(slist_t *s, void *elem, bool (*match_func)(void *, void *));$/;"	p	typeref:typename:bool
slist_delete_ind	src/ds/slist.c	/^void slist_delete_ind(slist_t *s, int index)$/;"	f	typeref:typename:void
slist_delete_ind	src/ds/slist.h	/^void slist_delete_ind(slist_t *s, int index);$/;"	p	typeref:typename:void
slist_for_each	src/ds/slist.c	/^void slist_for_each(slist_t *s, void (*func)(void *))$/;"	f	typeref:typename:void
slist_free	src/ds/slist.c	/^void slist_free(slist_t *s, void (*free_elem)(void *))$/;"	f	typeref:typename:void
slist_free	src/ds/slist.h	/^void slist_free(slist_t *s, void (*free_elem)(void *));$/;"	p	typeref:typename:void
slist_init	src/ds/slist.c	/^slist_t *slist_init(int capacity)$/;"	f	typeref:typename:slist_t *
slist_init	src/ds/slist.h	/^slist_t *slist_init(int maxlen);$/;"	p	typeref:typename:slist_t *
slist_insert	src/ds/slist.c	/^void slist_insert(slist_t *s, int index, void *elem)$/;"	f	typeref:typename:void
slist_insert	src/ds/slist.h	/^void slist_insert(slist_t *s, int index, void *elem);$/;"	p	typeref:typename:void
slist_lookup	src/ds/slist.c	/^int slist_lookup(slist_t *s, void *target, bool (*match_func)(void *, void *))$/;"	f	typeref:typename:int
slist_lookup	src/ds/slist.h	/^int slist_lookup(slist_t *s, void *target, bool (*match_func)(void *, void *));$/;"	p	typeref:typename:int
slist_t	src/ds/slist.h	/^typedef struct static_list slist_t;$/;"	t	typeref:struct:static_list
slk_attr	/usr/include/curses.h	/^extern NCURSES_EXPORT(attr_t) slk_attr (void);				\/* implemented *\/$/;"	p	typeref:typename:attr_t
slk_attr_off	/usr/include/curses.h	/^#define slk_attr_off(/;"	d
slk_attr_off	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_attr_off (const attr_t, void *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
slk_attr_on	/usr/include/curses.h	/^#define slk_attr_on(/;"	d
slk_attr_on	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_attr_on (attr_t,void*);			\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
slk_attr_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_attr_set (const attr_t,NCURSES_PAIRS_T,void*);	\/* implemented *\/$/;"	p	typeref:typename:int
slk_attroff	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_attroff (const chtype);			\/* implemented *\/$/;"	p	typeref:typename:int
slk_attron	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_attron (const chtype);			\/* implemented *\/$/;"	p	typeref:typename:int
slk_attrset	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_attrset (const chtype);			\/* implemented *\/$/;"	p	typeref:typename:int
slk_clear	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_clear (void);				\/* implemented *\/$/;"	p	typeref:typename:int
slk_color	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_color (NCURSES_PAIRS_T);				\/* implemented *\/$/;"	p	typeref:typename:int
slk_init	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_init (int);				\/* implemented *\/$/;"	p	typeref:typename:int
slk_label	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) slk_label (int);				\/* implemented *\/$/;"	p	typeref:typename:char *
slk_noutrefresh	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_noutrefresh (void);			\/* implemented *\/$/;"	p	typeref:typename:int
slk_refresh	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_refresh (void);				\/* implemented *\/$/;"	p	typeref:typename:int
slk_restore	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_restore (void);				\/* implemented *\/$/;"	p	typeref:typename:int
slk_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_set (int,const char *,int);		\/* implemented *\/$/;"	p	typeref:typename:int
slk_touch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_touch (void);				\/* implemented *\/$/;"	p	typeref:typename:int
slk_wset	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) slk_wset (int, const wchar_t *, int);	\/* implemented *\/$/;"	p	typeref:typename:int
src	src/ds/str.c	/^str_t *str_cat(str_t *dest, str_t *src)$/;"	z	function:str_cat	typeref:typename:str_t *	file:
src	src/ds/str.c	/^void str_copy(str_t *src, int sstart, int send, str_t *dst, int dstart, int dend)$/;"	z	function:str_copy	typeref:typename:str_t *	file:
src	src/linsert.c	/^void lins_linecat(line_t *dest, line_t *src, int tabsz)$/;"	z	function:lins_linecat	typeref:typename:line_t *	file:
sstart	src/ds/str.c	/^void str_copy(str_t *src, int sstart, int send, str_t *dst, int dstart, int dend)$/;"	z	function:str_copy	typeref:typename:int	file:
standend	/usr/include/curses.h	/^#define standend(/;"	d
standend	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) standend (void);				\/* generated *\/$/;"	p	typeref:typename:int
standout	/usr/include/curses.h	/^#define standout(/;"	d
standout	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) standout (void);				\/* generated *\/$/;"	p	typeref:typename:int
start	src/chrp.c	/^int chrp_find(char *s, char c, int start, int end)$/;"	z	function:chrp_find	typeref:typename:int	file:
start	src/chrp.c	/^int chrp_find_reverse(char *s, char c, int start, int end)$/;"	z	function:chrp_find_reverse	typeref:typename:int	file:
start	src/chrp.c	/^int chrp_nmatched(char *s, char c, int start, int end)$/;"	z	function:chrp_nmatched	typeref:typename:int	file:
start	src/chrp.c	/^int chrp_nmatched_reverse(char *s, char c, int start, int end)$/;"	z	function:chrp_nmatched_reverse	typeref:typename:int	file:
start	src/display.c	/^void addtabsubstr(char *s, int start, int end)$/;"	z	function:addtabsubstr	typeref:typename:int	file:
start_color	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) start_color (void);				\/* implemented *\/$/;"	p	typeref:typename:int
start_ind	src/tab.c	/^void str_align_next_tab(str_t *s, int start_ind, int tabsz)$/;"	z	function:str_align_next_tab	typeref:typename:int	file:
start_offset	src/view.c	/^int len_shrink(int len, int start_offset, int end_offset)$/;"	z	function:len_shrink	typeref:typename:int	file:
start_offset	src/view.c	/^int len_start_ind(int len, int start_offset)$/;"	z	function:len_start_ind	typeref:typename:int	file:
static_list	src/ds/slist.h	/^struct static_list {$/;"	s
stdscr	/usr/include/curses.h	/^#define stdscr /;"	d
stdscr	/usr/include/curses.h	/^extern NCURSES_EXPORT_VAR(WINDOW *) stdscr;$/;"	x	typeref:typename:NCURSES_EXPORT_VAR (WINDOW *)
str	src/ds/str.c	/^str_t *str_init(char *str)$/;"	z	function:str_init	typeref:typename:char *	file:
str	src/ds/str.c	/^str_t *str_ninit(char *str, int n)$/;"	z	function:str_ninit	typeref:typename:char *	file:
str	src/line.c	/^line_t *line_init(char *str, int len, int tabsz)$/;"	z	function:line_init	typeref:typename:char *	file:
str_align_next_tab	src/tab.c	/^void str_align_next_tab(str_t *s, int start_ind, int tabsz)$/;"	f	typeref:typename:void
str_align_next_tab	src/tab.h	/^void str_align_next_tab(str_t *s, int start_ind, int tabsz);$/;"	p	typeref:typename:void
str_align_tab	src/tab.c	/^void str_align_tab(str_t *s, int i, int tabsz)$/;"	f	typeref:typename:void
str_alloc	src/ds/str.c	/^str_t *str_alloc(int capacity)$/;"	f	typeref:typename:str_t *
str_alloc	src/ds/str.h	/^str_t *str_alloc(int capacity);$/;"	p	typeref:typename:str_t *
str_append	src/ds/str.c	/^void str_append(str_t *s, char c)$/;"	f	typeref:typename:void
str_append	src/ds/str.h	/^void str_append(str_t *s, char c);$/;"	p	typeref:typename:void
str_cat	src/ds/str.c	/^str_t *str_cat(str_t *dest, str_t *src)$/;"	f	typeref:typename:str_t *
str_cat	src/ds/str.h	/^str_t *str_cat(str_t *dest, str_t *src);$/;"	p	typeref:typename:str_t *
str_contract_tab_spaces	src/tab.c	/^void str_contract_tab_spaces(str_t *s, int tabsz)$/;"	f	typeref:typename:void
str_contract_tab_spaces	src/tab.h	/^void str_contract_tab_spaces(str_t *s, int tabsz);$/;"	p	typeref:typename:void
str_copy	src/ds/str.c	/^void str_copy(str_t *src, int sstart, int send, str_t *dst, int dstart, int dend)$/;"	f	typeref:typename:void
str_cpy	src/ds/str.c	/^str_t *str_cpy(str_t *s)$/;"	f	typeref:typename:str_t *
str_cpy	src/ds/str.h	/^str_t *str_cpy(str_t *s);$/;"	p	typeref:typename:str_t *
str_delete	src/ds/str.c	/^void str_delete(str_t *s, int index)$/;"	f	typeref:typename:void
str_delete	src/ds/str.h	/^void str_delete(str_t *s, int index);$/;"	p	typeref:typename:void
str_delete_aux	src/ds/str.c	/^void str_delete_aux(str_t *s, int index)$/;"	f	typeref:typename:void
str_delete_tab_spaces	src/tab.c	/^void str_delete_tab_spaces(str_t *s, int i)$/;"	f	typeref:typename:void
str_delete_tab_spaces	src/tab.h	/^void str_delete_tab_spaces(str_t *s, int i);$/;"	p	typeref:typename:void
str_expand_tab_spaces	src/tab.c	/^void str_expand_tab_spaces(str_t *s, int tabsz)$/;"	f	typeref:typename:void
str_expand_tab_spaces	src/tab.h	/^void str_expand_tab_spaces(str_t *s, int tabsz);$/;"	p	typeref:typename:void
str_free	src/ds/str.c	/^void str_free(str_t *s)$/;"	f	typeref:typename:void
str_free	src/ds/str.h	/^void str_free(str_t *s);$/;"	p	typeref:typename:void
str_init	src/ds/str.c	/^str_t *str_init(char *str)$/;"	f	typeref:typename:str_t *
str_init	src/ds/str.h	/^str_t *str_init(char *str);$/;"	p	typeref:typename:str_t *
str_insert	src/ds/str.c	/^void str_insert(str_t *s, char c, int index)$/;"	f	typeref:typename:void
str_insert	src/ds/str.h	/^void str_insert(str_t *s, char c, int index);$/;"	p	typeref:typename:void
str_insert_aux	src/ds/str.c	/^void str_insert_aux(str_t *s, char c, int index)$/;"	f	typeref:typename:void
str_insert_tab_spaces	src/tab.c	/^int str_insert_tab_spaces(str_t *s, int i, int tabsz)$/;"	f	typeref:typename:int
str_insert_tab_spaces	src/tab.h	/^int str_insert_tab_spaces(str_t *s, int i, int tabsz);$/;"	p	typeref:typename:int
str_ninit	src/ds/str.c	/^str_t *str_ninit(char *str, int n)$/;"	f	typeref:typename:str_t *
str_ninit	src/ds/str.h	/^str_t *str_ninit(char *str, int n);$/;"	p	typeref:typename:str_t *
str_pop	src/ds/str.c	/^char str_pop(str_t *s)$/;"	f	typeref:typename:char
str_pop	src/ds/str.h	/^char str_pop(str_t *s);$/;"	p	typeref:typename:char
str_resize	src/ds/str.c	/^int str_resize(str_t *s, int new_cap)$/;"	f	typeref:typename:int
str_set	src/ds/str.c	/^void str_set(str_t *s, char *t)$/;"	f	typeref:typename:void
str_set	src/ds/str.h	/^void str_set(str_t *s, char *t);$/;"	p	typeref:typename:void
str_split	src/ds/str.c	/^str_t *str_split(str_t *s, int index)$/;"	f	typeref:typename:str_t *
str_split	src/ds/str.h	/^str_t *str_split(str_t *s, int index);$/;"	p	typeref:typename:str_t *
str_t	src/ds/str.h	/^typedef struct string str_t;$/;"	t	typeref:struct:string
str_try_grow	src/ds/str.c	/^void str_try_grow(str_t *s)$/;"	f	typeref:typename:void
str_try_shrink	src/ds/str.c	/^void str_try_shrink(str_t *s)$/;"	f	typeref:typename:void
str_try_shrink	src/ds/str.h	/^void str_try_shrink(str_t *s);$/;"	p	typeref:typename:void
strcontractlen	src/tab.c	/^int strcontractlen(str_t *s)$/;"	f	typeref:typename:int
strcount	src/chrp.c	/^static int strcount(char *s, int c)$/;"	f	typeref:typename:int	file:
string	src/ds/str.h	/^struct string {$/;"	s
strlen	src/tab.c	/^int dist_to_next_tabstop(int strlen, int tabsz)$/;"	z	function:dist_to_next_tabstop	typeref:typename:int	file:
strlenf	src/chrp.c	/^static int strlenf(char *fmt, va_list args)$/;"	f	typeref:typename:int	file:
subpad	/usr/include/curses.h	/^extern NCURSES_EXPORT(WINDOW *) subpad (WINDOW *, int, int, int, int);	\/* implemented *\/$/;"	p	typeref:typename:WINDOW *
subwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(WINDOW *) subwin (WINDOW *, int, int, int, int);	\/* implemented *\/$/;"	p	typeref:typename:WINDOW *
syncok	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) syncok (WINDOW *, bool);			\/* implemented *\/$/;"	p	typeref:typename:int
t	src/display.c	/^void display_start(tedata_t *t)$/;"	z	function:display_start	typeref:typename:tedata_t *	file:
t	src/display.c	/^void display_text_editor(tedata_t *t)$/;"	z	function:display_text_editor	typeref:typename:tedata_t *	file:
t	src/ds/str.c	/^void str_set(str_t *s, char *t)$/;"	z	function:str_set	typeref:typename:char *	file:
t	src/input.c	/^void input_start(tedata_t *t)$/;"	z	function:input_start	typeref:typename:tedata_t *	file:
t	src/tedata.c	/^int tedata_init(tedata_t *t, char *fpaths[], int nfpaths)$/;"	z	function:tedata_init	typeref:typename:tedata_t *	file:
t	src/tedata.c	/^void tedata_free(tedata_t *t)$/;"	z	function:tedata_free	typeref:typename:tedata_t *	file:
t	src/tedit.c	/^tedata_t t;  \/\/ Global text editor data.$/;"	v	typeref:typename:tedata_t
table	/usr/include/search.h	/^    struct _ENTRY *table;$/;"	m	struct:hsearch_data	typeref:struct:_ENTRY *
tablen	src/tab.c	/^int tablen(str_t *s, int i)$/;"	f	typeref:typename:int
tablen	src/tab.h	/^int tablen(str_t *s, int i);$/;"	p	typeref:typename:int
tabsz	src/fbuf/bufs.c	/^int bufs_new(bufs_t *b, WINDOW *w, int tabsz)$/;"	z	function:bufs_new	typeref:typename:int	file:
tabsz	src/fbuf/bufs.c	/^int bufs_open(bufs_t *b, char *fpath, WINDOW *w, int tabsz)$/;"	z	function:bufs_open	typeref:typename:int	file:
tabsz	src/fbuf/bufs.c	/^int bufs_write_other(bufs_t *b, char *fpath, WINDOW *w, int tabsz)$/;"	z	function:bufs_write_other	typeref:typename:int	file:
tabsz	src/fbuf/fbio.c	/^fbuf_t *fbuf_init(WINDOW *w, int tabsz, int id)$/;"	z	function:fbuf_init	typeref:typename:int	file:
tabsz	src/fbuf/fbio.c	/^fbuf_t *fbuf_new(WINDOW *w, int tabsz, int id)$/;"	z	function:fbuf_new	typeref:typename:int	file:
tabsz	src/fbuf/fbio.c	/^fbuf_t *fbuf_open(char *fpath, WINDOW *w, int tabsz, int id)$/;"	z	function:fbuf_open	typeref:typename:int	file:
tabsz	src/line.c	/^line_t *line_init(char *str, int len, int tabsz)$/;"	z	function:line_init	typeref:typename:int	file:
tabsz	src/line.c	/^line_t *line_split(line_t *l, int col, int tabsz)$/;"	z	function:line_split	typeref:typename:int	file:
tabsz	src/lines.c	/^int lines_from_file_aux(FILE *f, lines_t *lines, char *linebuf, int linesz, int tabsz)$/;"	z	function:lines_from_file_aux	typeref:typename:int	file:
tabsz	src/lines.c	/^int lines_write(lines_t *ls, int tabsz, int fd)$/;"	z	function:lines_write	typeref:typename:int	file:
tabsz	src/lines.c	/^lines_t *lines_from_fd(int fd, int tabsz)$/;"	z	function:lines_from_fd	typeref:typename:int	file:
tabsz	src/lines.c	/^lines_t *lines_from_file(char *fpath, int tabsz)$/;"	z	function:lines_from_file	typeref:typename:int	file:
tabsz	src/lines.c	/^lines_t *lines_from_fstream(FILE *f, int tabsz)$/;"	z	function:lines_from_fstream	typeref:typename:int	file:
tabsz	src/lines.c	/^void line_contract_tab_spaces(line_t *l, void *tabsz)$/;"	z	function:line_contract_tab_spaces	typeref:typename:void *	file:
tabsz	src/lines.c	/^void line_expand_tab_spaces(line_t *l, void *tabsz)$/;"	z	function:line_expand_tab_spaces	typeref:typename:void *	file:
tabsz	src/lines.c	/^void lines_contract_tab_spaces(lines_t *ls, int tabsz)$/;"	z	function:lines_contract_tab_spaces	typeref:typename:int	file:
tabsz	src/lines.c	/^void lines_expand_tab_spaces(lines_t *ls, int tabsz)$/;"	z	function:lines_expand_tab_spaces	typeref:typename:int	file:
tabsz	src/linsert.c	/^bool lins_backspace(line_t *cur, line_t *prev, cursor_t *crs, int tabsz)$/;"	z	function:lins_backspace	typeref:typename:int	file:
tabsz	src/linsert.c	/^bool lins_delete(line_t *cur, line_t *next, cursor_t *crs, int tabsz)$/;"	z	function:lins_delete	typeref:typename:int	file:
tabsz	src/linsert.c	/^line_t *lins_split(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_split	typeref:typename:int	file:
tabsz	src/linsert.c	/^void lins_backspace_reg(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_backspace_reg	typeref:typename:int	file:
tabsz	src/linsert.c	/^void lins_backspace_start(line_t *cur, line_t *prev, cursor_t *c, int tabsz)$/;"	z	function:lins_backspace_start	typeref:typename:int	file:
tabsz	src/linsert.c	/^void lins_backspace_tab(line_t *l, cursor_t *crs, int tabsz)$/;"	z	function:lins_backspace_tab	typeref:typename:int	file:
tabsz	src/linsert.c	/^void lins_delete_newline(line_t *cur, line_t *next, int tabsz)$/;"	z	function:lins_delete_newline	typeref:typename:int	file:
tabsz	src/linsert.c	/^void lins_delete_reg(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_delete_reg	typeref:typename:int	file:
tabsz	src/linsert.c	/^void lins_delete_tab(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_delete_tab	typeref:typename:int	file:
tabsz	src/linsert.c	/^void lins_insert_char(line_t *l, cursor_t *crs, char c, int tabsz)$/;"	z	function:lins_insert_char	typeref:typename:int	file:
tabsz	src/linsert.c	/^void lins_insert_reg(line_t *l, cursor_t *crs, char c, int tabsz)$/;"	z	function:lins_insert_reg	typeref:typename:int	file:
tabsz	src/linsert.c	/^void lins_insert_tab(line_t *l, cursor_t *c, int tabsz)$/;"	z	function:lins_insert_tab	typeref:typename:int	file:
tabsz	src/linsert.c	/^void lins_linecat(line_t *dest, line_t *src, int tabsz)$/;"	z	function:lins_linecat	typeref:typename:int	file:
tabsz	src/tab.c	/^int dist_to_next_tabstop(int strlen, int tabsz)$/;"	z	function:dist_to_next_tabstop	typeref:typename:int	file:
tabsz	src/tab.c	/^int str_insert_tab_spaces(str_t *s, int i, int tabsz)$/;"	z	function:str_insert_tab_spaces	typeref:typename:int	file:
tabsz	src/tab.c	/^void str_align_next_tab(str_t *s, int start_ind, int tabsz)$/;"	z	function:str_align_next_tab	typeref:typename:int	file:
tabsz	src/tab.c	/^void str_align_tab(str_t *s, int i, int tabsz)$/;"	z	function:str_align_tab	typeref:typename:int	file:
tabsz	src/tab.c	/^void str_contract_tab_spaces(str_t *s, int tabsz)$/;"	z	function:str_contract_tab_spaces	typeref:typename:int	file:
tabsz	src/tab.c	/^void str_expand_tab_spaces(str_t *s, int tabsz)$/;"	z	function:str_expand_tab_spaces	typeref:typename:int	file:
target	src/ds/slist.c	/^int slist_lookup(slist_t *s, void *target, bool (*match_func)(void *, void *))$/;"	z	function:slist_lookup	typeref:typename:void *	file:
tdelete	/usr/include/search.h	/^extern void *tdelete (const void *__restrict __key,$/;"	p	typeref:typename:void *
tdestroy	/usr/include/search.h	/^extern void tdestroy (void *__root, __free_fn_t __freefct);$/;"	p	typeref:typename:void
te_bufs	src/tedata.h	/^	bufs_t te_bufs;$/;"	m	struct:text_editor_data	typeref:typename:bufs_t
te_cmds	src/tedata.h	/^	cmds_t *te_cmds;$/;"	m	struct:text_editor_data	typeref:typename:cmds_t *
te_sem	src/tedata.h	/^	sem_t te_sem;  $/;"	m	struct:text_editor_data	typeref:typename:sem_t
te_win	src/tedata.h	/^	WINDOW *te_win;  \/\/ Curses window for displaying file buffers in.$/;"	m	struct:text_editor_data	typeref:typename:WINDOW *
tedata_free	src/tedata.c	/^void tedata_free(tedata_t *t)$/;"	f	typeref:typename:void
tedata_free	src/tedata.h	/^void tedata_free(tedata_t *t);$/;"	p	typeref:typename:void
tedata_init	src/tedata.c	/^int tedata_init(tedata_t *t, char *fpaths[], int nfpaths)$/;"	f	typeref:typename:int
tedata_init	src/tedata.h	/^int tedata_init(tedata_t *t, char *fpaths[], int nfpaths);$/;"	p	typeref:typename:int
tedata_t	src/tedata.h	/^typedef struct text_editor_data tedata_t;$/;"	t	typeref:struct:text_editor_data
tedit	Makefile	/^tedit: $(OBJS)$/;"	t
tedit_start	src/tedit.c	/^void tedit_start(char *fpaths[], int nfpaths)$/;"	f	typeref:typename:void
tedit_start	src/tedit.h	/^void tedit_start(char *fpaths[], int nfpaths);$/;"	p	typeref:typename:void
term_attrs	/usr/include/curses.h	/^extern NCURSES_EXPORT(attr_t) term_attrs (void);			\/* implemented *\/$/;"	p	typeref:typename:attr_t
termattrs	/usr/include/curses.h	/^extern NCURSES_EXPORT(chtype) termattrs (void);				\/* implemented *\/$/;"	p	typeref:typename:chtype
termname	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) termname (void);				\/* implemented *\/$/;"	p	typeref:typename:char *
test-assert	test/Makefile	/^test-assert: $(AOBJS) $/;"	t
test-mem	test/Makefile	/^test-mem: $(MOBJS)$/;"	t
test_fbuf	test/src/test-mem.c	/^void test_fbuf(void)$/;"	f	typeref:typename:void
test_tedata	test/src/test-mem.c	/^void test_tedata(void)$/;"	f	typeref:typename:void
text_editor_data	src/tedata.h	/^struct text_editor_data {$/;"	s
tfind	/usr/include/search.h	/^extern void *tfind (const void *__key, void *const *__rootp,$/;"	p	typeref:typename:void *
thread_display	src/tedit.c	/^void *thread_display(void *data)$/;"	f	typeref:typename:void *
thread_input	src/tedit.c	/^void *thread_input(void *data)$/;"	f	typeref:typename:void *
tigetflag	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) tigetflag (const char *);			\/* implemented *\/$/;"	p	typeref:typename:int
tigetnum	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) tigetnum (const char *);			\/* implemented *\/$/;"	p	typeref:typename:int
tigetstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) tigetstr (const char *);			\/* implemented *\/$/;"	p	typeref:typename:char *
timeout	/usr/include/curses.h	/^#define timeout(/;"	d
timeout	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) timeout (int);				\/* generated *\/$/;"	p	typeref:typename:void
timeout_msec	/usr/include/curses.h	/^	long timeout_msec;	\/* _NC_EVENT_TIMEOUT_MSEC *\/$/;"	m	union:__anon9db876bb0208::__anon9db876bb030a	typeref:typename:long
tiparm	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) tiparm (const char *, ...);		\/* special *\/$/;"	p	typeref:typename:char *
top_row_offset	src/view.c	/^void view_init(view_t *v, WINDOW *w, int top_row_offset, int bot_row_offset, $/;"	z	function:view_init	typeref:typename:int	file:
touchline	/usr/include/curses.h	/^#define touchline(/;"	d
touchline	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) touchline (WINDOW *, int, int);		\/* generated *\/$/;"	p	typeref:typename:int
touchwin	/usr/include/curses.h	/^#define touchwin(/;"	d
touchwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) touchwin (WINDOW *);				\/* generated *\/$/;"	p	typeref:typename:int
tparm	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) tparm (const char *, ...);		\/* special *\/$/;"	p	typeref:typename:char *
tparm	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) tparm (const char *, NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_T/;"	p	typeref:typename:char *
tparm_varargs	/usr/include/curses.h	/^extern NCURSES_EXPORT(char *) tparm_varargs (const char *, ...);	\/* special *\/$/;"	p	typeref:typename:char *
trace	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) trace (const unsigned) GCC_DEPRECATED("use curses_trace");$/;"	p	typeref:typename:void
tsearch	/usr/include/search.h	/^extern void *tsearch (const void *__key, void **__rootp,$/;"	p	typeref:typename:void *
ttytype	/usr/include/curses.h	/^#define ttytype /;"	d
twalk	/usr/include/search.h	/^extern void twalk (const void *__root, __action_fn_t __action);$/;"	p	typeref:typename:void
twalk_r	/usr/include/search.h	/^extern void twalk_r (const void *__root,$/;"	p	typeref:typename:void
type	/usr/include/curses.h	/^    int type;$/;"	m	struct:__anon9db876bb0208	typeref:typename:int
typeahead	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) typeahead (int);				\/* implemented *\/$/;"	p	typeref:typename:int
unget_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) unget_wch (const wchar_t);			\/* implemented *\/$/;"	p	typeref:typename:int
ungetch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) ungetch (int);				\/* implemented *\/$/;"	p	typeref:typename:int
ungetmouse	/usr/include/curses.h	/^extern NCURSES_EXPORT(int)     ungetmouse (MEVENT *);$/;"	p	typeref:typename:int
uninstall	Makefile	/^uninstall:$/;"	t
untouchwin	/usr/include/curses.h	/^#define untouchwin(/;"	d
untouchwin	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) untouchwin (WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
use_default_colors	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) use_default_colors (void);$/;"	p	typeref:typename:int
use_env	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) use_env (bool);				\/* implemented *\/$/;"	p	typeref:typename:void
use_extended_names	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) use_extended_names (bool);$/;"	p	typeref:typename:int
use_legacy_coding	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) use_legacy_coding (int);$/;"	p	typeref:typename:int
use_screen	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) use_screen (SCREEN *, NCURSES_SCREEN_CB, void *);$/;"	p	typeref:typename:int
use_tioctl	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) use_tioctl (bool);				\/* implemented *\/$/;"	p	typeref:typename:void
use_window	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) use_window (WINDOW *, NCURSES_WINDOW_CB, void *);$/;"	p	typeref:typename:int
v	src/move.c	/^void mv_view_pgdn(cursor_t *c, lines_t *ls, view_t *v)$/;"	z	function:mv_view_pgdn	typeref:typename:view_t *	file:
v	src/move.c	/^void mv_view_pgup(cursor_t *c, lines_t *ls, view_t *v)$/;"	z	function:mv_view_pgup	typeref:typename:view_t *	file:
v	src/view.c	/^bool view_crs_above(view_t *v, cursor_t *c)$/;"	z	function:view_crs_above	typeref:typename:view_t *	file:
v	src/view.c	/^bool view_crs_below(view_t *v, cursor_t *c)$/;"	z	function:view_crs_below	typeref:typename:view_t *	file:
v	src/view.c	/^bool view_crs_leftward(view_t *v, cursor_t *c)$/;"	z	function:view_crs_leftward	typeref:typename:view_t *	file:
v	src/view.c	/^bool view_crs_rightward(view_t *v, cursor_t *c)$/;"	z	function:view_crs_rightward	typeref:typename:view_t *	file:
v	src/view.c	/^int view_crs_above_dist(view_t *v, cursor_t *c)$/;"	z	function:view_crs_above_dist	typeref:typename:view_t *	file:
v	src/view.c	/^int view_crs_below_dist(view_t *v, cursor_t *c)$/;"	z	function:view_crs_below_dist	typeref:typename:view_t *	file:
v	src/view.c	/^int view_crs_leftward_dist(view_t *v, cursor_t *c)$/;"	z	function:view_crs_leftward_dist	typeref:typename:view_t *	file:
v	src/view.c	/^int view_crs_rightward_dist(view_t *v, cursor_t *c)$/;"	z	function:view_crs_rightward_dist	typeref:typename:view_t *	file:
v	src/view.c	/^int view_cursor_display_col(view_t *v, cursor_t *c)$/;"	z	function:view_cursor_display_col	typeref:typename:view_t *	file:
v	src/view.c	/^int view_cursor_display_row(view_t *v, cursor_t *c)$/;"	z	function:view_cursor_display_row	typeref:typename:view_t *	file:
v	src/view.c	/^int view_display_first_col(view_t *v)$/;"	z	function:view_display_first_col	typeref:typename:view_t *	file:
v	src/view.c	/^int view_display_top_row(view_t *v)$/;"	z	function:view_display_top_row	typeref:typename:view_t *	file:
v	src/view.c	/^int view_height(view_t *v)$/;"	z	function:view_height	typeref:typename:view_t *	file:
v	src/view.c	/^int view_lines_bot_row(view_t *v)$/;"	z	function:view_lines_bot_row	typeref:typename:view_t *	file:
v	src/view.c	/^int view_lines_last_col(view_t *v)$/;"	z	function:view_lines_last_col	typeref:typename:view_t *	file:
v	src/view.c	/^int view_width(view_t *v)$/;"	z	function:view_width	typeref:typename:view_t *	file:
v	src/view.c	/^void view_init(view_t *v, WINDOW *w, int top_row_offset, int bot_row_offset, $/;"	z	function:view_init	typeref:typename:view_t *	file:
v	src/view.c	/^void view_reset(view_t *v)$/;"	z	function:view_reset	typeref:typename:view_t *	file:
v	src/view.c	/^void view_sync_crs_col(view_t *v, cursor_t *c, int linelen)$/;"	z	function:view_sync_crs_col	typeref:typename:view_t *	file:
v	src/view.c	/^void view_sync_crs_col_leftward(view_t *v, cursor_t *c, int linelen)$/;"	z	function:view_sync_crs_col_leftward	typeref:typename:view_t *	file:
v	src/view.c	/^void view_sync_crs_col_rightward(view_t *v, cursor_t *c, int linelen)$/;"	z	function:view_sync_crs_col_rightward	typeref:typename:view_t *	file:
v	src/view.c	/^void view_sync_crs_row(view_t *v, cursor_t *c, int nlines)$/;"	z	function:view_sync_crs_row	typeref:typename:view_t *	file:
v	src/view.c	/^void view_sync_crs_row_above(view_t *v, cursor_t *c, int nlines)$/;"	z	function:view_sync_crs_row_above	typeref:typename:view_t *	file:
v	src/view.c	/^void view_sync_crs_row_below(view_t *v, cursor_t *c, int nlines)$/;"	z	function:view_sync_crs_row_below	typeref:typename:view_t *	file:
v	src/view.c	/^void view_sync_cursor(view_t *v, cursor_t *c, lines_t *ls)$/;"	z	function:view_sync_cursor	typeref:typename:view_t *	file:
v_lines_first_col	src/view.h	/^	int v_lines_first_col;$/;"	m	struct:view	typeref:typename:int
v_lines_top_row	src/view.h	/^	int v_lines_top_row;$/;"	m	struct:view	typeref:typename:int
v_pgmv	src/view.h	/^	bool v_pgmv;  \/\/ Whether moved by a pgup\/dn rather than arrow key.$/;"	m	struct:view	typeref:typename:bool
v_win	src/view.h	/^	WINDOW *v_win;$/;"	m	struct:view	typeref:typename:WINDOW *
v_win_bot_row_off	src/view.h	/^	int v_win_bot_row_off;  \/\/ Bottom row.$/;"	m	struct:view	typeref:typename:int
v_win_first_col_off	src/view.h	/^	int v_win_first_col_off;$/;"	m	struct:view	typeref:typename:int
v_win_last_col_off	src/view.h	/^	int v_win_last_col_off;$/;"	m	struct:view	typeref:typename:int
v_win_top_row_off	src/view.h	/^	int v_win_top_row_off;$/;"	m	struct:view	typeref:typename:int
vid_attr	/usr/include/curses.h	/^#define vid_attr(/;"	d
vid_attr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) vid_attr (attr_t, NCURSES_PAIRS_T, void *);		\/* implemented *\/$/;"	p	typeref:typename:int
vid_puts	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) vid_puts (attr_t, NCURSES_PAIRS_T, void *, NCURSES_OUTC); \/* impleme/;"	p	typeref:typename:int
vidattr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) vidattr (chtype);				\/* implemented *\/$/;"	p	typeref:typename:int
vidputs	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) vidputs (chtype, NCURSES_OUTC);		\/* implemented *\/$/;"	p	typeref:typename:int
view	src/view.h	/^struct view {$/;"	s
view_crs_above	src/view.c	/^bool view_crs_above(view_t *v, cursor_t *c)$/;"	f	typeref:typename:bool
view_crs_above_dist	src/view.c	/^int view_crs_above_dist(view_t *v, cursor_t *c)$/;"	f	typeref:typename:int
view_crs_below	src/view.c	/^bool view_crs_below(view_t *v, cursor_t *c)$/;"	f	typeref:typename:bool
view_crs_below_dist	src/view.c	/^int view_crs_below_dist(view_t *v, cursor_t *c)$/;"	f	typeref:typename:int
view_crs_leftward	src/view.c	/^bool view_crs_leftward(view_t *v, cursor_t *c)$/;"	f	typeref:typename:bool
view_crs_leftward_dist	src/view.c	/^int view_crs_leftward_dist(view_t *v, cursor_t *c)$/;"	f	typeref:typename:int
view_crs_rightward	src/view.c	/^bool view_crs_rightward(view_t *v, cursor_t *c)$/;"	f	typeref:typename:bool
view_crs_rightward_dist	src/view.c	/^int view_crs_rightward_dist(view_t *v, cursor_t *c)$/;"	f	typeref:typename:int
view_cursor_display_col	src/view.c	/^int view_cursor_display_col(view_t *v, cursor_t *c)$/;"	f	typeref:typename:int
view_cursor_display_col	src/view.h	/^int view_cursor_display_col(view_t *v, cursor_t *c);$/;"	p	typeref:typename:int
view_cursor_display_row	src/view.c	/^int view_cursor_display_row(view_t *v, cursor_t *c)$/;"	f	typeref:typename:int
view_cursor_display_row	src/view.h	/^int view_cursor_display_row(view_t *v, cursor_t *c);$/;"	p	typeref:typename:int
view_disp_first_col	src/display.c	/^		       int view_disp_top_row, int view_disp_first_col)$/;"	z	function:display_fbuf_line	typeref:typename:int	file:
view_disp_top_row	src/display.c	/^		       int view_disp_top_row, int view_disp_first_col)$/;"	z	function:display_fbuf_line	typeref:typename:int	file:
view_display_first_col	src/view.c	/^int view_display_first_col(view_t *v)$/;"	f	typeref:typename:int
view_display_first_col	src/view.h	/^int view_display_first_col(view_t *v);$/;"	p	typeref:typename:int
view_display_top_row	src/view.c	/^int view_display_top_row(view_t *v)$/;"	f	typeref:typename:int
view_display_top_row	src/view.h	/^int view_display_top_row(view_t *v);$/;"	p	typeref:typename:int
view_height	src/view.c	/^int view_height(view_t *v)$/;"	f	typeref:typename:int
view_height	src/view.h	/^int view_height(view_t *v);$/;"	p	typeref:typename:int
view_init	src/view.c	/^void view_init(view_t *v, WINDOW *w, int top_row_offset, int bot_row_offset, $/;"	f	typeref:typename:void
view_init	src/view.h	/^void view_init(view_t *v, WINDOW *w, int top_row_offset, int bot_row_offset, $/;"	p	typeref:typename:void
view_lines_bot_row	src/view.c	/^int view_lines_bot_row(view_t *v)$/;"	f	typeref:typename:int
view_lines_last_col	src/view.c	/^int view_lines_last_col(view_t *v)$/;"	f	typeref:typename:int
view_reset	src/view.c	/^void view_reset(view_t *v)$/;"	f	typeref:typename:void
view_reset	src/view.h	/^void view_reset(view_t *v);$/;"	p	typeref:typename:void
view_sync_crs_col	src/view.c	/^void view_sync_crs_col(view_t *v, cursor_t *c, int linelen)$/;"	f	typeref:typename:void
view_sync_crs_col_leftward	src/view.c	/^void view_sync_crs_col_leftward(view_t *v, cursor_t *c, int linelen)$/;"	f	typeref:typename:void
view_sync_crs_col_rightward	src/view.c	/^void view_sync_crs_col_rightward(view_t *v, cursor_t *c, int linelen)$/;"	f	typeref:typename:void
view_sync_crs_row	src/view.c	/^void view_sync_crs_row(view_t *v, cursor_t *c, int nlines)$/;"	f	typeref:typename:void
view_sync_crs_row_above	src/view.c	/^void view_sync_crs_row_above(view_t *v, cursor_t *c, int nlines)$/;"	f	typeref:typename:void
view_sync_crs_row_below	src/view.c	/^void view_sync_crs_row_below(view_t *v, cursor_t *c, int nlines)$/;"	f	typeref:typename:void
view_sync_cursor	src/view.c	/^void view_sync_cursor(view_t *v, cursor_t *c, lines_t *ls)$/;"	f	typeref:typename:void
view_sync_cursor	src/view.h	/^void view_sync_cursor(view_t *v, cursor_t *c, lines_t *ls);$/;"	p	typeref:typename:void
view_t	src/view.h	/^typedef struct view view_t;$/;"	t	typeref:struct:view
view_width	src/display.c	/^void display_fbuf_line(line_t *l, int i, int first_col, int view_width, $/;"	z	function:display_fbuf_line	typeref:typename:int	file:
view_width	src/view.c	/^int view_width(view_t *v)$/;"	f	typeref:typename:int
view_width	src/view.h	/^int view_width(view_t *v);$/;"	p	typeref:typename:int
vline	/usr/include/curses.h	/^#define vline(/;"	d
vline	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) vline (chtype, int);				\/* generated *\/$/;"	p	typeref:typename:int
vline_set	/usr/include/curses.h	/^#define vline_set(/;"	d
vline_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) vline_set (const cchar_t *, int);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
vsscanf	/usr/include/curses.h	/^#define vsscanf(/;"	d
vsscanf	/usr/include/curses.h	/^NCURSES_EXPORT(int) vsscanf(const char *, const char *, va_list);$/;"	p	typeref:typename:int
vw_printw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) vw_printw (WINDOW *, const char *,va_list);	\/* implemented *\/$/;"	p	typeref:typename:int
vw_scanw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) vw_scanw (WINDOW *, const char *,va_list);	\/* implemented *\/$/;"	p	typeref:typename:int
vwprintw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) vwprintw (WINDOW *, const char *,va_list) GCC_DEPRECATED(use vw_print/;"	p	typeref:typename:int
vwscanw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) vwscanw (WINDOW *, const char *,va_list) GCC_DEPRECATED(use vw_scanw)/;"	p	typeref:typename:int
w	src/cmd/acmd.c	/^char *acmd_fquit_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:acmd_fquit_handler	typeref:typename:WINDOW *	file:
w	src/cmd/acmd.c	/^char *acmd_list_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:acmd_list_handler	typeref:typename:WINDOW *	file:
w	src/cmd/acmd.c	/^char *acmd_quit_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:acmd_quit_handler	typeref:typename:WINDOW *	file:
w	src/cmd/cparse.c	/^char *cmds_parse(char *args, cmds_t *cs, bufs_t *b, WINDOW *w)$/;"	z	function:cmds_parse	typeref:typename:WINDOW *	file:
w	src/cmd/cparse.c	/^char *cmds_parse_aux(char *cmd_name, char *remain_args, cmds_t *cs, bufs_t *b, WINDOW *w)$/;"	z	function:cmds_parse_aux	typeref:typename:WINDOW *	file:
w	src/cmd/fcmd.c	/^char *fcmd_close_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_close_handler	typeref:typename:WINDOW *	file:
w	src/cmd/fcmd.c	/^char *fcmd_edit_handler(char *fpath, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_edit_handler	typeref:typename:WINDOW *	file:
w	src/cmd/fcmd.c	/^char *fcmd_fclose_handler(char *s, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_fclose_handler	typeref:typename:WINDOW *	file:
w	src/cmd/fcmd.c	/^char *fcmd_jump_handler(char *sid, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_jump_handler	typeref:typename:WINDOW *	file:
w	src/cmd/fcmd.c	/^char *fcmd_open_handler(char *fpath, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_open_handler	typeref:typename:WINDOW *	file:
w	src/cmd/fcmd.c	/^char *fcmd_write_handle_other(bufs_t *b, char *fpath, WINDOW *w)$/;"	z	function:fcmd_write_handle_other	typeref:typename:WINDOW *	file:
w	src/cmd/fcmd.c	/^char *fcmd_write_handler(char *fpath, bufs_t *b, WINDOW *w)$/;"	z	function:fcmd_write_handler	typeref:typename:WINDOW *	file:
w	src/fbuf/bufs.c	/^int bufs_new(bufs_t *b, WINDOW *w, int tabsz)$/;"	z	function:bufs_new	typeref:typename:WINDOW *	file:
w	src/fbuf/bufs.c	/^int bufs_open(bufs_t *b, char *fpath, WINDOW *w, int tabsz)$/;"	z	function:bufs_open	typeref:typename:WINDOW *	file:
w	src/fbuf/bufs.c	/^int bufs_write_other(bufs_t *b, char *fpath, WINDOW *w, int tabsz)$/;"	z	function:bufs_write_other	typeref:typename:WINDOW *	file:
w	src/fbuf/bufs.c	/^void bufs_close(bufs_t *b, WINDOW *w)$/;"	z	function:bufs_close	typeref:typename:WINDOW *	file:
w	src/fbuf/bufs.c	/^void bufs_init(bufs_t *b, WINDOW *w, char *fpaths[], int nfpaths)$/;"	z	function:bufs_init	typeref:typename:WINDOW *	file:
w	src/fbuf/elbuf.c	/^void elbuf_init(elbuf_t *e, WINDOW *w)$/;"	z	function:elbuf_init	typeref:typename:WINDOW *	file:
w	src/fbuf/elinp.c	/^void elinp_enter(bufs_t *b, cmds_t *cs, WINDOW *w)$/;"	z	function:elinp_enter	typeref:typename:WINDOW *	file:
w	src/fbuf/elinp.c	/^void elinp_handle_char(bufs_t *b, int c, cmds_t *cs, WINDOW *w)$/;"	z	function:elinp_handle_char	typeref:typename:WINDOW *	file:
w	src/fbuf/elinp.c	/^void elinp_handle_reg_char(bufs_t *b, int c, cmds_t *cs, WINDOW *w)$/;"	z	function:elinp_handle_reg_char	typeref:typename:WINDOW *	file:
w	src/fbuf/fbio.c	/^fbuf_t *fbuf_fork(fbuf_t *f, WINDOW *w, int id)$/;"	z	function:fbuf_fork	typeref:typename:WINDOW *	file:
w	src/fbuf/fbio.c	/^fbuf_t *fbuf_init(WINDOW *w, int tabsz, int id)$/;"	z	function:fbuf_init	typeref:typename:WINDOW *	file:
w	src/fbuf/fbio.c	/^fbuf_t *fbuf_new(WINDOW *w, int tabsz, int id)$/;"	z	function:fbuf_new	typeref:typename:WINDOW *	file:
w	src/fbuf/fbio.c	/^fbuf_t *fbuf_open(char *fpath, WINDOW *w, int tabsz, int id)$/;"	z	function:fbuf_open	typeref:typename:WINDOW *	file:
w	src/getch.c	/^int mygetch(WINDOW *w)$/;"	z	function:mygetch	typeref:typename:WINDOW *	file:
w	src/view.c	/^void view_init(view_t *v, WINDOW *w, int top_row_offset, int bot_row_offset, $/;"	z	function:view_init	typeref:typename:WINDOW *	file:
wadd_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wadd_wch (WINDOW *,const cchar_t *);		\/* implemented *\/$/;"	p	typeref:typename:int
wadd_wchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wadd_wchnstr (WINDOW *,const cchar_t *,int);	\/* implemented *\/$/;"	p	typeref:typename:int
wadd_wchstr	/usr/include/curses.h	/^#define wadd_wchstr(/;"	d
wadd_wchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wadd_wchstr (WINDOW *,const cchar_t *);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
waddch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) waddch (WINDOW *, const chtype);		\/* implemented *\/$/;"	p	typeref:typename:int
waddchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) waddchnstr (WINDOW *,const chtype *,int);	\/* implemented *\/$/;"	p	typeref:typename:int
waddchstr	/usr/include/curses.h	/^#define waddchstr(/;"	d
waddchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) waddchstr (WINDOW *,const chtype *);		\/* generated *\/$/;"	p	typeref:typename:int
waddnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) waddnstr (WINDOW *,const char *,int);	\/* implemented *\/$/;"	p	typeref:typename:int
waddnwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) waddnwstr (WINDOW *,const wchar_t *,int);	\/* implemented *\/$/;"	p	typeref:typename:int
waddstr	/usr/include/curses.h	/^#define waddstr(/;"	d
waddstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) waddstr (WINDOW *,const char *);		\/* generated *\/$/;"	p	typeref:typename:int
waddwstr	/usr/include/curses.h	/^#define waddwstr(/;"	d
waddwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) waddwstr (WINDOW *,const wchar_t *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
wattr_get	/usr/include/curses.h	/^#define wattr_get(/;"	d
wattr_get	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wattr_get (WINDOW *, attr_t *, NCURSES_PAIRS_T *, void *);	\/* genera/;"	p	typeref:typename:int
wattr_off	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wattr_off (WINDOW *, attr_t, void *);	\/* implemented *\/$/;"	p	typeref:typename:int
wattr_on	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wattr_on (WINDOW *, attr_t, void *);		\/* implemented *\/$/;"	p	typeref:typename:int
wattr_set	/usr/include/curses.h	/^#define wattr_set(/;"	d
wattr_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wattr_set (WINDOW *, attr_t, NCURSES_PAIRS_T, void *);	\/* generated /;"	p	typeref:typename:int
wattroff	/usr/include/curses.h	/^#define wattroff(/;"	d
wattroff	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wattroff (WINDOW *, int);			\/* generated *\/$/;"	p	typeref:typename:int
wattron	/usr/include/curses.h	/^#define wattron(/;"	d
wattron	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wattron (WINDOW *, int);			\/* generated *\/$/;"	p	typeref:typename:int
wattrset	/usr/include/curses.h	/^#define wattrset(/;"	d
wattrset	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wattrset (WINDOW *, int);			\/* generated *\/$/;"	p	typeref:typename:int
wbkgd	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wbkgd (WINDOW *, chtype);			\/* implemented *\/$/;"	p	typeref:typename:int
wbkgdset	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) wbkgdset (WINDOW *,chtype);			\/* implemented *\/$/;"	p	typeref:typename:void
wbkgrnd	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wbkgrnd (WINDOW *,const cchar_t *);		\/* implemented *\/$/;"	p	typeref:typename:int
wbkgrndset	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) wbkgrndset (WINDOW *,const cchar_t *);	\/* implemented *\/$/;"	p	typeref:typename:void
wborder	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wborder (WINDOW *,chtype,chtype,chtype,chtype,chtype,chtype,chtype,ch/;"	p	typeref:typename:int
wborder_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wborder_set (WINDOW *,const cchar_t*,const cchar_t*,const cchar_t*,co/;"	p	typeref:typename:int
wchgat	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wchgat (WINDOW *, int, attr_t, NCURSES_PAIRS_T, const void *);\/* imp/;"	p	typeref:typename:int
wclear	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wclear (WINDOW *);				\/* implemented *\/$/;"	p	typeref:typename:int
wclrtobot	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wclrtobot (WINDOW *);			\/* implemented *\/$/;"	p	typeref:typename:int
wclrtoeol	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wclrtoeol (WINDOW *);			\/* implemented *\/$/;"	p	typeref:typename:int
wcolor_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wcolor_set (WINDOW*,NCURSES_PAIRS_T,void*);		\/* implemented *\/$/;"	p	typeref:typename:int
wcursyncup	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) wcursyncup (WINDOW *);			\/* implemented *\/$/;"	p	typeref:typename:void
wdelch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wdelch (WINDOW *);				\/* implemented *\/$/;"	p	typeref:typename:int
wdeleteln	/usr/include/curses.h	/^#define wdeleteln(/;"	d
wdeleteln	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wdeleteln (WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
wecho_wchar	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wecho_wchar (WINDOW *, const cchar_t *);	\/* implemented *\/$/;"	p	typeref:typename:int
wechochar	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wechochar (WINDOW *, const chtype);		\/* implemented *\/$/;"	p	typeref:typename:int
wenclose	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool)    wenclose (const WINDOW *, int, int);$/;"	p	typeref:typename:bool
werase	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) werase (WINDOW *);				\/* implemented *\/$/;"	p	typeref:typename:int
wget_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wget_wch (WINDOW *, wint_t *);		\/* implemented *\/$/;"	p	typeref:typename:int
wget_wstr	/usr/include/curses.h	/^#define wget_wstr(/;"	d
wget_wstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wget_wstr (WINDOW *, wint_t *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
wgetbkgrnd	/usr/include/curses.h	/^#define wgetbkgrnd(/;"	d
wgetbkgrnd	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wgetbkgrnd (WINDOW *, cchar_t *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
wgetch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wgetch (WINDOW *);				\/* implemented *\/$/;"	p	typeref:typename:int
wgetch_events	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wgetch_events (WINDOW *, _nc_eventlist *);	\/* experimental *\/$/;"	p	typeref:typename:int
wgetdelay	/usr/include/curses.h	/^#define wgetdelay(/;"	d
wgetdelay	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wgetdelay (const WINDOW *);		\/* generated *\/$/;"	p	typeref:typename:int
wgetn_wstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wgetn_wstr (WINDOW *, wint_t *, int);	\/* implemented *\/$/;"	p	typeref:typename:int
wgetnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wgetnstr (WINDOW *,char *,int);		\/* implemented *\/$/;"	p	typeref:typename:int
wgetnstr_events	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wgetnstr_events (WINDOW *,char *,int,_nc_eventlist *);\/* experimenta/;"	p	typeref:typename:int
wgetparent	/usr/include/curses.h	/^#define wgetparent(/;"	d
wgetparent	/usr/include/curses.h	/^extern NCURSES_EXPORT(WINDOW *) wgetparent (const WINDOW *);	\/* generated *\/$/;"	p	typeref:typename:WINDOW *
wgetscrreg	/usr/include/curses.h	/^#define wgetscrreg(/;"	d
wgetscrreg	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wgetscrreg (const WINDOW *, int *, int *); \/* generated *\/$/;"	p	typeref:typename:int
wgetstr	/usr/include/curses.h	/^#define wgetstr(/;"	d
wgetstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wgetstr (WINDOW *, char *);			\/* generated *\/$/;"	p	typeref:typename:int
whline	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) whline (WINDOW *, chtype, int);		\/* implemented *\/$/;"	p	typeref:typename:int
whline_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) whline_set (WINDOW *, const cchar_t *, int);	\/* implemented *\/$/;"	p	typeref:typename:int
win_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) win_wch (WINDOW *, cchar_t *);		\/* implemented *\/$/;"	p	typeref:typename:int
win_wchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) win_wchnstr (WINDOW *, cchar_t *, int);	\/* implemented *\/$/;"	p	typeref:typename:int
win_wchstr	/usr/include/curses.h	/^#define win_wchstr(/;"	d
win_wchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) win_wchstr (WINDOW *, cchar_t *);		\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
winch	/usr/include/curses.h	/^extern NCURSES_EXPORT(chtype) winch (WINDOW *);				\/* implemented *\/$/;"	p	typeref:typename:chtype
winchnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) winchnstr (WINDOW *, chtype *, int);		\/* implemented *\/$/;"	p	typeref:typename:int
winchstr	/usr/include/curses.h	/^#define winchstr(/;"	d
winchstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) winchstr (WINDOW *, chtype *);		\/* generated *\/$/;"	p	typeref:typename:int
winnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) winnstr (WINDOW *, char *, int);		\/* implemented *\/$/;"	p	typeref:typename:int
winnwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) winnwstr (WINDOW *, wchar_t *, int);		\/* implemented *\/$/;"	p	typeref:typename:int
wins_nwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wins_nwstr (WINDOW *, const wchar_t *, int);	\/* implemented *\/$/;"	p	typeref:typename:int
wins_wch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wins_wch (WINDOW *, const cchar_t *);	\/* implemented *\/$/;"	p	typeref:typename:int
wins_wstr	/usr/include/curses.h	/^#define wins_wstr(/;"	d
wins_wstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wins_wstr (WINDOW *, const wchar_t *);	\/* generated:WIDEC *\/$/;"	p	typeref:typename:int
winsch	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) winsch (WINDOW *, chtype);			\/* implemented *\/$/;"	p	typeref:typename:int
winsdelln	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) winsdelln (WINDOW *,int);			\/* implemented *\/$/;"	p	typeref:typename:int
winsertln	/usr/include/curses.h	/^#define winsertln(/;"	d
winsertln	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) winsertln (WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
winsnstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) winsnstr (WINDOW *, const char *,int);	\/* implemented *\/$/;"	p	typeref:typename:int
winsstr	/usr/include/curses.h	/^#define winsstr(/;"	d
winsstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) winsstr (WINDOW *, const char *);		\/* generated *\/$/;"	p	typeref:typename:int
winstr	/usr/include/curses.h	/^#define winstr(/;"	d
winstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) winstr (WINDOW *, char *);			\/* generated *\/$/;"	p	typeref:typename:int
winwstr	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) winwstr (WINDOW *, wchar_t *);		\/* implemented *\/$/;"	p	typeref:typename:int
wmouse_trafo	/usr/include/curses.h	/^extern NCURSES_EXPORT(bool)    wmouse_trafo (const WINDOW*, int*, int*, bool);$/;"	p	typeref:typename:bool
wmove	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wmove (WINDOW *,int,int);			\/* implemented *\/$/;"	p	typeref:typename:int
wnoutrefresh	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wnoutrefresh (WINDOW *);			\/* implemented *\/$/;"	p	typeref:typename:int
wprintw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wprintw (WINDOW *, const char *,...)		\/* implemented *\/$/;"	p	typeref:typename:int
wredrawln	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wredrawln (WINDOW *,int,int);		\/* implemented *\/$/;"	p	typeref:typename:int
wrefresh	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wrefresh (WINDOW *);				\/* implemented *\/$/;"	p	typeref:typename:int
wresize	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wresize (WINDOW *, int, int);$/;"	p	typeref:typename:int
writev	/usr/include/sys/uio.h	/^extern ssize_t writev (int __fd, const struct iovec *__iovec, int __count)$/;"	p	typeref:typename:ssize_t
wscanw	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wscanw (WINDOW *, const char *,...)		\/* implemented *\/$/;"	p	typeref:typename:int
wscrl	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wscrl (WINDOW *,int);			\/* implemented *\/$/;"	p	typeref:typename:int
wsetscrreg	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wsetscrreg (WINDOW *,int,int);		\/* implemented *\/$/;"	p	typeref:typename:int
wstandend	/usr/include/curses.h	/^#define wstandend(/;"	d
wstandend	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wstandend (WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
wstandout	/usr/include/curses.h	/^#define wstandout(/;"	d
wstandout	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wstandout (WINDOW *);			\/* generated *\/$/;"	p	typeref:typename:int
wsyncdown	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) wsyncdown (WINDOW *);			\/* implemented *\/$/;"	p	typeref:typename:void
wsyncup	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) wsyncup (WINDOW *);				\/* implemented *\/$/;"	p	typeref:typename:void
wtimeout	/usr/include/curses.h	/^extern NCURSES_EXPORT(void) wtimeout (WINDOW *,int);			\/* implemented *\/$/;"	p	typeref:typename:void
wtouchln	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wtouchln (WINDOW *,int,int,int);		\/* implemented *\/$/;"	p	typeref:typename:int
wunctrl	/usr/include/curses.h	/^extern NCURSES_EXPORT(wchar_t*) wunctrl (cchar_t *);			\/* implemented *\/$/;"	p	typeref:typename:wchar_t *
wvline	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wvline (WINDOW *,chtype,int);		\/* implemented *\/$/;"	p	typeref:typename:int
wvline_set	/usr/include/curses.h	/^extern NCURSES_EXPORT(int) wvline_set (WINDOW *, const cchar_t *, int);	\/* implemented *\/$/;"	p	typeref:typename:int
x	/usr/include/curses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon9db876bb0608	typeref:typename:int
y	/usr/include/curses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon9db876bb0608	typeref:typename:int
z	/usr/include/curses.h	/^    int x, y, z;	\/* event coordinates (character-cell) *\/$/;"	m	struct:__anon9db876bb0608	typeref:typename:int
